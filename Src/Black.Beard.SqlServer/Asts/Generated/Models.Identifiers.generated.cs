#nullable disable
// Generated by ScriptClassIdentifiers.cs (Sunday, April 16, 2023)
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bb.SqlServer.Asts
{
    using System;
    using Bb.Asts;
    using Bb.Parsers;
    using Antlr4.Runtime;
    using Antlr4.Runtime.Tree;
    
    
    /// <summary>
    /// pwd
    /// 	 : stringtext
    /// </summary>
    public partial class AstPwd : AstTerminalIdentifier
    {
        
        private AstStringtext _value;
        
        public AstPwd(ITerminalNode t, AstStringtext value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstPwd(ParserRuleContext ctx, AstStringtext value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstPwd(Position position, AstStringtext value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstStringtext Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitPwd(this);
        }
    }
    
    /// <summary>
    /// host
    /// 	 : HOST
    /// </summary>
    public partial class AstHost : AstTerminalIdentifier
    {
        
        private AstHost _value;
        
        public AstHost(ITerminalNode t, AstHost value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstHost(ParserRuleContext ctx, AstHost value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstHost(Position position, AstHost value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstHost Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitHost(this);
        }
    }
    
    /// <summary>
    /// id_or_string
    /// 	 : id_
    /// 	 | stringtext
    /// </summary>
    public partial class AstIdOrString : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstIdOrString(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstIdOrString(ITerminalNode t, AstStringtext value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstIdOrString(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstIdOrString(ParserRuleContext ctx, AstStringtext value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstIdOrString(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstIdOrString(Position position, AstStringtext value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitIdOrString(this);
        }
    }
    
    /// <summary>
    /// principal_id
    /// 	 : id_
    /// 	 | PUBLIC
    /// </summary>
    public partial class AstPrincipalId : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstPrincipalId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstPrincipalId(ITerminalNode t, AstPublic value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstPrincipalId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstPrincipalId(ParserRuleContext ctx, AstPublic value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstPrincipalId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstPrincipalId(Position position, AstPublic value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitPrincipalId(this);
        }
    }
    
    /// <summary>
    /// transaction_ref
    /// 	 : id_
    /// 	 | local_id
    /// </summary>
    public partial class AstTransactionRef : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstTransactionRef(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstTransactionRef(ITerminalNode t, AstLocalId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstTransactionRef(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstTransactionRef(ParserRuleContext ctx, AstLocalId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstTransactionRef(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstTransactionRef(Position position, AstLocalId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitTransactionRef(this);
        }
    }
    
    /// <summary>
    /// table_alias
    /// 	 : id_
    /// </summary>
    public partial class AstTableAlias : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstTableAlias(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstTableAlias(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstTableAlias(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitTableAlias(this);
        }
    }
    
    /// <summary>
    /// column_alias
    /// 	 : id_
    /// 	 | stringtext
    /// </summary>
    public partial class AstColumnAlias : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstColumnAlias(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstColumnAlias(ITerminalNode t, AstStringtext value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstColumnAlias(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstColumnAlias(ParserRuleContext ctx, AstStringtext value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstColumnAlias(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstColumnAlias(Position position, AstStringtext value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitColumnAlias(this);
        }
    }
    
    /// <summary>
    /// cursor_name
    /// 	 : id_
    /// 	 | local_id
    /// </summary>
    public partial class AstCursorName : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstCursorName(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstCursorName(ITerminalNode t, AstLocalId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstCursorName(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstCursorName(ParserRuleContext ctx, AstLocalId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstCursorName(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstCursorName(Position position, AstLocalId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitCursorName(this);
        }
    }
    
    /// <summary>
    /// id_
    /// 	 : ID
    /// 	 | empty_value
    /// 	 | DOUBLE_QUOTE_BLANK
    /// 	 | SQUARE_BRACKET_ID
    /// 	 | keyword
    /// </summary>
    public partial class AstId : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstId(ITerminalNode t, String value) : 
                base(t)
        {
            _value = ((AstTerminalString)(value));
        }
        
        public AstId(ITerminalNode t, AstEmptyValue value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstId(ITerminalNode t, AstKeyword value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstId(ParserRuleContext ctx, String value) : 
                base(ctx)
        {
            _value = ((AstTerminalString)(value));
        }
        
        public AstId(ParserRuleContext ctx, AstEmptyValue value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstId(ParserRuleContext ctx, AstKeyword value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstId(Position position, String value) : 
                base(position)
        {
            _value = ((AstTerminalString)(value));
        }
        
        public AstId(Position position, AstEmptyValue value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstId(Position position, AstKeyword value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitId(this);
        }
    }
    
    /// <summary>
    /// simple_id
    /// 	 : ID
    /// </summary>
    public partial class AstSimpleId : AstTerminalIdentifier
    {
        
        private AstTerminalString _value;
        
        public AstSimpleId(ITerminalNode t, String value) : 
                base(t)
        {
            _value = ((AstTerminalString)(value));
        }
        
        public AstSimpleId(ParserRuleContext ctx, String value) : 
                base(ctx)
        {
            _value = ((AstTerminalString)(value));
        }
        
        public AstSimpleId(Position position, String value) : 
                base(position)
        {
            _value = ((AstTerminalString)(value));
        }
        
        public virtual AstTerminalString Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitSimpleId(this);
        }
    }
    
    /// <summary>
    /// filestream_filegroup_or_partition_schema_id
    /// 	 : id_
    /// </summary>
    public partial class AstFilestreamFilegroupOrPartitionSchemaId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstFilestreamFilegroupOrPartitionSchemaId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstFilestreamFilegroupOrPartitionSchemaId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstFilestreamFilegroupOrPartitionSchemaId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitFilestreamFilegroupOrPartitionSchemaId(this);
        }
    }
    
    /// <summary>
    /// action_id
    /// 	 : id_
    /// </summary>
    public partial class AstActionId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstActionId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstActionId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstActionId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitActionId(this);
        }
    }
    
    /// <summary>
    /// aggregate_id
    /// 	 : id_
    /// </summary>
    public partial class AstAggregateId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstAggregateId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstAggregateId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstAggregateId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitAggregateId(this);
        }
    }
    
    /// <summary>
    /// schema_identifier
    /// 	 : id_
    /// </summary>
    public partial class AstSchemaIdentifier : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstSchemaIdentifier(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstSchemaIdentifier(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstSchemaIdentifier(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitSchemaIdentifier(this);
        }
    }
    
    /// <summary>
    /// assembly_id
    /// 	 : id_
    /// </summary>
    public partial class AstAssemblyId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstAssemblyId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstAssemblyId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstAssemblyId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitAssemblyId(this);
        }
    }
    
    /// <summary>
    /// asym_key_id
    /// 	 : id_
    /// </summary>
    public partial class AstAsymKeyId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstAsymKeyId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstAsymKeyId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstAsymKeyId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitAsymKeyId(this);
        }
    }
    
    /// <summary>
    /// audit_action_group_id
    /// 	 : id_
    /// </summary>
    public partial class AstAuditActionGroupId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstAuditActionGroupId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstAuditActionGroupId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstAuditActionGroupId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitAuditActionGroupId(this);
        }
    }
    
    /// <summary>
    /// audit_guid_id
    /// 	 : id_
    /// </summary>
    public partial class AstAuditGuidId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstAuditGuidId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstAuditGuidId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstAuditGuidId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitAuditGuidId(this);
        }
    }
    
    /// <summary>
    /// audit_id
    /// 	 : id_
    /// </summary>
    public partial class AstAuditId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstAuditId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstAuditId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstAuditId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitAuditId(this);
        }
    }
    
    /// <summary>
    /// user_id
    /// 	 : id_
    /// </summary>
    public partial class AstUserId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstUserId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstUserId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstUserId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitUserId(this);
        }
    }
    
    /// <summary>
    /// backup_id
    /// 	 : id_
    /// </summary>
    public partial class AstBackupId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstBackupId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstBackupId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstBackupId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitBackupId(this);
        }
    }
    
    /// <summary>
    /// binding_id
    /// 	 : id_
    /// </summary>
    public partial class AstBindingId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstBindingId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstBindingId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstBindingId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitBindingId(this);
        }
    }
    
    /// <summary>
    /// catalog_id
    /// 	 : id_
    /// </summary>
    public partial class AstCatalogId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstCatalogId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstCatalogId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstCatalogId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitCatalogId(this);
        }
    }
    
    /// <summary>
    /// certificate_id
    /// 	 : id_
    /// </summary>
    public partial class AstCertificateId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstCertificateId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstCertificateId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstCertificateId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitCertificateId(this);
        }
    }
    
    /// <summary>
    /// class_id
    /// 	 : id_
    /// </summary>
    public partial class AstClassId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstClassId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstClassId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstClassId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitClassId(this);
        }
    }
    
    /// <summary>
    /// collation_id
    /// 	 : id_
    /// </summary>
    public partial class AstCollationId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstCollationId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstCollationId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstCollationId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitCollationId(this);
        }
    }
    
    /// <summary>
    /// column_encryption_key_id
    /// 	 : id_
    /// </summary>
    public partial class AstColumnEncryptionKeyId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstColumnEncryptionKeyId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstColumnEncryptionKeyId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstColumnEncryptionKeyId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitColumnEncryptionKeyId(this);
        }
    }
    
    /// <summary>
    /// column_or_argument_id
    /// 	 : id_
    /// </summary>
    public partial class AstColumnOrArgumentId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstColumnOrArgumentId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstColumnOrArgumentId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstColumnOrArgumentId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitColumnOrArgumentId(this);
        }
    }
    
    /// <summary>
    /// constraint_id
    /// 	 : id_
    /// </summary>
    public partial class AstConstraintId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstConstraintId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstConstraintId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstConstraintId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitConstraintId(this);
        }
    }
    
    /// <summary>
    /// credential_id
    /// 	 : id_
    /// </summary>
    public partial class AstCredentialId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstCredentialId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstCredentialId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstCredentialId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitCredentialId(this);
        }
    }
    
    /// <summary>
    /// cryptographic_provider_id
    /// 	 : id_
    /// </summary>
    public partial class AstCryptographicProviderId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstCryptographicProviderId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstCryptographicProviderId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstCryptographicProviderId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitCryptographicProviderId(this);
        }
    }
    
    /// <summary>
    /// data_source_id
    /// 	 : id_
    /// </summary>
    public partial class AstDataSourceId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstDataSourceId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstDataSourceId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstDataSourceId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitDataSourceId(this);
        }
    }
    
    /// <summary>
    /// service_id
    /// 	 : id_
    /// </summary>
    public partial class AstServiceId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstServiceId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstServiceId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstServiceId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitServiceId(this);
        }
    }
    
    /// <summary>
    /// encryptor_id
    /// 	 : id_
    /// </summary>
    public partial class AstEncryptorId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstEncryptorId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstEncryptorId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstEncryptorId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitEncryptorId(this);
        }
    }
    
    /// <summary>
    /// endpoint_id
    /// 	 : id_
    /// </summary>
    public partial class AstEndpointId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstEndpointId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstEndpointId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstEndpointId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitEndpointId(this);
        }
    }
    
    /// <summary>
    /// event_customizable_attribute_id
    /// 	 : id_
    /// </summary>
    public partial class AstEventCustomizableAttributeId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstEventCustomizableAttributeId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstEventCustomizableAttributeId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstEventCustomizableAttributeId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitEventCustomizableAttributeId(this);
        }
    }
    
    /// <summary>
    /// event_field_id
    /// 	 : id_
    /// </summary>
    public partial class AstEventFieldId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstEventFieldId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstEventFieldId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstEventFieldId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitEventFieldId(this);
        }
    }
    
    /// <summary>
    /// event_module_guid_id
    /// 	 : id_
    /// </summary>
    public partial class AstEventModuleGuidId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstEventModuleGuidId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstEventModuleGuidId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstEventModuleGuidId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitEventModuleGuidId(this);
        }
    }
    
    /// <summary>
    /// event_notification_id
    /// 	 : id_
    /// </summary>
    public partial class AstEventNotificationId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstEventNotificationId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstEventNotificationId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstEventNotificationId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitEventNotificationId(this);
        }
    }
    
    /// <summary>
    /// event_package_id
    /// 	 : id_
    /// </summary>
    public partial class AstEventPackageId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstEventPackageId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstEventPackageId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstEventPackageId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitEventPackageId(this);
        }
    }
    
    /// <summary>
    /// event_session_id
    /// 	 : id_
    /// </summary>
    public partial class AstEventSessionId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstEventSessionId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstEventSessionId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstEventSessionId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitEventSessionId(this);
        }
    }
    
    /// <summary>
    /// event_type_or_group_id
    /// 	 : id_
    /// </summary>
    public partial class AstEventTypeOrGroupId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstEventTypeOrGroupId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstEventTypeOrGroupId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstEventTypeOrGroupId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitEventTypeOrGroupId(this);
        }
    }
    
    /// <summary>
    /// ext_type_id
    /// 	 : id_
    /// </summary>
    public partial class AstExtTypeId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstExtTypeId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstExtTypeId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstExtTypeId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitExtTypeId(this);
        }
    }
    
    /// <summary>
    /// external_data_source_id
    /// 	 : id_
    /// </summary>
    public partial class AstExternalDataSourceId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstExternalDataSourceId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstExternalDataSourceId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstExternalDataSourceId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitExternalDataSourceId(this);
        }
    }
    
    /// <summary>
    /// external_file_format_id
    /// 	 : id_
    /// </summary>
    public partial class AstExternalFileFormatId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstExternalFileFormatId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstExternalFileFormatId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstExternalFileFormatId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitExternalFileFormatId(this);
        }
    }
    
    /// <summary>
    /// external_pool_id
    /// 	 : id_
    /// </summary>
    public partial class AstExternalPoolId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstExternalPoolId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstExternalPoolId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstExternalPoolId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitExternalPoolId(this);
        }
    }
    
    /// <summary>
    /// function_id
    /// 	 : id_
    /// </summary>
    public partial class AstFunctionId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstFunctionId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstFunctionId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstFunctionId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitFunctionId(this);
        }
    }
    
    /// <summary>
    /// group_id
    /// 	 : id_
    /// </summary>
    public partial class AstGroupId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstGroupId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstGroupId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstGroupId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitGroupId(this);
        }
    }
    
    /// <summary>
    /// index_id
    /// 	 : id_
    /// </summary>
    public partial class AstIndexId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstIndexId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstIndexId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstIndexId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitIndexId(this);
        }
    }
    
    /// <summary>
    /// language_id
    /// 	 : id_
    /// </summary>
    public partial class AstLanguageId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstLanguageId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstLanguageId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstLanguageId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitLanguageId(this);
        }
    }
    
    /// <summary>
    /// library_id
    /// 	 : id_
    /// </summary>
    public partial class AstLibraryId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstLibraryId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstLibraryId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstLibraryId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitLibraryId(this);
        }
    }
    
    /// <summary>
    /// server_id
    /// 	 : id_
    /// </summary>
    public partial class AstServerId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstServerId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstServerId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstServerId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitServerId(this);
        }
    }
    
    /// <summary>
    /// logical_device_id
    /// 	 : id_
    /// </summary>
    public partial class AstLogicalDeviceId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstLogicalDeviceId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstLogicalDeviceId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstLogicalDeviceId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitLogicalDeviceId(this);
        }
    }
    
    /// <summary>
    /// login_id
    /// 	 : id_
    /// </summary>
    public partial class AstLoginId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstLoginId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstLoginId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstLoginId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitLoginId(this);
        }
    }
    
    /// <summary>
    /// master_key
    /// 	 : id_
    /// </summary>
    public partial class AstMasterKey : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstMasterKey(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstMasterKey(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstMasterKey(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitMasterKey(this);
        }
    }
    
    /// <summary>
    /// method_id
    /// 	 : id_
    /// </summary>
    public partial class AstMethodId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstMethodId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstMethodId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstMethodId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitMethodId(this);
        }
    }
    
    /// <summary>
    /// contract_id
    /// 	 : id_
    /// </summary>
    public partial class AstContractId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstContractId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstContractId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstContractId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitContractId(this);
        }
    }
    
    /// <summary>
    /// module_id
    /// 	 : id_
    /// </summary>
    public partial class AstModuleId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstModuleId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstModuleId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstModuleId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitModuleId(this);
        }
    }
    
    /// <summary>
    /// network_computer
    /// 	 : id_
    /// </summary>
    public partial class AstNetworkComputer : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstNetworkComputer(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstNetworkComputer(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstNetworkComputer(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitNetworkComputer(this);
        }
    }
    
    /// <summary>
    /// role_id
    /// 	 : id_
    /// </summary>
    public partial class AstRoleId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstRoleId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstRoleId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstRoleId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitRoleId(this);
        }
    }
    
    /// <summary>
    /// file_group_id
    /// 	 : id_
    /// </summary>
    public partial class AstFileGroupId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstFileGroupId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstFileGroupId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstFileGroupId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitFileGroupId(this);
        }
    }
    
    /// <summary>
    /// non_static_attr_id
    /// 	 : id_
    /// </summary>
    public partial class AstNonStaticAttrId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstNonStaticAttrId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstNonStaticAttrId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstNonStaticAttrId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitNonStaticAttrId(this);
        }
    }
    
    /// <summary>
    /// notification_id
    /// 	 : id_
    /// </summary>
    public partial class AstNotificationId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstNotificationId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstNotificationId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstNotificationId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitNotificationId(this);
        }
    }
    
    /// <summary>
    /// object_identifier
    /// 	 : id_
    /// </summary>
    public partial class AstObjectIdentifier : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstObjectIdentifier(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstObjectIdentifier(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstObjectIdentifier(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitObjectIdentifier(this);
        }
    }
    
    /// <summary>
    /// owner_id
    /// 	 : id_
    /// </summary>
    public partial class AstOwnerId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstOwnerId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstOwnerId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstOwnerId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitOwnerId(this);
        }
    }
    
    /// <summary>
    /// partition_column_id
    /// 	 : id_
    /// </summary>
    public partial class AstPartitionColumnId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstPartitionColumnId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstPartitionColumnId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstPartitionColumnId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitPartitionColumnId(this);
        }
    }
    
    /// <summary>
    /// pool_id
    /// 	 : id_
    /// </summary>
    public partial class AstPoolId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstPoolId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstPoolId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstPoolId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitPoolId(this);
        }
    }
    
    /// <summary>
    /// predicate_source_id
    /// 	 : id_
    /// </summary>
    public partial class AstPredicateSourceId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstPredicateSourceId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstPredicateSourceId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstPredicateSourceId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitPredicateSourceId(this);
        }
    }
    
    /// <summary>
    /// property_list_id
    /// 	 : id_
    /// </summary>
    public partial class AstPropertyListId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstPropertyListId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstPropertyListId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstPropertyListId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitPropertyListId(this);
        }
    }
    
    /// <summary>
    /// provider_id
    /// 	 : id_
    /// </summary>
    public partial class AstProviderId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstProviderId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstProviderId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstProviderId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitProviderId(this);
        }
    }
    
    /// <summary>
    /// database_id
    /// 	 : id_
    /// </summary>
    public partial class AstDatabaseId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstDatabaseId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstDatabaseId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstDatabaseId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitDatabaseId(this);
        }
    }
    
    /// <summary>
    /// route_id
    /// 	 : id_
    /// </summary>
    public partial class AstRouteId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstRouteId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstRouteId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstRouteId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitRouteId(this);
        }
    }
    
    /// <summary>
    /// rule_id
    /// 	 : id_
    /// </summary>
    public partial class AstRuleId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstRuleId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstRuleId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstRuleId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitRuleId(this);
        }
    }
    
    /// <summary>
    /// column_id
    /// 	 : id_
    /// </summary>
    public partial class AstColumnId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstColumnId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstColumnId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstColumnId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitColumnId(this);
        }
    }
    
    /// <summary>
    /// schema_collection_id
    /// 	 : id_
    /// </summary>
    public partial class AstSchemaCollectionId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstSchemaCollectionId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstSchemaCollectionId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstSchemaCollectionId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitSchemaCollectionId(this);
        }
    }
    
    /// <summary>
    /// security_policy_id
    /// 	 : id_
    /// </summary>
    public partial class AstSecurityPolicyId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstSecurityPolicyId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstSecurityPolicyId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstSecurityPolicyId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitSecurityPolicyId(this);
        }
    }
    
    /// <summary>
    /// security_predicate_function_id
    /// 	 : id_
    /// </summary>
    public partial class AstSecurityPredicateFunctionId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstSecurityPredicateFunctionId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstSecurityPredicateFunctionId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstSecurityPredicateFunctionId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitSecurityPredicateFunctionId(this);
        }
    }
    
    /// <summary>
    /// sequence_id
    /// 	 : id_
    /// </summary>
    public partial class AstSequenceId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstSequenceId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstSequenceId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstSequenceId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitSequenceId(this);
        }
    }
    
    /// <summary>
    /// server_role_id
    /// 	 : id_
    /// </summary>
    public partial class AstServerRoleId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstServerRoleId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstServerRoleId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstServerRoleId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitServerRoleId(this);
        }
    }
    
    /// <summary>
    /// source_list_id
    /// 	 : id_
    /// </summary>
    public partial class AstSourceListId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstSourceListId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstSourceListId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstSourceListId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitSourceListId(this);
        }
    }
    
    /// <summary>
    /// sql_identifier_id
    /// 	 : id_
    /// </summary>
    public partial class AstSqlIdentifierId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstSqlIdentifierId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstSqlIdentifierId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstSqlIdentifierId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitSqlIdentifierId(this);
        }
    }
    
    /// <summary>
    /// static_attr_id
    /// 	 : id_
    /// </summary>
    public partial class AstStaticAttrId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstStaticAttrId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstStaticAttrId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstStaticAttrId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitStaticAttrId(this);
        }
    }
    
    /// <summary>
    /// statistics_id
    /// 	 : id_
    /// </summary>
    public partial class AstStatisticsId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstStatisticsId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstStatisticsId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstStatisticsId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitStatisticsId(this);
        }
    }
    
    /// <summary>
    /// stoplist_id
    /// 	 : id_
    /// </summary>
    public partial class AstStoplistId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstStoplistId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstStoplistId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstStoplistId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitStoplistId(this);
        }
    }
    
    /// <summary>
    /// symmetric_key_id
    /// 	 : id_
    /// </summary>
    public partial class AstSymmetricKeyId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstSymmetricKeyId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstSymmetricKeyId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstSymmetricKeyId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitSymmetricKeyId(this);
        }
    }
    
    /// <summary>
    /// synonym_id
    /// 	 : id_
    /// </summary>
    public partial class AstSynonymId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstSynonymId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstSynonymId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstSynonymId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitSynonymId(this);
        }
    }
    
    /// <summary>
    /// table_or_view_id
    /// 	 : id_
    /// </summary>
    public partial class AstTableOrViewId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstTableOrViewId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstTableOrViewId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstTableOrViewId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitTableOrViewId(this);
        }
    }
    
    /// <summary>
    /// view_id
    /// 	 : id_
    /// </summary>
    public partial class AstViewId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstViewId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstViewId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstViewId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitViewId(this);
        }
    }
    
    /// <summary>
    /// table_id
    /// 	 : id_
    /// </summary>
    public partial class AstTableId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstTableId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstTableId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstTableId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitTableId(this);
        }
    }
    
    /// <summary>
    /// target_id
    /// 	 : id_
    /// </summary>
    public partial class AstTargetId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstTargetId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstTargetId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstTargetId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitTargetId(this);
        }
    }
    
    /// <summary>
    /// target_parameter_id
    /// 	 : id_
    /// </summary>
    public partial class AstTargetParameterId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstTargetParameterId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstTargetParameterId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstTargetParameterId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitTargetParameterId(this);
        }
    }
    
    /// <summary>
    /// trigger_id
    /// 	 : id_
    /// </summary>
    public partial class AstTriggerId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstTriggerId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstTriggerId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstTriggerId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitTriggerId(this);
        }
    }
    
    /// <summary>
    /// tvf_schema_id
    /// 	 : id_
    /// </summary>
    public partial class AstTvfSchemaId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstTvfSchemaId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstTvfSchemaId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstTvfSchemaId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitTvfSchemaId(this);
        }
    }
    
    /// <summary>
    /// udt_column_id
    /// 	 : id_
    /// </summary>
    public partial class AstUdtColumnId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstUdtColumnId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstUdtColumnId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstUdtColumnId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitUdtColumnId(this);
        }
    }
    
    /// <summary>
    /// unscaled_type_id
    /// 	 : id_
    /// </summary>
    public partial class AstUnscaledTypeId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstUnscaledTypeId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstUnscaledTypeId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstUnscaledTypeId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitUnscaledTypeId(this);
        }
    }
    
    /// <summary>
    /// windows_principal_id
    /// 	 : id_
    /// </summary>
    public partial class AstWindowsPrincipalId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstWindowsPrincipalId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstWindowsPrincipalId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstWindowsPrincipalId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitWindowsPrincipalId(this);
        }
    }
    
    /// <summary>
    /// workload_group_group_id
    /// 	 : id_
    /// </summary>
    public partial class AstWorkloadGroupGroupId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstWorkloadGroupGroupId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstWorkloadGroupGroupId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstWorkloadGroupGroupId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitWorkloadGroupGroupId(this);
        }
    }
    
    /// <summary>
    /// workload_group_pool_id
    /// 	 : id_
    /// </summary>
    public partial class AstWorkloadGroupPoolId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstWorkloadGroupPoolId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstWorkloadGroupPoolId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstWorkloadGroupPoolId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitWorkloadGroupPoolId(this);
        }
    }
    
    /// <summary>
    /// partition_scheme_id
    /// 	 : id_
    /// </summary>
    public partial class AstPartitionSchemeId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstPartitionSchemeId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstPartitionSchemeId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstPartitionSchemeId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitPartitionSchemeId(this);
        }
    }
    
    /// <summary>
    /// queue_id
    /// 	 : id_
    /// </summary>
    public partial class AstQueueId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstQueueId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstQueueId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstQueueId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitQueueId(this);
        }
    }
    
    /// <summary>
    /// partition_function_id
    /// 	 : id_
    /// </summary>
    public partial class AstPartitionFunctionId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstPartitionFunctionId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstPartitionFunctionId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstPartitionFunctionId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitPartitionFunctionId(this);
        }
    }
    
    /// <summary>
    /// message_type_id
    /// 	 : id_
    /// </summary>
    public partial class AstMessageTypeId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstMessageTypeId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstMessageTypeId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstMessageTypeId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitMessageTypeId(this);
        }
    }
    
    /// <summary>
    /// code_location_id
    /// 	 : id_
    /// </summary>
    public partial class AstCodeLocationId : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstCodeLocationId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstCodeLocationId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstCodeLocationId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitCodeLocationId(this);
        }
    }
    
    /// <summary>
    /// transaction_identifier
    /// 	 : id_
    /// </summary>
    public partial class AstTransactionIdentifier : AstTerminalIdentifier
    {
        
        private AstId _value;
        
        public AstTransactionIdentifier(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstTransactionIdentifier(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstTransactionIdentifier(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstId Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitTransactionIdentifier(this);
        }
    }
    
    /// <summary>
    /// decimal_id
    /// 	 : decimal
    /// 	 | id_
    /// </summary>
    public partial class AstDecimalId : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstDecimalId(ITerminalNode t, AstDecimal value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstDecimalId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstDecimalId(ParserRuleContext ctx, AstDecimal value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstDecimalId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstDecimalId(Position position, AstDecimal value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstDecimalId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitDecimalId(this);
        }
    }
    
    /// <summary>
    /// string_id
    /// 	 : stringtext
    /// 	 | id_
    /// </summary>
    public partial class AstStringId : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstStringId(ITerminalNode t, AstStringtext value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstStringId(ITerminalNode t, AstId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstStringId(ParserRuleContext ctx, AstStringtext value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstStringId(ParserRuleContext ctx, AstId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstStringId(Position position, AstStringtext value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstStringId(Position position, AstId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitStringId(this);
        }
    }
    
    /// <summary>
    /// string_local_id
    /// 	 : stringtext
    /// 	 | local_id
    /// </summary>
    public partial class AstStringLocalId : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstStringLocalId(ITerminalNode t, AstStringtext value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstStringLocalId(ITerminalNode t, AstLocalId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstStringLocalId(ParserRuleContext ctx, AstStringtext value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstStringLocalId(ParserRuleContext ctx, AstLocalId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstStringLocalId(Position position, AstStringtext value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstStringLocalId(Position position, AstLocalId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitStringLocalId(this);
        }
    }
    
    /// <summary>
    /// decimal_local_id
    /// 	 : decimal
    /// 	 | local_id
    /// </summary>
    public partial class AstDecimalLocalId : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstDecimalLocalId(ITerminalNode t, AstDecimal value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstDecimalLocalId(ITerminalNode t, AstLocalId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstDecimalLocalId(ParserRuleContext ctx, AstDecimal value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstDecimalLocalId(ParserRuleContext ctx, AstLocalId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstDecimalLocalId(Position position, AstDecimal value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstDecimalLocalId(Position position, AstLocalId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitDecimalLocalId(this);
        }
    }
    
    /// <summary>
    /// decimal_string
    /// 	 : decimal
    /// 	 | stringtext
    /// </summary>
    public partial class AstDecimalString : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstDecimalString(ITerminalNode t, AstDecimal value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstDecimalString(ITerminalNode t, AstStringtext value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstDecimalString(ParserRuleContext ctx, AstDecimal value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstDecimalString(ParserRuleContext ctx, AstStringtext value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstDecimalString(Position position, AstDecimal value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstDecimalString(Position position, AstStringtext value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitDecimalString(this);
        }
    }
    
    /// <summary>
    /// decimal_string_local_id
    /// 	 : decimal
    /// 	 | stringtext
    /// 	 | local_id
    /// </summary>
    public partial class AstDecimalStringLocalId : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstDecimalStringLocalId(ITerminalNode t, AstDecimal value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstDecimalStringLocalId(ITerminalNode t, AstStringtext value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstDecimalStringLocalId(ITerminalNode t, AstLocalId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstDecimalStringLocalId(ParserRuleContext ctx, AstDecimal value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstDecimalStringLocalId(ParserRuleContext ctx, AstStringtext value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstDecimalStringLocalId(ParserRuleContext ctx, AstLocalId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstDecimalStringLocalId(Position position, AstDecimal value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstDecimalStringLocalId(Position position, AstStringtext value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstDecimalStringLocalId(Position position, AstLocalId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitDecimalStringLocalId(this);
        }
    }
    
    /// <summary>
    /// string_local_id_double_quote_id
    /// 	 : stringtext
    /// 	 | local_id
    /// 	 | empty_value
    /// </summary>
    public partial class AstStringLocalIdDoubleQuoteId : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstStringLocalIdDoubleQuoteId(ITerminalNode t, AstStringtext value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstStringLocalIdDoubleQuoteId(ITerminalNode t, AstLocalId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstStringLocalIdDoubleQuoteId(ITerminalNode t, AstEmptyValue value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstStringLocalIdDoubleQuoteId(ParserRuleContext ctx, AstStringtext value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstStringLocalIdDoubleQuoteId(ParserRuleContext ctx, AstLocalId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstStringLocalIdDoubleQuoteId(ParserRuleContext ctx, AstEmptyValue value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstStringLocalIdDoubleQuoteId(Position position, AstStringtext value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstStringLocalIdDoubleQuoteId(Position position, AstLocalId value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstStringLocalIdDoubleQuoteId(Position position, AstEmptyValue value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitStringLocalIdDoubleQuoteId(this);
        }
    }
    
    /// <summary>
    /// func_proc_name_server_database_schema
    /// 	 : server_database_schema_function_ref
    /// 	 | func_proc_name_database_schema_ref
    /// </summary>
    public partial class AstFuncProcNameServerDatabaseSchema : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstFuncProcNameServerDatabaseSchema(ITerminalNode t, AstServerDatabaseSchemaFunctionRef value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstFuncProcNameServerDatabaseSchema(ITerminalNode t, AstFuncProcNameDatabaseSchemaRef value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstFuncProcNameServerDatabaseSchema(ParserRuleContext ctx, AstServerDatabaseSchemaFunctionRef value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstFuncProcNameServerDatabaseSchema(ParserRuleContext ctx, AstFuncProcNameDatabaseSchemaRef value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstFuncProcNameServerDatabaseSchema(Position position, AstServerDatabaseSchemaFunctionRef value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstFuncProcNameServerDatabaseSchema(Position position, AstFuncProcNameDatabaseSchemaRef value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitFuncProcNameServerDatabaseSchema(this);
        }
    }
    
    /// <summary>
    /// ddl_object
    /// 	 : complete_table_ref
    /// 	 | local_id
    /// </summary>
    public partial class AstDdlObject : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstDdlObject(ITerminalNode t, AstCompleteTableRef value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstDdlObject(ITerminalNode t, AstLocalId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstDdlObject(ParserRuleContext ctx, AstCompleteTableRef value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstDdlObject(ParserRuleContext ctx, AstLocalId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstDdlObject(Position position, AstCompleteTableRef value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstDdlObject(Position position, AstLocalId value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitDdlObject(this);
        }
    }
    
    /// <summary>
    /// full_column_name
    /// 	 : deleteed_inserted_column_id
    /// 	 | full_column_ref
    /// </summary>
    public partial class AstFullColumnName : AstTerminalIdentifier
    {
        
        private AstRoot _value;
        
        public AstFullColumnName(ITerminalNode t, AstDeleteedInsertedColumnId value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstFullColumnName(ITerminalNode t, AstFullColumnRef value) : 
                base(t)
        {
            _value = value;
        }
        
        public AstFullColumnName(ParserRuleContext ctx, AstDeleteedInsertedColumnId value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstFullColumnName(ParserRuleContext ctx, AstFullColumnRef value) : 
                base(ctx)
        {
            _value = value;
        }
        
        public AstFullColumnName(Position position, AstDeleteedInsertedColumnId value) : 
                base(position)
        {
            _value = value;
        }
        
        public AstFullColumnName(Position position, AstFullColumnRef value) : 
                base(position)
        {
            _value = value;
        }
        
        public virtual AstRoot Value
        {
            get
            {
                return _value;
            }
        }
        
        public override void Accept(IAstTSqlVisitor visitor)
        {
            visitor.VisitFullColumnName(this);
        }
    }
}
