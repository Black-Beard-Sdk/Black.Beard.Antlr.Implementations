#nullable disable
// Generated by ScriptInterfaceVisitor1.cs (vendredi 21 avril 2023)
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bb.SqlServer.Asts
{
    using System;
    using Bb.Asts;
    using Bb.Parsers;
    
    
    public partial interface IAstTSqlVisitor
    {
        
        /// <summary>
        /// t_root : batchs 
        /// </summary>
        void VisitTRoot(AstTRoot.AstTRoot1 a);
        
        /// <summary>
        /// t_root : execute_body_batch go_statements 
        /// </summary>
        void VisitTRoot(AstTRoot.AstTRoot2 a);
        
        /// <summary>
        /// batchs : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBatchs(AstBatchs a);
        
        /// <summary>
        /// batch : execute_body_batch 
        /// </summary>
        void VisitBatch(AstBatch.AstBatch1 a);
        
        /// <summary>
        /// batch : sql_clauses 
        /// </summary>
        void VisitBatch(AstBatch.AstBatch2 a);
        
        /// <summary>
        /// batch : create_or_alter_function 
        /// </summary>
        void VisitBatch(AstBatch.AstBatch3 a);
        
        /// <summary>
        /// batch : create_or_alter_procedure 
        /// </summary>
        void VisitBatch(AstBatch.AstBatch4 a);
        
        /// <summary>
        /// batch : create_or_alter_trigger 
        /// </summary>
        void VisitBatch(AstBatch.AstBatch5 a);
        
        /// <summary>
        /// batch : create_view 
        /// </summary>
        void VisitBatch(AstBatch.AstBatch6 a);
        
        /// <summary>
        /// go_statements : Bb.Generators.ModelMethod
        /// </summary>
        void VisitGoStatements(AstGoStatements a);
        
        /// <summary>
        /// sql_clauses : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSqlClauses(AstSqlClauses a);
        
        /// <summary>
        /// sql_clause : merge_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause1 a);
        
        /// <summary>
        /// sql_clause : delete_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause2 a);
        
        /// <summary>
        /// sql_clause : insert_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause3 a);
        
        /// <summary>
        /// sql_clause : select_statement_standalone 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause4 a);
        
        /// <summary>
        /// sql_clause : update_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause5 a);
        
        /// <summary>
        /// sql_clause : alter_application_role 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause6 a);
        
        /// <summary>
        /// sql_clause : alter_assembly 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause7 a);
        
        /// <summary>
        /// sql_clause : alter_asymmetric_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause8 a);
        
        /// <summary>
        /// sql_clause : alter_authorization 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause9 a);
        
        /// <summary>
        /// sql_clause : alter_authorization_for_azure_dw 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause10 a);
        
        /// <summary>
        /// sql_clause : alter_authorization_for_parallel_dw 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause11 a);
        
        /// <summary>
        /// sql_clause : alter_authorization_for_sql_database 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause12 a);
        
        /// <summary>
        /// sql_clause : alter_availability_group 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause13 a);
        
        /// <summary>
        /// sql_clause : alter_certificate 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause14 a);
        
        /// <summary>
        /// sql_clause : alter_column_encryption_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause15 a);
        
        /// <summary>
        /// sql_clause : alter_credential 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause16 a);
        
        /// <summary>
        /// sql_clause : alter_cryptographic_provider 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause17 a);
        
        /// <summary>
        /// sql_clause : alter_database 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause18 a);
        
        /// <summary>
        /// sql_clause : alter_db_role 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause19 a);
        
        /// <summary>
        /// sql_clause : alter_endpoint 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause20 a);
        
        /// <summary>
        /// sql_clause : create_or_alter_event_session 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause21 a);
        
        /// <summary>
        /// sql_clause : alter_external_data_source 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause22 a);
        
        /// <summary>
        /// sql_clause : alter_external_library 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause23 a);
        
        /// <summary>
        /// sql_clause : alter_external_resource_pool 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause24 a);
        
        /// <summary>
        /// sql_clause : alter_fulltext_catalog 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause25 a);
        
        /// <summary>
        /// sql_clause : alter_fulltext_stoplist 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause26 a);
        
        /// <summary>
        /// sql_clause : alter_index 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause27 a);
        
        /// <summary>
        /// sql_clause : alter_login_azure_sql 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause28 a);
        
        /// <summary>
        /// sql_clause : alter_login_azure_sql_dw_and_pdw 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause29 a);
        
        /// <summary>
        /// sql_clause : alter_login_sql_server 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause30 a);
        
        /// <summary>
        /// sql_clause : alter_master_key_azure_sql 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause31 a);
        
        /// <summary>
        /// sql_clause : alter_master_key_sql_server 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause32 a);
        
        /// <summary>
        /// sql_clause : alter_message_type 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause33 a);
        
        /// <summary>
        /// sql_clause : alter_partition_function 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause34 a);
        
        /// <summary>
        /// sql_clause : alter_partition_scheme 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause35 a);
        
        /// <summary>
        /// sql_clause : alter_remote_service_binding 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause36 a);
        
        /// <summary>
        /// sql_clause : alter_resource_governor 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause37 a);
        
        /// <summary>
        /// sql_clause : alter_schema_azure_sql_dw_and_pdw 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause38 a);
        
        /// <summary>
        /// sql_clause : alter_schema_sql 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause39 a);
        
        /// <summary>
        /// sql_clause : alter_sequence 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause40 a);
        
        /// <summary>
        /// sql_clause : alter_server_audit 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause41 a);
        
        /// <summary>
        /// sql_clause : alter_server_audit_specification 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause42 a);
        
        /// <summary>
        /// sql_clause : alter_server_configuration 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause43 a);
        
        /// <summary>
        /// sql_clause : alter_server_role 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause44 a);
        
        /// <summary>
        /// sql_clause : alter_server_role_pdw 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause45 a);
        
        /// <summary>
        /// sql_clause : alter_service 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause46 a);
        
        /// <summary>
        /// sql_clause : alter_service_master_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause47 a);
        
        /// <summary>
        /// sql_clause : alter_symmetric_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause48 a);
        
        /// <summary>
        /// sql_clause : alter_table 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause49 a);
        
        /// <summary>
        /// sql_clause : alter_user 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause50 a);
        
        /// <summary>
        /// sql_clause : alter_user_azure_sql 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause51 a);
        
        /// <summary>
        /// sql_clause : alter_workload_group 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause52 a);
        
        /// <summary>
        /// sql_clause : create_application_role 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause53 a);
        
        /// <summary>
        /// sql_clause : create_assembly 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause54 a);
        
        /// <summary>
        /// sql_clause : create_asymmetric_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause55 a);
        
        /// <summary>
        /// sql_clause : create_column_encryption_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause56 a);
        
        /// <summary>
        /// sql_clause : create_column_master_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause57 a);
        
        /// <summary>
        /// sql_clause : create_credential 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause58 a);
        
        /// <summary>
        /// sql_clause : create_cryptographic_provider 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause59 a);
        
        /// <summary>
        /// sql_clause : create_database 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause60 a);
        
        /// <summary>
        /// sql_clause : create_db_role 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause61 a);
        
        /// <summary>
        /// sql_clause : create_event_notification 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause62 a);
        
        /// <summary>
        /// sql_clause : create_external_library 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause63 a);
        
        /// <summary>
        /// sql_clause : create_external_resource_pool 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause64 a);
        
        /// <summary>
        /// sql_clause : create_fulltext_catalog 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause65 a);
        
        /// <summary>
        /// sql_clause : create_fulltext_stoplist 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause66 a);
        
        /// <summary>
        /// sql_clause : create_index 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause67 a);
        
        /// <summary>
        /// sql_clause : create_columnstore_index 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause68 a);
        
        /// <summary>
        /// sql_clause : create_nonclustered_columnstore_index 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause69 a);
        
        /// <summary>
        /// sql_clause : create_login_azure_sql 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause70 a);
        
        /// <summary>
        /// sql_clause : create_login_pdw 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause71 a);
        
        /// <summary>
        /// sql_clause : create_login_sql_server 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause72 a);
        
        /// <summary>
        /// sql_clause : create_master_key_azure_sql 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause73 a);
        
        /// <summary>
        /// sql_clause : create_master_key_sql_server 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause74 a);
        
        /// <summary>
        /// sql_clause : create_or_alter_broker_priority 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause75 a);
        
        /// <summary>
        /// sql_clause : create_remote_service_binding 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause76 a);
        
        /// <summary>
        /// sql_clause : create_resource_pool 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause77 a);
        
        /// <summary>
        /// sql_clause : create_route 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause78 a);
        
        /// <summary>
        /// sql_clause : create_rule 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause79 a);
        
        /// <summary>
        /// sql_clause : create_schema 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause80 a);
        
        /// <summary>
        /// sql_clause : create_schema_azure_sql_dw_and_pdw 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause81 a);
        
        /// <summary>
        /// sql_clause : create_search_property_list 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause82 a);
        
        /// <summary>
        /// sql_clause : create_security_policy 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause83 a);
        
        /// <summary>
        /// sql_clause : create_sequence 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause84 a);
        
        /// <summary>
        /// sql_clause : create_server_audit 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause85 a);
        
        /// <summary>
        /// sql_clause : create_server_audit_specification 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause86 a);
        
        /// <summary>
        /// sql_clause : create_server_role 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause87 a);
        
        /// <summary>
        /// sql_clause : create_service 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause88 a);
        
        /// <summary>
        /// sql_clause : create_statistics 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause89 a);
        
        /// <summary>
        /// sql_clause : create_synonym 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause90 a);
        
        /// <summary>
        /// sql_clause : create_table 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause91 a);
        
        /// <summary>
        /// sql_clause : create_type 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause92 a);
        
        /// <summary>
        /// sql_clause : create_user 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause93 a);
        
        /// <summary>
        /// sql_clause : create_user_azure_sql_dw 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause94 a);
        
        /// <summary>
        /// sql_clause : create_workload_group 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause95 a);
        
        /// <summary>
        /// sql_clause : create_xml_index 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause96 a);
        
        /// <summary>
        /// sql_clause : create_xml_schema_collection 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause97 a);
        
        /// <summary>
        /// sql_clause : create_partition_function 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause98 a);
        
        /// <summary>
        /// sql_clause : create_partition_scheme 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause99 a);
        
        /// <summary>
        /// sql_clause : drop_aggregate 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause100 a);
        
        /// <summary>
        /// sql_clause : drop_application_role 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause101 a);
        
        /// <summary>
        /// sql_clause : drop_assembly 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause102 a);
        
        /// <summary>
        /// sql_clause : drop_asymmetric_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause103 a);
        
        /// <summary>
        /// sql_clause : drop_availability_group 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause104 a);
        
        /// <summary>
        /// sql_clause : drop_broker_priority 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause105 a);
        
        /// <summary>
        /// sql_clause : drop_certificate 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause106 a);
        
        /// <summary>
        /// sql_clause : drop_column_encryption_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause107 a);
        
        /// <summary>
        /// sql_clause : drop_column_master_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause108 a);
        
        /// <summary>
        /// sql_clause : drop_contract 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause109 a);
        
        /// <summary>
        /// sql_clause : drop_credential 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause110 a);
        
        /// <summary>
        /// sql_clause : drop_cryptograhic_provider 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause111 a);
        
        /// <summary>
        /// sql_clause : drop_database 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause112 a);
        
        /// <summary>
        /// sql_clause : drop_database_audit_specification 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause113 a);
        
        /// <summary>
        /// sql_clause : drop_database_encryption_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause114 a);
        
        /// <summary>
        /// sql_clause : drop_database_scoped_credential 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause115 a);
        
        /// <summary>
        /// sql_clause : drop_db_role 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause116 a);
        
        /// <summary>
        /// sql_clause : drop_default 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause117 a);
        
        /// <summary>
        /// sql_clause : drop_endpoint 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause118 a);
        
        /// <summary>
        /// sql_clause : drop_event_notifications 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause119 a);
        
        /// <summary>
        /// sql_clause : drop_event_session 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause120 a);
        
        /// <summary>
        /// sql_clause : drop_external_data_source 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause121 a);
        
        /// <summary>
        /// sql_clause : drop_external_file_format 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause122 a);
        
        /// <summary>
        /// sql_clause : drop_external_library 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause123 a);
        
        /// <summary>
        /// sql_clause : drop_external_resource_pool 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause124 a);
        
        /// <summary>
        /// sql_clause : drop_external_table 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause125 a);
        
        /// <summary>
        /// sql_clause : drop_fulltext_catalog 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause126 a);
        
        /// <summary>
        /// sql_clause : drop_fulltext_index 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause127 a);
        
        /// <summary>
        /// sql_clause : drop_fulltext_stoplist 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause128 a);
        
        /// <summary>
        /// sql_clause : drop_function 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause129 a);
        
        /// <summary>
        /// sql_clause : drop_index 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause130 a);
        
        /// <summary>
        /// sql_clause : drop_login 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause131 a);
        
        /// <summary>
        /// sql_clause : drop_master_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause132 a);
        
        /// <summary>
        /// sql_clause : drop_message_type 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause133 a);
        
        /// <summary>
        /// sql_clause : drop_partition_function 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause134 a);
        
        /// <summary>
        /// sql_clause : drop_partition_scheme 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause135 a);
        
        /// <summary>
        /// sql_clause : drop_procedure 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause136 a);
        
        /// <summary>
        /// sql_clause : drop_queue 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause137 a);
        
        /// <summary>
        /// sql_clause : drop_remote_service_binding 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause138 a);
        
        /// <summary>
        /// sql_clause : drop_resource_pool 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause139 a);
        
        /// <summary>
        /// sql_clause : drop_route 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause140 a);
        
        /// <summary>
        /// sql_clause : drop_rule 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause141 a);
        
        /// <summary>
        /// sql_clause : drop_schema 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause142 a);
        
        /// <summary>
        /// sql_clause : drop_search_property_list 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause143 a);
        
        /// <summary>
        /// sql_clause : drop_security_policy 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause144 a);
        
        /// <summary>
        /// sql_clause : drop_sequence 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause145 a);
        
        /// <summary>
        /// sql_clause : drop_server_audit 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause146 a);
        
        /// <summary>
        /// sql_clause : drop_server_audit_specification 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause147 a);
        
        /// <summary>
        /// sql_clause : drop_server_role 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause148 a);
        
        /// <summary>
        /// sql_clause : drop_service 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause149 a);
        
        /// <summary>
        /// sql_clause : drop_signature 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause150 a);
        
        /// <summary>
        /// sql_clause : drop_statistics 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause151 a);
        
        /// <summary>
        /// sql_clause : drop_statistics_id_azure_dw_and_pdw 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause152 a);
        
        /// <summary>
        /// sql_clause : drop_symmetric_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause153 a);
        
        /// <summary>
        /// sql_clause : drop_synonym 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause154 a);
        
        /// <summary>
        /// sql_clause : drop_table 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause155 a);
        
        /// <summary>
        /// sql_clause : drop_dml_trigger 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause156 a);
        
        /// <summary>
        /// sql_clause : drop_ddl_trigger 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause157 a);
        
        /// <summary>
        /// sql_clause : drop_type 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause158 a);
        
        /// <summary>
        /// sql_clause : drop_user 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause159 a);
        
        /// <summary>
        /// sql_clause : drop_view 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause160 a);
        
        /// <summary>
        /// sql_clause : drop_workload_group 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause161 a);
        
        /// <summary>
        /// sql_clause : drop_xml_schema_collection 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause162 a);
        
        /// <summary>
        /// sql_clause : disable_trigger 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause163 a);
        
        /// <summary>
        /// sql_clause : enable_trigger 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause164 a);
        
        /// <summary>
        /// sql_clause : lock_table 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause165 a);
        
        /// <summary>
        /// sql_clause : truncate_table 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause166 a);
        
        /// <summary>
        /// sql_clause : update_statistics 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause167 a);
        
        /// <summary>
        /// sql_clause : block_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause168 a);
        
        /// <summary>
        /// sql_clause : break_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause169 a);
        
        /// <summary>
        /// sql_clause : continue_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause170 a);
        
        /// <summary>
        /// sql_clause : goto_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause171 a);
        
        /// <summary>
        /// sql_clause : if_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause172 a);
        
        /// <summary>
        /// sql_clause : return_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause173 a);
        
        /// <summary>
        /// sql_clause : throw_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause174 a);
        
        /// <summary>
        /// sql_clause : try_catch_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause175 a);
        
        /// <summary>
        /// sql_clause : waitfor_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause176 a);
        
        /// <summary>
        /// sql_clause : while_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause177 a);
        
        /// <summary>
        /// sql_clause : print_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause178 a);
        
        /// <summary>
        /// sql_clause : raiseerror_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause179 a);
        
        /// <summary>
        /// sql_clause : declare_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause180 a);
        
        /// <summary>
        /// sql_clause : execute_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause181 a);
        
        /// <summary>
        /// sql_clause : cursor_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause182 a);
        
        /// <summary>
        /// sql_clause : begin_conversation_timer 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause183 a);
        
        /// <summary>
        /// sql_clause : begin_conversation_dialog 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause184 a);
        
        /// <summary>
        /// sql_clause : end_conversation 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause185 a);
        
        /// <summary>
        /// sql_clause : get_conversation 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause186 a);
        
        /// <summary>
        /// sql_clause : send_conversation 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause187 a);
        
        /// <summary>
        /// sql_clause : waitfor_conversation 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause188 a);
        
        /// <summary>
        /// sql_clause : create_contract 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause189 a);
        
        /// <summary>
        /// sql_clause : create_queue 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause190 a);
        
        /// <summary>
        /// sql_clause : alter_queue 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause191 a);
        
        /// <summary>
        /// sql_clause : kill_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause192 a);
        
        /// <summary>
        /// sql_clause : message_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause193 a);
        
        /// <summary>
        /// sql_clause : security_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause194 a);
        
        /// <summary>
        /// sql_clause : set_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause195 a);
        
        /// <summary>
        /// sql_clause : transaction_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause196 a);
        
        /// <summary>
        /// sql_clause : use_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause197 a);
        
        /// <summary>
        /// sql_clause : setuser_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause198 a);
        
        /// <summary>
        /// sql_clause : reconfigure_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause199 a);
        
        /// <summary>
        /// sql_clause : shutdown_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause200 a);
        
        /// <summary>
        /// sql_clause : checkpoint_statement 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause201 a);
        
        /// <summary>
        /// sql_clause : backup_database 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause202 a);
        
        /// <summary>
        /// sql_clause : backup_log 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause203 a);
        
        /// <summary>
        /// sql_clause : backup_certificate 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause204 a);
        
        /// <summary>
        /// sql_clause : backup_master_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause205 a);
        
        /// <summary>
        /// sql_clause : backup_service_master_key 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause206 a);
        
        /// <summary>
        /// sql_clause : dbcc_special 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause207 a);
        
        /// <summary>
        /// sql_clause : dbcc_clause 
        /// </summary>
        void VisitSqlClause(AstSqlClause.AstSqlClause208 a);
        
        /// <summary>
        /// block_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBlockStatement(AstBlockStatement a);
        
        /// <summary>
        /// break_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBreakStatement(AstBreakStatement a);
        
        /// <summary>
        /// continue_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitContinueStatement(AstContinueStatement a);
        
        /// <summary>
        /// goto_statement : GOTO code_location_id 
        /// </summary>
        void VisitGotoStatement(AstGotoStatement.AstGotoStatement1 a);
        
        /// <summary>
        /// goto_statement : code_location_id COLON 
        /// </summary>
        void VisitGotoStatement(AstGotoStatement.AstGotoStatement2 a);
        
        /// <summary>
        /// return_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitReturnStatement(AstReturnStatement a);
        
        /// <summary>
        /// if_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIfStatement(AstIfStatement a);
        
        void VisitThrowStatement(AstThrowStatement a);
        
        /// <summary>
        /// throw_error_number : Bb.Generators.ModelMethod
        /// </summary>
        void VisitThrowErrorNumber(AstThrowErrorNumber a);
        
        /// <summary>
        /// throw_message : Bb.Generators.ModelMethod
        /// </summary>
        void VisitThrowMessage(AstThrowMessage a);
        
        /// <summary>
        /// throw_state : Bb.Generators.ModelMethod
        /// </summary>
        void VisitThrowState(AstThrowState a);
        
        void VisitTryCatchStatement(AstTryCatchStatement a);
        
        /// <summary>
        /// waitfor_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWaitforStatement(AstWaitforStatement a);
        
        /// <summary>
        /// while_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWhileStatement(AstWhileStatement a);
        
        /// <summary>
        /// while_statement_content : sql_clause 
        /// </summary>
        void VisitWhileStatementContent(AstWhileStatementContent.AstWhileStatementContent1 a);
        
        /// <summary>
        /// while_statement_content : BREAK 
        /// </summary>
        void VisitWhileStatementContent(AstWhileStatementContent.AstWhileStatementContent2 a);
        
        /// <summary>
        /// while_statement_content : CONTINUE 
        /// </summary>
        void VisitWhileStatementContent(AstWhileStatementContent.AstWhileStatementContent3 a);
        
        /// <summary>
        /// print_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPrintStatement(AstPrintStatement a);
        
        /// <summary>
        /// raiseerror_statement : RAISERROR LR_BRACKET msg=decimal_string_local_id COMMA severity=constant_local_id COMMA state=constant_local_id constant_local_ids? RR_BRACKET WITH log_seterror_nowait 
        /// </summary>
        void VisitRaiseerrorStatement(AstRaiseerrorStatement.AstRaiseerrorStatement1 a);
        
        /// <summary>
        /// raiseerror_statement : RAISERROR decimal formatstring=string_local_id_double_quote_id decimal_string_locals? 
        /// </summary>
        void VisitRaiseerrorStatement(AstRaiseerrorStatement.AstRaiseerrorStatement2 a);
        
        /// <summary>
        /// constant_local_ids : Bb.Generators.ModelMethod
        /// </summary>
        void VisitConstantLocalIds(AstConstantLocalIds a);
        
        /// <summary>
        /// constant_local_id_or_null : Bb.Generators.ModelMethod
        /// </summary>
        void VisitConstantLocalIdOrNull(AstConstantLocalIdOrNull a);
        
        /// <summary>
        /// empty_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEmptyStatement(AstEmptyStatement a);
        
        /// <summary>
        /// alter_application_role : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterApplicationRole(AstAlterApplicationRole a);
        
        /// <summary>
        /// create_application_role : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateApplicationRole(AstCreateApplicationRole a);
        
        /// <summary>
        /// drop_aggregate : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropAggregate(AstDropAggregate a);
        
        /// <summary>
        /// drop_application_role : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropApplicationRole(AstDropApplicationRole a);
        
        /// <summary>
        /// alter_assembly : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAssembly(AstAlterAssembly a);
        
        void VisitAlterAssemblyStart(AstAlterAssemblyStart a);
        
        /// <summary>
        /// alter_assembly_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAssemblyClause(AstAlterAssemblyClause a);
        
        /// <summary>
        /// alter_assembly_from_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAssemblyFromClause(AstAlterAssemblyFromClause a);
        
        /// <summary>
        /// alter_assembly_from_clause_start : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAssemblyFromClauseStart(AstAlterAssemblyFromClauseStart a);
        
        /// <summary>
        /// alter_assembly_drop_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAssemblyDropClause(AstAlterAssemblyDropClause a);
        
        /// <summary>
        /// alter_assembly_drop_multiple_files : ALL 
        /// </summary>
        void VisitAlterAssemblyDropMultipleFiles(AstAlterAssemblyDropMultipleFiles.AstAlterAssemblyDropMultipleFiles1 a);
        
        /// <summary>
        /// alter_assembly_drop_multiple_files : multiple_local_files 
        /// </summary>
        void VisitAlterAssemblyDropMultipleFiles(AstAlterAssemblyDropMultipleFiles.AstAlterAssemblyDropMultipleFiles2 a);
        
        /// <summary>
        /// alter_assembly_drop : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAssemblyDrop(AstAlterAssemblyDrop a);
        
        /// <summary>
        /// alter_assembly_add_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAssemblyAddClause(AstAlterAssemblyAddClause a);
        
        /// <summary>
        /// alter_assembly_client_file_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAssemblyClientFileClause(AstAlterAssemblyClientFileClause a);
        
        /// <summary>
        /// assembly_file_name : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAssemblyFileName(AstAssemblyFileName a);
        
        /// <summary>
        /// alter_assembly_file_bits : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAssemblyFileBits(AstAlterAssemblyFileBits a);
        
        /// <summary>
        /// alter_assembly_with_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAssemblyWithClause(AstAlterAssemblyWithClause a);
        
        /// <summary>
        /// client_assembly_specifier : network_file_share 
        /// </summary>
        void VisitClientAssemblySpecifier(AstClientAssemblySpecifier.AstClientAssemblySpecifier1 a);
        
        /// <summary>
        /// client_assembly_specifier : local_file 
        /// </summary>
        void VisitClientAssemblySpecifier(AstClientAssemblySpecifier.AstClientAssemblySpecifier2 a);
        
        /// <summary>
        /// client_assembly_specifier : stringtext 
        /// </summary>
        void VisitClientAssemblySpecifier(AstClientAssemblySpecifier.AstClientAssemblySpecifier3 a);
        
        /// <summary>
        /// assembly_option : PERMISSION_SET EQUAL assembly_permission 
        /// </summary>
        void VisitAssemblyOption(AstAssemblyOption.AstAssemblyOption1 a);
        
        /// <summary>
        /// assembly_option : VISIBILITY EQUAL on_off 
        /// </summary>
        void VisitAssemblyOption(AstAssemblyOption.AstAssemblyOption2 a);
        
        /// <summary>
        /// assembly_option : UNCHECKED DATA 
        /// </summary>
        void VisitAssemblyOption(AstAssemblyOption.AstAssemblyOption3 a);
        
        /// <summary>
        /// assembly_option : assembly_option COMMA 
        /// </summary>
        void VisitAssemblyOption(AstAssemblyOption.AstAssemblyOption4 a);
        
        /// <summary>
        /// network_file_share : Bb.Generators.ModelMethod
        /// </summary>
        void VisitNetworkFileShare(AstNetworkFileShare a);
        
        /// <summary>
        /// network_file_start : Bb.Generators.ModelMethod
        /// </summary>
        void VisitNetworkFileStart(AstNetworkFileStart a);
        
        /// <summary>
        /// file_path : file_directory_path_separator file_path 
        /// </summary>
        void VisitFilePath(AstFilePath.AstFilePath1 a);
        
        /// <summary>
        /// file_path : id_ 
        /// </summary>
        void VisitFilePath(AstFilePath.AstFilePath2 a);
        
        /// <summary>
        /// file_directory_path_separator : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFileDirectoryPathSeparator(AstFileDirectoryPathSeparator a);
        
        /// <summary>
        /// local_file : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLocalFile(AstLocalFile a);
        
        /// <summary>
        /// local_drive : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLocalDrive(AstLocalDrive a);
        
        /// <summary>
        /// multiple_local_files : SINGLE_QUOTE local_file SINGLE_QUOTE COMMA 
        /// </summary>
        void VisitMultipleLocalFiles(AstMultipleLocalFiles.AstMultipleLocalFiles1 a);
        
        /// <summary>
        /// multiple_local_files : local_file 
        /// </summary>
        void VisitMultipleLocalFiles(AstMultipleLocalFiles.AstMultipleLocalFiles2 a);
        
        /// <summary>
        /// create_assembly : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateAssembly(AstCreateAssembly a);
        
        /// <summary>
        /// binary_content_nexts : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBinaryContentNexts(AstBinaryContentNexts a);
        
        /// <summary>
        /// binary_content_next : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBinaryContentNext(AstBinaryContentNext a);
        
        /// <summary>
        /// binary_content : stringtext 
        /// </summary>
        void VisitBinaryContent(AstBinaryContent.AstBinaryContent1 a);
        
        /// <summary>
        /// binary_content : binary_ 
        /// </summary>
        void VisitBinaryContent(AstBinaryContent.AstBinaryContent2 a);
        
        /// <summary>
        /// drop_assembly : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropAssembly(AstDropAssembly a);
        
        /// <summary>
        /// alter_asymmetric_key : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAsymmetricKey(AstAlterAsymmetricKey a);
        
        /// <summary>
        /// by_password_crypt : decryption_by_pwd 
        /// </summary>
        void VisitByPasswordCrypt(AstByPasswordCrypt.AstByPasswordCrypt1 a);
        
        /// <summary>
        /// by_password_crypt : encryption_by_pwd 
        /// </summary>
        void VisitByPasswordCrypt(AstByPasswordCrypt.AstByPasswordCrypt2 a);
        
        /// <summary>
        /// encryption_by_pwd : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEncryptionByPwd(AstEncryptionByPwd a);
        
        /// <summary>
        /// decryption_by_pwd : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDecryptionByPwd(AstDecryptionByPwd a);
        
        /// <summary>
        /// create_asymmetric_key : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateAsymmetricKey(AstCreateAsymmetricKey a);
        
        /// <summary>
        /// asymetric_key_with_info : ALGORITHM EQUAL asymetric_algorithm 
        /// </summary>
        void VisitAsymetricKeyWithInfo(AstAsymetricKeyWithInfo.AstAsymetricKeyWithInfo1 a);
        
        /// <summary>
        /// asymetric_key_with_info : PROVIDER_KEY_NAME EQUAL provider_key_name=stringtext 
        /// </summary>
        void VisitAsymetricKeyWithInfo(AstAsymetricKeyWithInfo.AstAsymetricKeyWithInfo2 a);
        
        /// <summary>
        /// asymetric_key_with_info : CREATION_DISPOSITION EQUAL creation_disposition 
        /// </summary>
        void VisitAsymetricKeyWithInfo(AstAsymetricKeyWithInfo.AstAsymetricKeyWithInfo3 a);
        
        /// <summary>
        /// asymetric_key_from : FILE EQUAL stringtext 
        /// </summary>
        void VisitAsymetricKeyFrom(AstAsymetricKeyFrom.AstAsymetricKeyFrom1 a);
        
        /// <summary>
        /// asymetric_key_from : EXECUTABLE_FILE EQUAL stringtext 
        /// </summary>
        void VisitAsymetricKeyFrom(AstAsymetricKeyFrom.AstAsymetricKeyFrom2 a);
        
        /// <summary>
        /// asymetric_key_from : ASSEMBLY assembly_id 
        /// </summary>
        void VisitAsymetricKeyFrom(AstAsymetricKeyFrom.AstAsymetricKeyFrom3 a);
        
        /// <summary>
        /// asymetric_key_from : PROVIDER provider_id 
        /// </summary>
        void VisitAsymetricKeyFrom(AstAsymetricKeyFrom.AstAsymetricKeyFrom4 a);
        
        void VisitDropAsymmetricKey(AstDropAsymmetricKey a);
        
        /// <summary>
        /// alter_authorization : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAuthorization(AstAlterAuthorization a);
        
        /// <summary>
        /// authorization_grantee : principal_name=id_ 
        /// </summary>
        void VisitAuthorizationGrantee(AstAuthorizationGrantee.AstAuthorizationGrantee1 a);
        
        /// <summary>
        /// authorization_grantee : SCHEMA OWNER 
        /// </summary>
        void VisitAuthorizationGrantee(AstAuthorizationGrantee.AstAuthorizationGrantee2 a);
        
        /// <summary>
        /// alter_authorization_for_sql_database : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAuthorizationForSqlDatabase(AstAlterAuthorizationForSqlDatabase a);
        
        /// <summary>
        /// alter_authorization_for_azure_dw : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAuthorizationForAzureDw(AstAlterAuthorizationForAzureDw a);
        
        /// <summary>
        /// alter_authorization_for_parallel_dw : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAuthorizationForParallelDw(AstAlterAuthorizationForParallelDw a);
        
        /// <summary>
        /// class_type : Bb.Generators.ModelMethod
        /// </summary>
        void VisitClassType(AstClassType a);
        
        /// <summary>
        /// class_type_for_sql_database : Bb.Generators.ModelMethod
        /// </summary>
        void VisitClassTypeForSqlDatabase(AstClassTypeForSqlDatabase a);
        
        /// <summary>
        /// class_type_for_azure_dw : Bb.Generators.ModelMethod
        /// </summary>
        void VisitClassTypeForAzureDw(AstClassTypeForAzureDw a);
        
        /// <summary>
        /// class_type_for_parallel_dw : Bb.Generators.ModelMethod
        /// </summary>
        void VisitClassTypeForParallelDw(AstClassTypeForParallelDw a);
        
        /// <summary>
        /// class_type_for_grant : COLUMN encryption_master KEY 
        /// </summary>
        void VisitClassTypeForGrant(AstClassTypeForGrant.AstClassTypeForGrant1 a);
        
        /// <summary>
        /// class_type_for_grant : NOTIFICATION database_object_server 
        /// </summary>
        void VisitClassTypeForGrant(AstClassTypeForGrant.AstClassTypeForGrant2 a);
        
        /// <summary>
        /// class_type_for_grant : object_type_for_grant 
        /// </summary>
        void VisitClassTypeForGrant(AstClassTypeForGrant.AstClassTypeForGrant3 a);
        
        /// <summary>
        /// drop_availability_group : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropAvailabilityGroup(AstDropAvailabilityGroup a);
        
        /// <summary>
        /// alter_availability_group : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAvailabilityGroup(AstAlterAvailabilityGroup a);
        
        /// <summary>
        /// alter_availability_group_start : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAvailabilityGroupStart(AstAlterAvailabilityGroupStart a);
        
        /// <summary>
        /// add_remove_database : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAddRemoveDatabase(AstAddRemoveDatabase a);
        
        /// <summary>
        /// alter_options_listener : add_listener 
        /// </summary>
        void VisitAlterOptionsListener(AstAlterOptionsListener.AstAlterOptionsListener1 a);
        
        /// <summary>
        /// alter_options_listener : MODIFY LISTENER alter_listener 
        /// </summary>
        void VisitAlterOptionsListener(AstAlterOptionsListener.AstAlterOptionsListener2 a);
        
        /// <summary>
        /// alter_options_listener : restart_listener 
        /// </summary>
        void VisitAlterOptionsListener(AstAlterOptionsListener.AstAlterOptionsListener3 a);
        
        /// <summary>
        /// restart_listener : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRestartListener(AstRestartListener a);
        
        /// <summary>
        /// alter_listener : ADD IP LR_BRACKET ip_listener RR_BRACKET 
        /// </summary>
        void VisitAlterListener(AstAlterListener.AstAlterListener1 a);
        
        /// <summary>
        /// alter_listener : PORT EQUAL decimal 
        /// </summary>
        void VisitAlterListener(AstAlterListener.AstAlterListener2 a);
        
        /// <summary>
        /// range_ip_v4 : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRangeIpV4(AstRangeIpV4 a);
        
        /// <summary>
        /// range_ip_comma_v4 : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRangeIpCommaV4(AstRangeIpCommaV4 a);
        
        /// <summary>
        /// ip_listener : range_ip_v4 
        /// </summary>
        void VisitIpListener(AstIpListener.AstIpListener1 a);
        
        /// <summary>
        /// ip_listener : ipv6 
        /// </summary>
        void VisitIpListener(AstIpListener.AstIpListener2 a);
        
        /// <summary>
        /// ip_listener_comma : range_ip_comma_v4 
        /// </summary>
        void VisitIpListenerComma(AstIpListenerComma.AstIpListenerComma1 a);
        
        /// <summary>
        /// ip_listener_comma : ipv6 
        /// </summary>
        void VisitIpListenerComma(AstIpListenerComma.AstIpListenerComma2 a);
        
        /// <summary>
        /// add_listener : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAddListener(AstAddListener a);
        
        /// <summary>
        /// address_listener : listener_dhcp 
        /// </summary>
        void VisitAddressListener(AstAddressListener.AstAddressListener1 a);
        
        /// <summary>
        /// address_listener : WITH IP LR_BRACKET listener_ip_address 
        /// </summary>
        void VisitAddressListener(AstAddressListener.AstAddressListener2 a);
        
        /// <summary>
        /// listener_name : Bb.Generators.ModelMethod
        /// </summary>
        void VisitListenerName(AstListenerName a);
        
        /// <summary>
        /// listener_dhcp : Bb.Generators.ModelMethod
        /// </summary>
        void VisitListenerDhcp(AstListenerDhcp a);
        
        /// <summary>
        /// listener_ip_address : Bb.Generators.ModelMethod
        /// </summary>
        void VisitListenerIpAddress(AstListenerIpAddress a);
        
        /// <summary>
        /// ips : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIps(AstIps a);
        
        /// <summary>
        /// alter_availability_replicat_modify : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAvailabilityReplicatModify(AstAlterAvailabilityReplicatModify a);
        
        /// <summary>
        /// alter_availability_replicat_primary : ENDPOINT_URL EQUAL url_value 
        /// </summary>
        void VisitAlterAvailabilityReplicatPrimary(AstAlterAvailabilityReplicatPrimary.AstAlterAvailabilityReplicatPrimary1 a);
        
        /// <summary>
        /// alter_availability_replicat_primary : availability_mode_set 
        /// </summary>
        void VisitAlterAvailabilityReplicatPrimary(AstAlterAvailabilityReplicatPrimary.AstAlterAvailabilityReplicatPrimary2 a);
        
        /// <summary>
        /// alter_availability_replicat_primary : FAILOVER_MODE EQUAL failover=auto_manual 
        /// </summary>
        void VisitAlterAvailabilityReplicatPrimary(AstAlterAvailabilityReplicatPrimary.AstAlterAvailabilityReplicatPrimary3 a);
        
        /// <summary>
        /// alter_availability_replicat_primary : seeding_mode_set 
        /// </summary>
        void VisitAlterAvailabilityReplicatPrimary(AstAlterAvailabilityReplicatPrimary.AstAlterAvailabilityReplicatPrimary4 a);
        
        /// <summary>
        /// alter_availability_replicat_primary : backup_priority_set 
        /// </summary>
        void VisitAlterAvailabilityReplicatPrimary(AstAlterAvailabilityReplicatPrimary.AstAlterAvailabilityReplicatPrimary5 a);
        
        /// <summary>
        /// url_value : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUrlValue(AstUrlValue a);
        
        /// <summary>
        /// alter_availability_primary_role : allow_connections_set 
        /// </summary>
        void VisitAlterAvailabilityPrimaryRole(AstAlterAvailabilityPrimaryRole.AstAlterAvailabilityPrimaryRole1 a);
        
        /// <summary>
        /// alter_availability_primary_role : READ_ONLY_ROUTING_LIST EQUAL LR_BRACKET routing_list RR_BRACKET 
        /// </summary>
        void VisitAlterAvailabilityPrimaryRole(AstAlterAvailabilityPrimaryRole.AstAlterAvailabilityPrimaryRole2 a);
        
        /// <summary>
        /// alter_availability_primary_role : SESSION_TIMEOUT EQUAL session_timeout=decimal 
        /// </summary>
        void VisitAlterAvailabilityPrimaryRole(AstAlterAvailabilityPrimaryRole.AstAlterAvailabilityPrimaryRole3 a);
        
        /// <summary>
        /// routing_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRoutingList(AstRoutingList a);
        
        /// <summary>
        /// alter_availability_secondary_role : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAvailabilitySecondaryRole(AstAlterAvailabilitySecondaryRole a);
        
        /// <summary>
        /// backup_priority_set : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBackupPrioritySet(AstBackupPrioritySet a);
        
        /// <summary>
        /// alter_availability_replicat_add : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterAvailabilityReplicatAdd(AstAlterAvailabilityReplicatAdd a);
        
        /// <summary>
        /// alter_availability_replicat : alter_availability_replicat_add 
        /// </summary>
        void VisitAlterAvailabilityReplicat(AstAlterAvailabilityReplicat.AstAlterAvailabilityReplicat1 a);
        
        /// <summary>
        /// alter_availability_replicat : REMOVE REPLICA ON server_instance_txt 
        /// </summary>
        void VisitAlterAvailabilityReplicat(AstAlterAvailabilityReplicat.AstAlterAvailabilityReplicat2 a);
        
        /// <summary>
        /// alter_availability_replicat : alter_availability_replicat_modify 
        /// </summary>
        void VisitAlterAvailabilityReplicat(AstAlterAvailabilityReplicat.AstAlterAvailabilityReplicat3 a);
        
        /// <summary>
        /// availability_group_options : JOIN 
        /// </summary>
        void VisitAvailabilityGroupOptions(AstAvailabilityGroupOptions.AstAvailabilityGroupOptions1 a);
        
        /// <summary>
        /// availability_group_options : JOIN AVAILABILITY GROUP ON COMMA? ag_name=stringtext WITH LR_BRACKET listener_url_set COMMA availability_mode_set COMMA failover_mode_manuel COMMA seeding_mode_set RR_BRACKET 
        /// </summary>
        void VisitAvailabilityGroupOptions(AstAvailabilityGroupOptions.AstAvailabilityGroupOptions2 a);
        
        /// <summary>
        /// availability_group_options : MODIFY AVAILABILITY GROUP ON COMMA? ag_name_modified=stringtext WITH LR_BRACKET listener_url_set COMMA? availability_mode_set COMMA? failover_mode_manuel COMMA? seeding_mode_set RR_BRACKET 
        /// </summary>
        void VisitAvailabilityGroupOptions(AstAvailabilityGroupOptions.AstAvailabilityGroupOptions3 a);
        
        /// <summary>
        /// listener_url_set : Bb.Generators.ModelMethod
        /// </summary>
        void VisitListenerUrlSet(AstListenerUrlSet a);
        
        /// <summary>
        /// availability_mode_set : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAvailabilityModeSet(AstAvailabilityModeSet a);
        
        void VisitFailoverModeManuel(AstFailoverModeManuel a);
        
        /// <summary>
        /// seeding_mode_set : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSeedingModeSet(AstSeedingModeSet a);
        
        /// <summary>
        /// alter_role : secondary_role_args 
        /// </summary>
        void VisitAlterRole(AstAlterRole.AstAlterRole1 a);
        
        /// <summary>
        /// alter_role : primary_role_args 
        /// </summary>
        void VisitAlterRole(AstAlterRole.AstAlterRole2 a);
        
        /// <summary>
        /// primary_role_args : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPrimaryRoleArgs(AstPrimaryRoleArgs a);
        
        /// <summary>
        /// primary_role_config : allow_connections_set 
        /// </summary>
        void VisitPrimaryRoleConfig(AstPrimaryRoleConfig.AstPrimaryRoleConfig1 a);
        
        /// <summary>
        /// primary_role_config : READ_ONLY_ROUTING_LIST EQUAL LR_BRACKET string_list_not RR_BRACKET 
        /// </summary>
        void VisitPrimaryRoleConfig(AstPrimaryRoleConfig.AstPrimaryRoleConfig2 a);
        
        /// <summary>
        /// primary_role_config : SESSION_TIMEOUT EQUAL session_timeout=decimal 
        /// </summary>
        void VisitPrimaryRoleConfig(AstPrimaryRoleConfig.AstPrimaryRoleConfig3 a);
        
        /// <summary>
        /// string_list_not : string_list 
        /// </summary>
        void VisitStringListNot(AstStringListNot.AstStringListNot1 a);
        
        /// <summary>
        /// string_list_not : NONE 
        /// </summary>
        void VisitStringListNot(AstStringListNot.AstStringListNot2 a);
        
        /// <summary>
        /// secondary_role_args : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSecondaryRoleArgs(AstSecondaryRoleArgs a);
        
        /// <summary>
        /// secondary_role_config : allow_connections_set 
        /// </summary>
        void VisitSecondaryRoleConfig(AstSecondaryRoleConfig.AstSecondaryRoleConfig1 a);
        
        /// <summary>
        /// secondary_role_config : READ_ONLY_ROUTING_LIST EQUAL LR_BRACKET stringtext RR_BRACKET 
        /// </summary>
        void VisitSecondaryRoleConfig(AstSecondaryRoleConfig.AstSecondaryRoleConfig2 a);
        
        /// <summary>
        /// allow_connections_set : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAllowConnectionsSet(AstAllowConnectionsSet a);
        
        /// <summary>
        /// alter_availability_group_options : SET LR_BRACKET alter_availability_group_option_set RR_BRACKET 
        /// </summary>
        void VisitAlterAvailabilityGroupOptions(AstAlterAvailabilityGroupOptions.AstAlterAvailabilityGroupOptions1 a);
        
        /// <summary>
        /// alter_availability_group_options : add_remove_database 
        /// </summary>
        void VisitAlterAvailabilityGroupOptions(AstAlterAvailabilityGroupOptions.AstAlterAvailabilityGroupOptions2 a);
        
        /// <summary>
        /// alter_availability_group_options : alter_availability_replicat 
        /// </summary>
        void VisitAlterAvailabilityGroupOptions(AstAlterAvailabilityGroupOptions.AstAlterAvailabilityGroupOptions3 a);
        
        /// <summary>
        /// alter_availability_group_options : alter_options_listener 
        /// </summary>
        void VisitAlterAvailabilityGroupOptions(AstAlterAvailabilityGroupOptions.AstAlterAvailabilityGroupOptions4 a);
        
        /// <summary>
        /// alter_availability_group_options : alter_role 
        /// </summary>
        void VisitAlterAvailabilityGroupOptions(AstAlterAvailabilityGroupOptions.AstAlterAvailabilityGroupOptions5 a);
        
        /// <summary>
        /// alter_availability_group_options : availability_group_options 
        /// </summary>
        void VisitAlterAvailabilityGroupOptions(AstAlterAvailabilityGroupOptions.AstAlterAvailabilityGroupOptions6 a);
        
        /// <summary>
        /// alter_availability_group_options : grant_deny CREATE ANY DATABASE 
        /// </summary>
        void VisitAlterAvailabilityGroupOptions(AstAlterAvailabilityGroupOptions.AstAlterAvailabilityGroupOptions7 a);
        
        /// <summary>
        /// alter_availability_group_options : FAILOVER 
        /// </summary>
        void VisitAlterAvailabilityGroupOptions(AstAlterAvailabilityGroupOptions.AstAlterAvailabilityGroupOptions8 a);
        
        /// <summary>
        /// alter_availability_group_options : FORCE_FAILOVER_ALLOW_DATA_LOSS 
        /// </summary>
        void VisitAlterAvailabilityGroupOptions(AstAlterAvailabilityGroupOptions.AstAlterAvailabilityGroupOptions9 a);
        
        /// <summary>
        /// alter_availability_group_options : OFFLINE 
        /// </summary>
        void VisitAlterAvailabilityGroupOptions(AstAlterAvailabilityGroupOptions.AstAlterAvailabilityGroupOptions10 a);
        
        /// <summary>
        /// alter_availability_group_options : WITH LR_BRACKET DTC_SUPPORT EQUAL PER_DB RR_BRACKET 
        /// </summary>
        void VisitAlterAvailabilityGroupOptions(AstAlterAvailabilityGroupOptions.AstAlterAvailabilityGroupOptions11 a);
        
        /// <summary>
        /// alter_availability_group_option_set : AUTOMATED_BACKUP_PREFERENCE EQUAL primary_secondary_none 
        /// </summary>
        void VisitAlterAvailabilityGroupOptionSet(AstAlterAvailabilityGroupOptionSet.AstAlterAvailabilityGroupOptionSet1 a);
        
        /// <summary>
        /// alter_availability_group_option_set : FAILURE_CONDITION_LEVEL EQUAL decimal 
        /// </summary>
        void VisitAlterAvailabilityGroupOptionSet(AstAlterAvailabilityGroupOptionSet.AstAlterAvailabilityGroupOptionSet2 a);
        
        /// <summary>
        /// alter_availability_group_option_set : HEALTH_CHECK_TIMEOUT EQUAL milliseconds=decimal 
        /// </summary>
        void VisitAlterAvailabilityGroupOptionSet(AstAlterAvailabilityGroupOptionSet.AstAlterAvailabilityGroupOptionSet3 a);
        
        /// <summary>
        /// alter_availability_group_option_set : DB_FAILOVER EQUAL on_off 
        /// </summary>
        void VisitAlterAvailabilityGroupOptionSet(AstAlterAvailabilityGroupOptionSet.AstAlterAvailabilityGroupOptionSet4 a);
        
        /// <summary>
        /// alter_availability_group_option_set : REQUIRED_SYNCHRONIZED_SECONDARIES_TO_COMMIT EQUAL decimal 
        /// </summary>
        void VisitAlterAvailabilityGroupOptionSet(AstAlterAvailabilityGroupOptionSet.AstAlterAvailabilityGroupOptionSet5 a);
        
        /// <summary>
        /// server_instance_txt : Bb.Generators.ModelMethod
        /// </summary>
        void VisitServerInstanceTxt(AstServerInstanceTxt a);
        
        /// <summary>
        /// create_or_alter_broker_priority : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterBrokerPriority(AstCreateOrAlterBrokerPriority a);
        
        /// <summary>
        /// broker_contract_name : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBrokerContractName(AstBrokerContractName a);
        
        /// <summary>
        /// broker_local_service_name : LOCAL_SERVICE_NAME EQUAL DOUBLE_FORWARD_SLASH? id_ COMMA? 
        /// </summary>
        void VisitBrokerLocalServiceName(AstBrokerLocalServiceName.AstBrokerLocalServiceName1 a);
        
        /// <summary>
        /// broker_local_service_name : LOCAL_SERVICE_NAME EQUAL ANY COMMA? 
        /// </summary>
        void VisitBrokerLocalServiceName(AstBrokerLocalServiceName.AstBrokerLocalServiceName2 a);
        
        /// <summary>
        /// broker_remote_service_name : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBrokerRemoteServiceName(AstBrokerRemoteServiceName a);
        
        /// <summary>
        /// broker_priority_level : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBrokerPriorityLevel(AstBrokerPriorityLevel a);
        
        /// <summary>
        /// id_any : id_ 
        /// </summary>
        void VisitIdAny(AstIdAny.AstIdAny1 a);
        
        /// <summary>
        /// id_any : ANY 
        /// </summary>
        void VisitIdAny(AstIdAny.AstIdAny2 a);
        
        /// <summary>
        /// stringtext_any : id_ 
        /// </summary>
        void VisitStringtextAny(AstStringtextAny.AstStringtextAny1 a);
        
        /// <summary>
        /// stringtext_any : ANY 
        /// </summary>
        void VisitStringtextAny(AstStringtextAny.AstStringtextAny2 a);
        
        void VisitDropBrokerPriority(AstDropBrokerPriority a);
        
        /// <summary>
        /// alter_certificate : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterCertificate(AstAlterCertificate a);
        
        /// <summary>
        /// alter_column_encryption_key : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterColumnEncryptionKey(AstAlterColumnEncryptionKey a);
        
        /// <summary>
        /// create_column_encryption_key : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateColumnEncryptionKey(AstCreateColumnEncryptionKey a);
        
        /// <summary>
        /// drop_certificate : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropCertificate(AstDropCertificate a);
        
        /// <summary>
        /// drop_column_encryption_key : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropColumnEncryptionKey(AstDropColumnEncryptionKey a);
        
        /// <summary>
        /// drop_column_master_key : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropColumnMasterKey(AstDropColumnMasterKey a);
        
        void VisitDropContract(AstDropContract a);
        
        /// <summary>
        /// drop_credential : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropCredential(AstDropCredential a);
        
        /// <summary>
        /// drop_cryptograhic_provider : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropCryptograhicProvider(AstDropCryptograhicProvider a);
        
        void VisitDropDatabase(AstDropDatabase a);
        
        /// <summary>
        /// drop_database_audit_specification : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropDatabaseAuditSpecification(AstDropDatabaseAuditSpecification a);
        
        void VisitDropDatabaseEncryptionKey(AstDropDatabaseEncryptionKey a);
        
        /// <summary>
        /// drop_database_scoped_credential : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropDatabaseScopedCredential(AstDropDatabaseScopedCredential a);
        
        void VisitDropDefault(AstDropDefault a);
        
        /// <summary>
        /// drop_endpoint : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropEndpoint(AstDropEndpoint a);
        
        /// <summary>
        /// drop_external_data_source : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropExternalDataSource(AstDropExternalDataSource a);
        
        /// <summary>
        /// drop_external_file_format : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropExternalFileFormat(AstDropExternalFileFormat a);
        
        /// <summary>
        /// drop_external_library : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropExternalLibrary(AstDropExternalLibrary a);
        
        /// <summary>
        /// drop_external_resource_pool : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropExternalResourcePool(AstDropExternalResourcePool a);
        
        /// <summary>
        /// drop_external_table : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropExternalTable(AstDropExternalTable a);
        
        /// <summary>
        /// drop_event_notifications : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropEventNotifications(AstDropEventNotifications a);
        
        /// <summary>
        /// event_notification_on : server_database 
        /// </summary>
        void VisitEventNotificationOn(AstEventNotificationOn.AstEventNotificationOn1 a);
        
        /// <summary>
        /// event_notification_on : QUEUE queue_id 
        /// </summary>
        void VisitEventNotificationOn(AstEventNotificationOn.AstEventNotificationOn2 a);
        
        /// <summary>
        /// drop_event_session : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropEventSession(AstDropEventSession a);
        
        /// <summary>
        /// drop_fulltext_catalog : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropFulltextCatalog(AstDropFulltextCatalog a);
        
        /// <summary>
        /// drop_fulltext_index : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropFulltextIndex(AstDropFulltextIndex a);
        
        /// <summary>
        /// drop_fulltext_stoplist : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropFulltextStoplist(AstDropFulltextStoplist a);
        
        /// <summary>
        /// drop_login : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropLogin(AstDropLogin a);
        
        void VisitDropMasterKey(AstDropMasterKey a);
        
        /// <summary>
        /// drop_message_type : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropMessageType(AstDropMessageType a);
        
        /// <summary>
        /// drop_partition_function : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropPartitionFunction(AstDropPartitionFunction a);
        
        /// <summary>
        /// drop_partition_scheme : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropPartitionScheme(AstDropPartitionScheme a);
        
        /// <summary>
        /// drop_queue : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropQueue(AstDropQueue a);
        
        /// <summary>
        /// drop_remote_service_binding : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropRemoteServiceBinding(AstDropRemoteServiceBinding a);
        
        /// <summary>
        /// drop_resource_pool : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropResourcePool(AstDropResourcePool a);
        
        /// <summary>
        /// drop_db_role : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropDbRole(AstDropDbRole a);
        
        /// <summary>
        /// drop_route : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropRoute(AstDropRoute a);
        
        void VisitDropRule(AstDropRule a);
        
        /// <summary>
        /// drop_schema : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropSchema(AstDropSchema a);
        
        /// <summary>
        /// drop_search_property_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropSearchPropertyList(AstDropSearchPropertyList a);
        
        /// <summary>
        /// drop_security_policy : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropSecurityPolicy(AstDropSecurityPolicy a);
        
        void VisitDropSequence(AstDropSequence a);
        
        /// <summary>
        /// drop_server_audit : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropServerAudit(AstDropServerAudit a);
        
        /// <summary>
        /// drop_server_audit_specification : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropServerAuditSpecification(AstDropServerAuditSpecification a);
        
        /// <summary>
        /// drop_server_role : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropServerRole(AstDropServerRole a);
        
        /// <summary>
        /// drop_service : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropService(AstDropService a);
        
        /// <summary>
        /// drop_signature : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropSignature(AstDropSignature a);
        
        /// <summary>
        /// drop_signature_bys : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropSignatureBys(AstDropSignatureBys a);
        
        /// <summary>
        /// drop_signature_by : CERTIFICATE certificate_id 
        /// </summary>
        void VisitDropSignatureBy(AstDropSignatureBy.AstDropSignatureBy1 a);
        
        /// <summary>
        /// drop_signature_by : ASYMMETRIC KEY asym_key_id 
        /// </summary>
        void VisitDropSignatureBy(AstDropSignatureBy.AstDropSignatureBy2 a);
        
        /// <summary>
        /// drop_statistics_id_azure_dw_and_pdw : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropStatisticsIdAzureDwAndPdw(AstDropStatisticsIdAzureDwAndPdw a);
        
        /// <summary>
        /// drop_symmetric_key : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropSymmetricKey(AstDropSymmetricKey a);
        
        /// <summary>
        /// drop_synonym : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropSynonym(AstDropSynonym a);
        
        /// <summary>
        /// drop_user : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropUser(AstDropUser a);
        
        /// <summary>
        /// drop_workload_group : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropWorkloadGroup(AstDropWorkloadGroup a);
        
        /// <summary>
        /// drop_xml_schema_collection : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropXmlSchemaCollection(AstDropXmlSchemaCollection a);
        
        /// <summary>
        /// disable_trigger : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDisableTrigger(AstDisableTrigger a);
        
        /// <summary>
        /// enable_trigger : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEnableTrigger(AstEnableTrigger a);
        
        /// <summary>
        /// trigger_setting : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTriggerSetting(AstTriggerSetting a);
        
        /// <summary>
        /// trigger_name : schema_trigger_refs 
        /// </summary>
        void VisitTriggerName(AstTriggerName.AstTriggerName1 a);
        
        /// <summary>
        /// trigger_name : ALL 
        /// </summary>
        void VisitTriggerName(AstTriggerName.AstTriggerName2 a);
        
        /// <summary>
        /// trigger_target : schema_object_ref 
        /// </summary>
        void VisitTriggerTarget(AstTriggerTarget.AstTriggerTarget1 a);
        
        /// <summary>
        /// trigger_target : all_server_database 
        /// </summary>
        void VisitTriggerTarget(AstTriggerTarget.AstTriggerTarget2 a);
        
        /// <summary>
        /// lock_table : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLockTable(AstLockTable a);
        
        /// <summary>
        /// lock_table_delay : WAIT seconds=decimal 
        /// </summary>
        void VisitLockTableDelay(AstLockTableDelay.AstLockTableDelay1 a);
        
        /// <summary>
        /// lock_table_delay : NOWAIT 
        /// </summary>
        void VisitLockTableDelay(AstLockTableDelay.AstLockTableDelay2 a);
        
        /// <summary>
        /// truncate_table : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTruncateTable(AstTruncateTable a);
        
        void VisitCreateColumnMasterKey(AstCreateColumnMasterKey a);
        
        /// <summary>
        /// alter_credential : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterCredential(AstAlterCredential a);
        
        /// <summary>
        /// create_credential : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateCredential(AstCreateCredential a);
        
        /// <summary>
        /// alter_cryptographic_provider : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterCryptographicProvider(AstAlterCryptographicProvider a);
        
        /// <summary>
        /// create_cryptographic_provider : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateCryptographicProvider(AstCreateCryptographicProvider a);
        
        /// <summary>
        /// create_event_notification : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateEventNotification(AstCreateEventNotification a);
        
        /// <summary>
        /// create_or_alter_event_session : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterEventSession(AstCreateOrAlterEventSession a);
        
        void VisitCreateOrAlterEventSessionWith(AstCreateOrAlterEventSessionWith a);
        
        /// <summary>
        /// session_arg_max_memory : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSessionArgMaxMemory(AstSessionArgMaxMemory a);
        
        /// <summary>
        /// session_arg_event_retention_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSessionArgEventRetentionMode(AstSessionArgEventRetentionMode a);
        
        /// <summary>
        /// session_arg_max_dispatch : MAX_DISPATCH_LATENCY EQUAL decimal SECONDS 
        /// </summary>
        void VisitSessionArgMaxDispatch(AstSessionArgMaxDispatch.AstSessionArgMaxDispatch1 a);
        
        /// <summary>
        /// session_arg_max_dispatch : MAX_DISPATCH_LATENCY EQUAL INFINITE 
        /// </summary>
        void VisitSessionArgMaxDispatch(AstSessionArgMaxDispatch.AstSessionArgMaxDispatch2 a);
        
        /// <summary>
        /// session_arg_max_event_size : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSessionArgMaxEventSize(AstSessionArgMaxEventSize a);
        
        /// <summary>
        /// session_arg_memory_partition : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSessionArgMemoryPartition(AstSessionArgMemoryPartition a);
        
        /// <summary>
        /// session_arg_track_causality : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSessionArgTrackCausality(AstSessionArgTrackCausality a);
        
        /// <summary>
        /// session_arg_startup_state : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSessionArgStartupState(AstSessionArgStartupState a);
        
        /// <summary>
        /// create_or_alter_event_session_add_event : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterEventSessionAddEvent(AstCreateOrAlterEventSessionAddEvent a);
        
        /// <summary>
        /// set_attribute : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSetAttribute(AstSetAttribute a);
        
        /// <summary>
        /// event_session_action : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEventSessionAction(AstEventSessionAction a);
        
        /// <summary>
        /// where_session_condition : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWhereSessionCondition(AstWhereSessionCondition a);
        
        /// <summary>
        /// create_or_alter_event_session_add_target : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterEventSessionAddTarget(AstCreateOrAlterEventSessionAddTarget a);
        
        /// <summary>
        /// target_parameter_blocks : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTargetParameterBlocks(AstTargetParameterBlocks a);
        
        /// <summary>
        /// target_parameter_block : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTargetParameterBlock(AstTargetParameterBlock a);
        
        /// <summary>
        /// target_parameter_sets : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTargetParameterSets(AstTargetParameterSets a);
        
        /// <summary>
        /// target_parameter_ids : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTargetParameterIds(AstTargetParameterIds a);
        
        /// <summary>
        /// target_parameter_set : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTargetParameterSet(AstTargetParameterSet a);
        
        /// <summary>
        /// target_parameter_value : LR_BRACKET? decimal RR_BRACKET? 
        /// </summary>
        void VisitTargetParameterValue(AstTargetParameterValue.AstTargetParameterValue1 a);
        
        /// <summary>
        /// target_parameter_value : stringtext 
        /// </summary>
        void VisitTargetParameterValue(AstTargetParameterValue.AstTargetParameterValue2 a);
        
        /// <summary>
        /// create_or_alter_event_session_del_target : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterEventSessionDelTarget(AstCreateOrAlterEventSessionDelTarget a);
        
        /// <summary>
        /// create_or_alter_event_session_del_event : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterEventSessionDelEvent(AstCreateOrAlterEventSessionDelEvent a);
        
        /// <summary>
        /// start_stop : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStartStop(AstStartStop a);
        
        /// <summary>
        /// event_session_predicate_expression : COMMA? and_or? NOT? event_session_predicate_factor 
        /// </summary>
        void VisitEventSessionPredicateExpression(AstEventSessionPredicateExpression.AstEventSessionPredicateExpression1 a);
        
        /// <summary>
        /// event_session_predicate_expression : COMMA? and_or? NOT? LR_BRACKET event_session_predicate_expression RR_BRACKET 
        /// </summary>
        void VisitEventSessionPredicateExpression(AstEventSessionPredicateExpression.AstEventSessionPredicateExpression2 a);
        
        /// <summary>
        /// event_session_predicate_factor : event_session_predicate_leaf 
        /// </summary>
        void VisitEventSessionPredicateFactor(AstEventSessionPredicateFactor.AstEventSessionPredicateFactor1 a);
        
        /// <summary>
        /// event_session_predicate_factor : LR_BRACKET event_session_predicate_expression RR_BRACKET 
        /// </summary>
        void VisitEventSessionPredicateFactor(AstEventSessionPredicateFactor.AstEventSessionPredicateFactor2 a);
        
        /// <summary>
        /// event_session_predicate_leaf : event_field_id 
        /// </summary>
        void VisitEventSessionPredicateLeaf(AstEventSessionPredicateLeaf.AstEventSessionPredicateLeaf1 a);
        
        /// <summary>
        /// event_session_predicate_leaf : event_session_id_source1 event_session_predicate_leaf_ope decimal_string 
        /// </summary>
        void VisitEventSessionPredicateLeaf(AstEventSessionPredicateLeaf.AstEventSessionPredicateLeaf2 a);
        
        /// <summary>
        /// event_session_predicate_leaf : source1=full_predicate_source_ref LR_BRACKET event_session_id_source2 RR_BRACKET 
        /// </summary>
        void VisitEventSessionPredicateLeaf(AstEventSessionPredicateLeaf.AstEventSessionPredicateLeaf3 a);
        
        /// <summary>
        /// event_session_id_source1 : event_field_id 
        /// </summary>
        void VisitEventSessionIdSource1(AstEventSessionIdSource1.AstEventSessionIdSource11 a);
        
        /// <summary>
        /// event_session_id_source1 : full_predicate_source_ref 
        /// </summary>
        void VisitEventSessionIdSource1(AstEventSessionIdSource1.AstEventSessionIdSource12 a);
        
        /// <summary>
        /// event_session_id_source2 : event_field_id 
        /// </summary>
        void VisitEventSessionIdSource2(AstEventSessionIdSource2.AstEventSessionIdSource21 a);
        
        /// <summary>
        /// event_session_id_source2 : full_predicate_source_ref COMMA decimal_string 
        /// </summary>
        void VisitEventSessionIdSource2(AstEventSessionIdSource2.AstEventSessionIdSource22 a);
        
        /// <summary>
        /// alter_external_data_source : ALTER EXTERNAL DATA SOURCE data_source_id SET external_sources 
        /// </summary>
        void VisitAlterExternalDataSource(AstAlterExternalDataSource.AstAlterExternalDataSource1 a);
        
        /// <summary>
        /// alter_external_data_source : ALTER EXTERNAL DATA SOURCE data_source_id WITH LR_BRACKET TYPE EQUAL BLOB_STORAGE COMMA LOCATION EQUAL location=stringtext external_credential? RR_BRACKET 
        /// </summary>
        void VisitAlterExternalDataSource(AstAlterExternalDataSource.AstAlterExternalDataSource2 a);
        
        /// <summary>
        /// external_credential : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExternalCredential(AstExternalCredential a);
        
        /// <summary>
        /// external_sources : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExternalSources(AstExternalSources a);
        
        /// <summary>
        /// external_source : LOCATION EQUAL location=stringtext 
        /// </summary>
        void VisitExternalSource(AstExternalSource.AstExternalSource1 a);
        
        /// <summary>
        /// external_source : RESOURCE_MANAGER_LOCATION EQUAL resource_manager_location=stringtext 
        /// </summary>
        void VisitExternalSource(AstExternalSource.AstExternalSource2 a);
        
        /// <summary>
        /// external_source : CREDENTIAL EQUAL credential_id 
        /// </summary>
        void VisitExternalSource(AstExternalSource.AstExternalSource3 a);
        
        /// <summary>
        /// alter_external_library : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterExternalLibrary(AstAlterExternalLibrary a);
        
        /// <summary>
        /// external_lib_infos : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExternalLibInfos(AstExternalLibInfos a);
        
        /// <summary>
        /// create_external_library : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateExternalLibrary(AstCreateExternalLibrary a);
        
        /// <summary>
        /// file_spec2 : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFileSpec2(AstFileSpec2 a);
        
        /// <summary>
        /// code_content : stringtext 
        /// </summary>
        void VisitCodeContent(AstCodeContent.AstCodeContent1 a);
        
        /// <summary>
        /// code_content : binary_ 
        /// </summary>
        void VisitCodeContent(AstCodeContent.AstCodeContent2 a);
        
        /// <summary>
        /// code_content : NONE 
        /// </summary>
        void VisitCodeContent(AstCodeContent.AstCodeContent3 a);
        
        /// <summary>
        /// alter_external_resource_pool : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterExternalResourcePool(AstAlterExternalResourcePool a);
        
        void VisitCreateExternalResourcePool(AstCreateExternalResourcePool a);
        
        /// <summary>
        /// external_resource_with : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExternalResourceWith(AstExternalResourceWith a);
        
        /// <summary>
        /// max_process_set : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMaxProcessSet(AstMaxProcessSet a);
        
        /// <summary>
        /// max_memory_set : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMaxMemorySet(AstMaxMemorySet a);
        
        /// <summary>
        /// max_cpu : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMaxCpu(AstMaxCpu a);
        
        /// <summary>
        /// alter_fulltext_catalog : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterFulltextCatalog(AstAlterFulltextCatalog a);
        
        /// <summary>
        /// create_fulltext_catalog : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateFulltextCatalog(AstCreateFulltextCatalog a);
        
        /// <summary>
        /// alter_fulltext_stoplist : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterFulltextStoplist(AstAlterFulltextStoplist a);
        
        /// <summary>
        /// fulltext_languageList : stringtext 
        /// </summary>
        void VisitFulltextLanguagelist(AstFulltextLanguagelist.AstFulltextLanguagelist1 a);
        
        /// <summary>
        /// fulltext_languageList : decimal 
        /// </summary>
        void VisitFulltextLanguagelist(AstFulltextLanguagelist.AstFulltextLanguagelist2 a);
        
        /// <summary>
        /// fulltext_languageList : binary_ 
        /// </summary>
        void VisitFulltextLanguagelist(AstFulltextLanguagelist.AstFulltextLanguagelist3 a);
        
        /// <summary>
        /// create_fulltext_stoplist : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateFulltextStoplist(AstCreateFulltextStoplist a);
        
        /// <summary>
        /// alter_login_sql_server : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterLoginSqlServer(AstAlterLoginSqlServer a);
        
        /// <summary>
        /// alter_login_sql_server_infos : enable_disable? 
        /// </summary>
        void VisitAlterLoginSqlServerInfos(AstAlterLoginSqlServerInfos.AstAlterLoginSqlServerInfos1 a);
        
        /// <summary>
        /// alter_login_sql_server_infos : WITH alter_login_sql_server_settings 
        /// </summary>
        void VisitAlterLoginSqlServerInfos(AstAlterLoginSqlServerInfos.AstAlterLoginSqlServerInfos2 a);
        
        /// <summary>
        /// alter_login_sql_server_infos : add_drop CREDENTIAL credential_id 
        /// </summary>
        void VisitAlterLoginSqlServerInfos(AstAlterLoginSqlServerInfos.AstAlterLoginSqlServerInfos3 a);
        
        /// <summary>
        /// alter_login_sql_server_settings : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterLoginSqlServerSettings(AstAlterLoginSqlServerSettings a);
        
        /// <summary>
        /// create_login_sql_server : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateLoginSqlServer(AstCreateLoginSqlServer a);
        
        void VisitCreateLoginSqlServerSettings(AstCreateLoginSqlServerSettings a);
        
        /// <summary>
        /// create_login_sql_server_from : WINDOWS WITH COMMA? DEFAULT_DATABASE EQUAL database_id COMMA? DEFAULT_LANGUAGE EQUAL default_language=stringtext 
        /// </summary>
        void VisitCreateLoginSqlServerFrom(AstCreateLoginSqlServerFrom.AstCreateLoginSqlServerFrom1 a);
        
        /// <summary>
        /// create_login_sql_server_from : CERTIFICATE certificate_id 
        /// </summary>
        void VisitCreateLoginSqlServerFrom(AstCreateLoginSqlServerFrom.AstCreateLoginSqlServerFrom2 a);
        
        /// <summary>
        /// create_login_sql_server_from : ASYMMETRIC KEY asym_key_id 
        /// </summary>
        void VisitCreateLoginSqlServerFrom(AstCreateLoginSqlServerFrom.AstCreateLoginSqlServerFrom3 a);
        
        /// <summary>
        /// alter_login_azure_sql : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterLoginAzureSql(AstAlterLoginAzureSql a);
        
        /// <summary>
        /// alter_login_azure_sql_infos : enable_disable? 
        /// </summary>
        void VisitAlterLoginAzureSqlInfos(AstAlterLoginAzureSqlInfos.AstAlterLoginAzureSqlInfos1 a);
        
        /// <summary>
        /// alter_login_azure_sql_infos : WITH alter_login_azure_sql_with 
        /// </summary>
        void VisitAlterLoginAzureSqlInfos(AstAlterLoginAzureSqlInfos.AstAlterLoginAzureSqlInfos2 a);
        
        /// <summary>
        /// alter_login_azure_sql_with : password_setting old_pwd? 
        /// </summary>
        void VisitAlterLoginAzureSqlWith(AstAlterLoginAzureSqlWith.AstAlterLoginAzureSqlWith1 a);
        
        /// <summary>
        /// alter_login_azure_sql_with : NAME EQUAL login_id 
        /// </summary>
        void VisitAlterLoginAzureSqlWith(AstAlterLoginAzureSqlWith.AstAlterLoginAzureSqlWith2 a);
        
        /// <summary>
        /// create_login_azure_sql : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateLoginAzureSql(AstCreateLoginAzureSql a);
        
        /// <summary>
        /// alter_login_azure_sql_dw_and_pdw : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterLoginAzureSqlDwAndPdw(AstAlterLoginAzureSqlDwAndPdw a);
        
        /// <summary>
        /// login_pwd_strategy : enable_disable? 
        /// </summary>
        void VisitLoginPwdStrategy(AstLoginPwdStrategy.AstLoginPwdStrategy1 a);
        
        /// <summary>
        /// login_pwd_strategy : WITH change_password 
        /// </summary>
        void VisitLoginPwdStrategy(AstLoginPwdStrategy.AstLoginPwdStrategy2 a);
        
        /// <summary>
        /// change_password : password_setting old_pwd_strategies? 
        /// </summary>
        void VisitChangePassword(AstChangePassword.AstChangePassword1 a);
        
        /// <summary>
        /// change_password : NAME EQUAL login_id 
        /// </summary>
        void VisitChangePassword(AstChangePassword.AstChangePassword2 a);
        
        /// <summary>
        /// create_login_pdw : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateLoginPdw(AstCreateLoginPdw a);
        
        /// <summary>
        /// login_pdw_pwd : WITH password_setting MUST_CHANGE? CHECK_POLICY EQUAL on_off? 
        /// </summary>
        void VisitLoginPdwPwd(AstLoginPdwPwd.AstLoginPdwPwd1 a);
        
        /// <summary>
        /// login_pdw_pwd : FROM WINDOWS 
        /// </summary>
        void VisitLoginPdwPwd(AstLoginPdwPwd.AstLoginPdwPwd2 a);
        
        /// <summary>
        /// alter_master_key_sql_server : ALTER MASTER KEY regenerate_mater_key 
        /// </summary>
        void VisitAlterMasterKeySqlServer(AstAlterMasterKeySqlServer.AstAlterMasterKeySqlServer1 a);
        
        /// <summary>
        /// alter_master_key_sql_server : ALTER MASTER KEY add_drop add_master_key 
        /// </summary>
        void VisitAlterMasterKeySqlServer(AstAlterMasterKeySqlServer.AstAlterMasterKeySqlServer2 a);
        
        /// <summary>
        /// create_master_key_sql_server : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateMasterKeySqlServer(AstCreateMasterKeySqlServer a);
        
        /// <summary>
        /// alter_master_key_azure_sql : ALTER MASTER KEY regenerate_mater_key 
        /// </summary>
        void VisitAlterMasterKeyAzureSql(AstAlterMasterKeyAzureSql.AstAlterMasterKeyAzureSql1 a);
        
        /// <summary>
        /// alter_master_key_azure_sql : ALTER MASTER KEY ADD add_master_key 
        /// </summary>
        void VisitAlterMasterKeyAzureSql(AstAlterMasterKeyAzureSql.AstAlterMasterKeyAzureSql2 a);
        
        /// <summary>
        /// alter_master_key_azure_sql : ALTER MASTER KEY DROP encryption_by_pwd 
        /// </summary>
        void VisitAlterMasterKeyAzureSql(AstAlterMasterKeyAzureSql.AstAlterMasterKeyAzureSql3 a);
        
        /// <summary>
        /// regenerate_mater_key : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRegenerateMaterKey(AstRegenerateMaterKey a);
        
        /// <summary>
        /// add_master_key : ENCRYPTION BY SERVICE MASTER KEY 
        /// </summary>
        void VisitAddMasterKey(AstAddMasterKey.AstAddMasterKey1 a);
        
        /// <summary>
        /// add_master_key : ENCRYPTION BY password_setting 
        /// </summary>
        void VisitAddMasterKey(AstAddMasterKey.AstAddMasterKey2 a);
        
        /// <summary>
        /// create_master_key_azure_sql : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateMasterKeyAzureSql(AstCreateMasterKeyAzureSql a);
        
        /// <summary>
        /// alter_message_type : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterMessageType(AstAlterMessageType a);
        
        /// <summary>
        /// message_validation_value : message_validation_value_enum 
        /// </summary>
        void VisitMessageValidationValue(AstMessageValidationValue.AstMessageValidationValue1 a);
        
        /// <summary>
        /// message_validation_value : VALID_XML WITH SCHEMA COLLECTION schema_collection_id 
        /// </summary>
        void VisitMessageValidationValue(AstMessageValidationValue.AstMessageValidationValue2 a);
        
        /// <summary>
        /// alter_partition_function : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterPartitionFunction(AstAlterPartitionFunction a);
        
        /// <summary>
        /// split_or_merge : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSplitOrMerge(AstSplitOrMerge a);
        
        /// <summary>
        /// alter_partition_scheme : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterPartitionScheme(AstAlterPartitionScheme a);
        
        /// <summary>
        /// alter_remote_service_binding : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterRemoteServiceBinding(AstAlterRemoteServiceBinding a);
        
        /// <summary>
        /// create_remote_service_binding : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateRemoteServiceBinding(AstCreateRemoteServiceBinding a);
        
        /// <summary>
        /// create_resource_pool : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateResourcePool(AstCreateResourcePool a);
        
        void VisitCreateResourcePoolInfos(AstCreateResourcePoolInfos a);
        
        /// <summary>
        /// resource_affinity_scheduler_value : AUTO 
        /// </summary>
        void VisitResourceAffinitySchedulerValue(AstResourceAffinitySchedulerValue.AstResourceAffinitySchedulerValue1 a);
        
        /// <summary>
        /// resource_affinity_scheduler_value : LR_BRACKET decimal_ranges RR_BRACKET 
        /// </summary>
        void VisitResourceAffinitySchedulerValue(AstResourceAffinitySchedulerValue.AstResourceAffinitySchedulerValue2 a);
        
        /// <summary>
        /// resource_affinity_scheduler_value : NUMANODE EQUAL LR_BRACKET decimal_ranges RR_BRACKET 
        /// </summary>
        void VisitResourceAffinitySchedulerValue(AstResourceAffinitySchedulerValue.AstResourceAffinitySchedulerValue3 a);
        
        /// <summary>
        /// decimal_range : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDecimalRange(AstDecimalRange a);
        
        /// <summary>
        /// alter_resource_governor : ALTER RESOURCE GOVERNOR disable_reconfigure 
        /// </summary>
        void VisitAlterResourceGovernor(AstAlterResourceGovernor.AstAlterResourceGovernor1 a);
        
        /// <summary>
        /// alter_resource_governor : ALTER RESOURCE GOVERNOR WITH LR_BRACKET CLASSIFIER_FUNCTION EQUAL schema_func_proc_ref RR_BRACKET 
        /// </summary>
        void VisitAlterResourceGovernor(AstAlterResourceGovernor.AstAlterResourceGovernor2 a);
        
        /// <summary>
        /// alter_resource_governor : ALTER RESOURCE GOVERNOR WITH LR_BRACKET CLASSIFIER_FUNCTION EQUAL NULL_ RR_BRACKET 
        /// </summary>
        void VisitAlterResourceGovernor(AstAlterResourceGovernor.AstAlterResourceGovernor3 a);
        
        /// <summary>
        /// alter_resource_governor : ALTER RESOURCE GOVERNOR RESET STATISTICS 
        /// </summary>
        void VisitAlterResourceGovernor(AstAlterResourceGovernor.AstAlterResourceGovernor4 a);
        
        /// <summary>
        /// alter_resource_governor : ALTER RESOURCE GOVERNOR WITH LR_BRACKET MAX_OUTSTANDING_IO_PER_VOLUME EQUAL max_outstanding_io_per_volume=decimal RR_BRACKET 
        /// </summary>
        void VisitAlterResourceGovernor(AstAlterResourceGovernor.AstAlterResourceGovernor5 a);
        
        /// <summary>
        /// alter_db_role : ALTER ROLE old_role_name=role_id add_drop MEMBER database_id 
        /// </summary>
        void VisitAlterDbRole(AstAlterDbRole.AstAlterDbRole1 a);
        
        /// <summary>
        /// alter_db_role : ALTER ROLE old_role_name=role_id WITH NAME EQUAL new_role_name=role_id 
        /// </summary>
        void VisitAlterDbRole(AstAlterDbRole.AstAlterDbRole2 a);
        
        /// <summary>
        /// create_db_role : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateDbRole(AstCreateDbRole a);
        
        /// <summary>
        /// create_route : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateRoute(AstCreateRoute a);
        
        /// <summary>
        /// create_rule : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateRule(AstCreateRule a);
        
        /// <summary>
        /// alter_schema_sql : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterSchemaSql(AstAlterSchemaSql a);
        
        /// <summary>
        /// id_dot_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIdDotId(AstIdDotId a);
        
        /// <summary>
        /// create_schema : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateSchema(AstCreateSchema a);
        
        /// <summary>
        /// create_schema_name : schema_identifier schema_authorization? 
        /// </summary>
        void VisitCreateSchemaName(AstCreateSchemaName.AstCreateSchemaName1 a);
        
        /// <summary>
        /// create_schema_name : schema_identifier? schema_authorization 
        /// </summary>
        void VisitCreateSchemaName(AstCreateSchemaName.AstCreateSchemaName2 a);
        
        /// <summary>
        /// create_schema_targets : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateSchemaTargets(AstCreateSchemaTargets a);
        
        /// <summary>
        /// create_schema_target : create_table 
        /// </summary>
        void VisitCreateSchemaTarget(AstCreateSchemaTarget.AstCreateSchemaTarget1 a);
        
        /// <summary>
        /// create_schema_target : create_view 
        /// </summary>
        void VisitCreateSchemaTarget(AstCreateSchemaTarget.AstCreateSchemaTarget2 a);
        
        /// <summary>
        /// create_schema_target : grant_deny enum_dml ON SCHEMA DOUBLE_COLON object_identifier TO owner_id 
        /// </summary>
        void VisitCreateSchemaTarget(AstCreateSchemaTarget.AstCreateSchemaTarget3 a);
        
        /// <summary>
        /// create_schema_target : REVOKE enum_dml ON SCHEMA DOUBLE_COLON object_identifier FROM owner_id 
        /// </summary>
        void VisitCreateSchemaTarget(AstCreateSchemaTarget.AstCreateSchemaTarget4 a);
        
        /// <summary>
        /// schema_authorization : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaAuthorization(AstSchemaAuthorization a);
        
        /// <summary>
        /// enum_dml : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEnumDml(AstEnumDml a);
        
        /// <summary>
        /// create_schema_azure_sql_dw_and_pdw : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateSchemaAzureSqlDwAndPdw(AstCreateSchemaAzureSqlDwAndPdw a);
        
        /// <summary>
        /// alter_schema_azure_sql_dw_and_pdw : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterSchemaAzureSqlDwAndPdw(AstAlterSchemaAzureSqlDwAndPdw a);
        
        /// <summary>
        /// create_search_property_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateSearchPropertyList(AstCreateSearchPropertyList a);
        
        /// <summary>
        /// create_security_policy : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateSecurityPolicy(AstCreateSecurityPolicy a);
        
        /// <summary>
        /// schema_binding : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaBinding(AstSchemaBinding a);
        
        /// <summary>
        /// create_security_policy_add : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateSecurityPolicyAdd(AstCreateSecurityPolicyAdd a);
        
        /// <summary>
        /// schema_table_ref_impact : AFTER insert_update 
        /// </summary>
        void VisitSchemaTableRefImpact(AstSchemaTableRefImpact.AstSchemaTableRefImpact1 a);
        
        /// <summary>
        /// schema_table_ref_impact : BEFORE update_delate 
        /// </summary>
        void VisitSchemaTableRefImpact(AstSchemaTableRefImpact.AstSchemaTableRefImpact2 a);
        
        /// <summary>
        /// alter_sequence : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterSequence(AstAlterSequence a);
        
        void VisitAlterSequenceRestart(AstAlterSequenceRestart a);
        
        void VisitAlterSequenceIncrement(AstAlterSequenceIncrement a);
        
        /// <summary>
        /// sequence_cache : CACHE decimal 
        /// </summary>
        void VisitSequenceCache(AstSequenceCache.AstSequenceCache1 a);
        
        /// <summary>
        /// sequence_cache : NO CACHE 
        /// </summary>
        void VisitSequenceCache(AstSequenceCache.AstSequenceCache2 a);
        
        /// <summary>
        /// alter_sequence_max_value : MAXVALUE decimal 
        /// </summary>
        void VisitAlterSequenceMaxValue(AstAlterSequenceMaxValue.AstAlterSequenceMaxValue1 a);
        
        /// <summary>
        /// alter_sequence_max_value : NO MAXVALUE 
        /// </summary>
        void VisitAlterSequenceMaxValue(AstAlterSequenceMaxValue.AstAlterSequenceMaxValue2 a);
        
        /// <summary>
        /// alter_sequence_min_value : MINVALUE decimal 
        /// </summary>
        void VisitAlterSequenceMinValue(AstAlterSequenceMinValue.AstAlterSequenceMinValue1 a);
        
        /// <summary>
        /// alter_sequence_min_value : NO MINVALUE 
        /// </summary>
        void VisitAlterSequenceMinValue(AstAlterSequenceMinValue.AstAlterSequenceMinValue2 a);
        
        /// <summary>
        /// max_value_decimal : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMaxValueDecimal(AstMaxValueDecimal a);
        
        /// <summary>
        /// create_sequence : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateSequence(AstCreateSequence a);
        
        /// <summary>
        /// create_sequence_increment : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateSequenceIncrement(AstCreateSequenceIncrement a);
        
        /// <summary>
        /// create_sequence_min_value : MINVALUE real? 
        /// </summary>
        void VisitCreateSequenceMinValue(AstCreateSequenceMinValue.AstCreateSequenceMinValue1 a);
        
        /// <summary>
        /// create_sequence_min_value : NO MINVALUE 
        /// </summary>
        void VisitCreateSequenceMinValue(AstCreateSequenceMinValue.AstCreateSequenceMinValue2 a);
        
        /// <summary>
        /// create_sequence_max_value : MAXVALUE real? 
        /// </summary>
        void VisitCreateSequenceMaxValue(AstCreateSequenceMaxValue.AstCreateSequenceMaxValue1 a);
        
        /// <summary>
        /// create_sequence_max_value : NO MAXVALUE 
        /// </summary>
        void VisitCreateSequenceMaxValue(AstCreateSequenceMaxValue.AstCreateSequenceMaxValue2 a);
        
        /// <summary>
        /// real : Bb.Generators.ModelMethod
        /// </summary>
        void VisitReal(AstReal a);
        
        /// <summary>
        /// create_sequence_start : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateSequenceStart(AstCreateSequenceStart a);
        
        /// <summary>
        /// alter_server_audit : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterServerAudit(AstAlterServerAudit a);
        
        /// <summary>
        /// alter_server_audit_infos : TO server_audit_file with_server_audit_file? where_server_audit_condition? 
        /// </summary>
        void VisitAlterServerAuditInfos(AstAlterServerAuditInfos.AstAlterServerAuditInfos1 a);
        
        /// <summary>
        /// alter_server_audit_infos : REMOVE WHERE 
        /// </summary>
        void VisitAlterServerAuditInfos(AstAlterServerAuditInfos.AstAlterServerAuditInfos2 a);
        
        /// <summary>
        /// alter_server_audit_infos : MODIFY NAME EQUAL audit_id 
        /// </summary>
        void VisitAlterServerAuditInfos(AstAlterServerAuditInfos.AstAlterServerAuditInfos3 a);
        
        /// <summary>
        /// with_server_audit_file : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWithServerAuditFile(AstWithServerAuditFile a);
        
        /// <summary>
        /// server_audit_file_info : QUEUE_DELAY EQUAL queue_delay=decimal 
        /// </summary>
        void VisitServerAuditFileInfo(AstServerAuditFileInfo.AstServerAuditFileInfo1 a);
        
        /// <summary>
        /// server_audit_file_info : ON_FAILURE EQUAL continue_shutdown 
        /// </summary>
        void VisitServerAuditFileInfo(AstServerAuditFileInfo.AstServerAuditFileInfo2 a);
        
        /// <summary>
        /// server_audit_file_info : STATE EQUAL on_off 
        /// </summary>
        void VisitServerAuditFileInfo(AstServerAuditFileInfo.AstServerAuditFileInfo3 a);
        
        /// <summary>
        /// server_audit_file : FILE LR_BRACKET server_audit_file_specs? RR_BRACKET 
        /// </summary>
        void VisitServerAuditFile(AstServerAuditFile.AstServerAuditFile1 a);
        
        /// <summary>
        /// server_audit_file : APPLICATION_LOG 
        /// </summary>
        void VisitServerAuditFile(AstServerAuditFile.AstServerAuditFile2 a);
        
        /// <summary>
        /// server_audit_file : SECURITY_LOG 
        /// </summary>
        void VisitServerAuditFile(AstServerAuditFile.AstServerAuditFile3 a);
        
        /// <summary>
        /// server_audit_file_spec : FILEPATH EQUAL filepath=stringtext 
        /// </summary>
        void VisitServerAuditFileSpec(AstServerAuditFileSpec.AstServerAuditFileSpec1 a);
        
        /// <summary>
        /// server_audit_file_spec : MAXSIZE EQUAL decimal_size_unlimited 
        /// </summary>
        void VisitServerAuditFileSpec(AstServerAuditFileSpec.AstServerAuditFileSpec2 a);
        
        /// <summary>
        /// server_audit_file_spec : MAX_ROLLOVER_FILES EQUAL max_rollover_files=decimal_unlimited 
        /// </summary>
        void VisitServerAuditFileSpec(AstServerAuditFileSpec.AstServerAuditFileSpec3 a);
        
        /// <summary>
        /// server_audit_file_spec : MAX_FILES EQUAL max_files=decimal 
        /// </summary>
        void VisitServerAuditFileSpec(AstServerAuditFileSpec.AstServerAuditFileSpec4 a);
        
        /// <summary>
        /// server_audit_file_spec : RESERVE_DISK_SPACE EQUAL on_off 
        /// </summary>
        void VisitServerAuditFileSpec(AstServerAuditFileSpec.AstServerAuditFileSpec5 a);
        
        /// <summary>
        /// decimal_unlimited : decimal 
        /// </summary>
        void VisitDecimalUnlimited(AstDecimalUnlimited.AstDecimalUnlimited1 a);
        
        /// <summary>
        /// decimal_unlimited : UNLIMITED 
        /// </summary>
        void VisitDecimalUnlimited(AstDecimalUnlimited.AstDecimalUnlimited2 a);
        
        /// <summary>
        /// decimal_size_unlimited : decimal size_unity 
        /// </summary>
        void VisitDecimalSizeUnlimited(AstDecimalSizeUnlimited.AstDecimalSizeUnlimited1 a);
        
        /// <summary>
        /// decimal_size_unlimited : UNLIMITED 
        /// </summary>
        void VisitDecimalSizeUnlimited(AstDecimalSizeUnlimited.AstDecimalSizeUnlimited2 a);
        
        /// <summary>
        /// alter_server_audit_condition : COMMA? NOT? event_field_id audit_operator decimal_string 
        /// </summary>
        void VisitAlterServerAuditCondition(AstAlterServerAuditCondition.AstAlterServerAuditCondition1 a);
        
        /// <summary>
        /// alter_server_audit_condition : COMMA? and_or NOT? audit_operator decimal_string 
        /// </summary>
        void VisitAlterServerAuditCondition(AstAlterServerAuditCondition.AstAlterServerAuditCondition2 a);
        
        /// <summary>
        /// create_server_audit : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateServerAudit(AstCreateServerAudit a);
        
        /// <summary>
        /// create_server_audit_to_infos : TO server_audit_file WITH LR_BRACKET create_server_audit_withs? RR_BRACKET where_server_audit_condition? 
        /// </summary>
        void VisitCreateServerAuditToInfos(AstCreateServerAuditToInfos.AstCreateServerAuditToInfos1 a);
        
        /// <summary>
        /// create_server_audit_to_infos : REMOVE WHERE 
        /// </summary>
        void VisitCreateServerAuditToInfos(AstCreateServerAuditToInfos.AstCreateServerAuditToInfos2 a);
        
        /// <summary>
        /// create_server_audit_to_infos : MODIFY NAME EQUAL audit_id 
        /// </summary>
        void VisitCreateServerAuditToInfos(AstCreateServerAuditToInfos.AstCreateServerAuditToInfos3 a);
        
        /// <summary>
        /// where_server_audit_condition : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWhereServerAuditCondition(AstWhereServerAuditCondition a);
        
        /// <summary>
        /// create_server_audit_with : QUEUE_DELAY EQUAL queue_delay=decimal 
        /// </summary>
        void VisitCreateServerAuditWith(AstCreateServerAuditWith.AstCreateServerAuditWith1 a);
        
        /// <summary>
        /// create_server_audit_with : ON_FAILURE EQUAL continue_shutdown 
        /// </summary>
        void VisitCreateServerAuditWith(AstCreateServerAuditWith.AstCreateServerAuditWith2 a);
        
        /// <summary>
        /// create_server_audit_with : STATE EQUAL state=on_off 
        /// </summary>
        void VisitCreateServerAuditWith(AstCreateServerAuditWith.AstCreateServerAuditWith3 a);
        
        /// <summary>
        /// create_server_audit_with : audit1=audit_guid_id EQUAL audit2=audit_guid_id 
        /// </summary>
        void VisitCreateServerAuditWith(AstCreateServerAuditWith.AstCreateServerAuditWith4 a);
        
        /// <summary>
        /// alter_server_audit_specification : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterServerAuditSpecification(AstAlterServerAuditSpecification a);
        
        /// <summary>
        /// server_audit_state : Bb.Generators.ModelMethod
        /// </summary>
        void VisitServerAuditState(AstServerAuditState a);
        
        /// <summary>
        /// add_drop_audit_action_groups : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAddDropAuditActionGroups(AstAddDropAuditActionGroups a);
        
        /// <summary>
        /// add_drop_audit_action_group : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAddDropAuditActionGroup(AstAddDropAuditActionGroup a);
        
        /// <summary>
        /// alter_server_audit_specification_server : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterServerAuditSpecificationServer(AstAlterServerAuditSpecificationServer a);
        
        /// <summary>
        /// create_server_audit_specification : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateServerAuditSpecification(AstCreateServerAuditSpecification a);
        
        /// <summary>
        /// server_audit_specification_add_group : Bb.Generators.ModelMethod
        /// </summary>
        void VisitServerAuditSpecificationAddGroup(AstServerAuditSpecificationAddGroup a);
        
        /// <summary>
        /// server_audit_specification_add_groups : Bb.Generators.ModelMethod
        /// </summary>
        void VisitServerAuditSpecificationAddGroups(AstServerAuditSpecificationAddGroups a);
        
        /// <summary>
        /// alter_server_configuration : ALTER SERVER CONFIGURATION SET server_config_process_affinity 
        /// </summary>
        void VisitAlterServerConfiguration(AstAlterServerConfiguration.AstAlterServerConfiguration1 a);
        
        /// <summary>
        /// alter_server_configuration : ALTER SERVER CONFIGURATION SET server_config_diagnostic_log 
        /// </summary>
        void VisitAlterServerConfiguration(AstAlterServerConfiguration.AstAlterServerConfiguration2 a);
        
        /// <summary>
        /// alter_server_configuration : ALTER SERVER CONFIGURATION SET server_config_failover 
        /// </summary>
        void VisitAlterServerConfiguration(AstAlterServerConfiguration.AstAlterServerConfiguration3 a);
        
        /// <summary>
        /// alter_server_configuration : ALTER SERVER CONFIGURATION SET HADR CLUSTER CONTEXT EQUAL stringtext 
        /// </summary>
        void VisitAlterServerConfiguration(AstAlterServerConfiguration.AstAlterServerConfiguration4 a);
        
        /// <summary>
        /// alter_server_configuration : ALTER SERVER CONFIGURATION SET HADR CLUSTER CONTEXT EQUAL LOCAL 
        /// </summary>
        void VisitAlterServerConfiguration(AstAlterServerConfiguration.AstAlterServerConfiguration5 a);
        
        /// <summary>
        /// alter_server_configuration : ALTER SERVER CONFIGURATION SET server_config_buffer_pool_ext 
        /// </summary>
        void VisitAlterServerConfiguration(AstAlterServerConfiguration.AstAlterServerConfiguration6 a);
        
        /// <summary>
        /// alter_server_configuration : ALTER SERVER CONFIGURATION SET SET SOFTNUMA on_off 
        /// </summary>
        void VisitAlterServerConfiguration(AstAlterServerConfiguration.AstAlterServerConfiguration7 a);
        
        /// <summary>
        /// server_config_process_affinity : PROCESS AFFINITY CPU EQUAL AUTO 
        /// </summary>
        void VisitServerConfigProcessAffinity(AstServerConfigProcessAffinity.AstServerConfigProcessAffinity1 a);
        
        /// <summary>
        /// server_config_process_affinity : PROCESS AFFINITY CPU EQUAL decimal_range decimal_ranges 
        /// </summary>
        void VisitServerConfigProcessAffinity(AstServerConfigProcessAffinity.AstServerConfigProcessAffinity2 a);
        
        /// <summary>
        /// server_config_process_affinity : PROCESS AFFINITY NUMANODE EQUAL decimal_range decimal_ranges 
        /// </summary>
        void VisitServerConfigProcessAffinity(AstServerConfigProcessAffinity.AstServerConfigProcessAffinity3 a);
        
        /// <summary>
        /// server_config_diagnostic_log : DIAGNOSTICS LOG on_off 
        /// </summary>
        void VisitServerConfigDiagnosticLog(AstServerConfigDiagnosticLog.AstServerConfigDiagnosticLog1 a);
        
        /// <summary>
        /// server_config_diagnostic_log : DIAGNOSTICS LOG PATH EQUAL string_or_default 
        /// </summary>
        void VisitServerConfigDiagnosticLog(AstServerConfigDiagnosticLog.AstServerConfigDiagnosticLog2 a);
        
        /// <summary>
        /// server_config_diagnostic_log : DIAGNOSTICS LOG MAX_SIZE EQUAL size_value 
        /// </summary>
        void VisitServerConfigDiagnosticLog(AstServerConfigDiagnosticLog.AstServerConfigDiagnosticLog3 a);
        
        /// <summary>
        /// server_config_diagnostic_log : DIAGNOSTICS LOG MAX_FILES EQUAL decimal_default 
        /// </summary>
        void VisitServerConfigDiagnosticLog(AstServerConfigDiagnosticLog.AstServerConfigDiagnosticLog4 a);
        
        /// <summary>
        /// server_config_failover : FAILOVER CLUSTER PROPERTY VERBOSELOGGING EQUAL verboselogging=string_or_default 
        /// </summary>
        void VisitServerConfigFailover(AstServerConfigFailover.AstServerConfigFailover1 a);
        
        /// <summary>
        /// server_config_failover : FAILOVER CLUSTER PROPERTY SQLDUMPERFLAGS EQUAL sqldumperflags=string_or_default 
        /// </summary>
        void VisitServerConfigFailover(AstServerConfigFailover.AstServerConfigFailover2 a);
        
        /// <summary>
        /// server_config_failover : FAILOVER CLUSTER PROPERTY SQLDUMPERPATH EQUAL sqldumperpath=string_or_default 
        /// </summary>
        void VisitServerConfigFailover(AstServerConfigFailover.AstServerConfigFailover3 a);
        
        /// <summary>
        /// server_config_failover : FAILOVER CLUSTER PROPERTY SQLDUMPERTIMEOUT sqldumpertimeout=string_or_default 
        /// </summary>
        void VisitServerConfigFailover(AstServerConfigFailover.AstServerConfigFailover4 a);
        
        /// <summary>
        /// server_config_failover : FAILOVER CLUSTER PROPERTY FAILURECONDITIONLEVEL EQUAL failure=string_or_default 
        /// </summary>
        void VisitServerConfigFailover(AstServerConfigFailover.AstServerConfigFailover5 a);
        
        /// <summary>
        /// server_config_failover : FAILOVER CLUSTER PROPERTY HEALTHCHECKTIMEOUT EQUAL health=decimal_default 
        /// </summary>
        void VisitServerConfigFailover(AstServerConfigFailover.AstServerConfigFailover6 a);
        
        /// <summary>
        /// server_config_buffer_pool_ext : BUFFER POOL EXTENSION ON LR_BRACKET FILENAME EQUAL filename=stringtext COMMA SIZE EQUAL size=decimal size_unity RR_BRACKET 
        /// </summary>
        void VisitServerConfigBufferPoolExt(AstServerConfigBufferPoolExt.AstServerConfigBufferPoolExt1 a);
        
        /// <summary>
        /// server_config_buffer_pool_ext : BUFFER POOL EXTENSION OFF 
        /// </summary>
        void VisitServerConfigBufferPoolExt(AstServerConfigBufferPoolExt.AstServerConfigBufferPoolExt2 a);
        
        /// <summary>
        /// string_or_default : stringtext 
        /// </summary>
        void VisitStringOrDefault(AstStringOrDefault.AstStringOrDefault1 a);
        
        /// <summary>
        /// string_or_default : DEFAULT 
        /// </summary>
        void VisitStringOrDefault(AstStringOrDefault.AstStringOrDefault2 a);
        
        /// <summary>
        /// alter_server_role : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterServerRole(AstAlterServerRole a);
        
        /// <summary>
        /// alter_server_role_new_name : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterServerRoleNewName(AstAlterServerRoleNewName a);
        
        /// <summary>
        /// create_server_role : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateServerRole(AstCreateServerRole a);
        
        /// <summary>
        /// alter_server_role_pdw : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterServerRolePdw(AstAlterServerRolePdw a);
        
        /// <summary>
        /// alter_service : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterService(AstAlterService a);
        
        /// <summary>
        /// alter_service_contract : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterServiceContract(AstAlterServiceContract a);
        
        /// <summary>
        /// create_service : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateService(AstCreateService a);
        
        /// <summary>
        /// contract_ref : contract_id 
        /// </summary>
        void VisitContractRef(AstContractRef.AstContractRef1 a);
        
        /// <summary>
        /// contract_ref : DEFAULT 
        /// </summary>
        void VisitContractRef(AstContractRef.AstContractRef2 a);
        
        /// <summary>
        /// alter_service_master_key : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterServiceMasterKey(AstAlterServiceMasterKey a);
        
        /// <summary>
        /// service_master_key_items : FORCE? REGENERATE 
        /// </summary>
        void VisitServiceMasterKeyItems(AstServiceMasterKeyItems.AstServiceMasterKeyItems1 a);
        
        /// <summary>
        /// service_master_key_items : WITH regenerate_account 
        /// </summary>
        void VisitServiceMasterKeyItems(AstServiceMasterKeyItems.AstServiceMasterKeyItems2 a);
        
        /// <summary>
        /// regenerate_account : OLD_ACCOUNT EQUAL acold_account_name=stringtext COMMA old_pwd 
        /// </summary>
        void VisitRegenerateAccount(AstRegenerateAccount.AstRegenerateAccount1 a);
        
        /// <summary>
        /// regenerate_account : NEW_ACCOUNT EQUAL new_account_name=stringtext COMMA new_password_set 
        /// </summary>
        void VisitRegenerateAccount(AstRegenerateAccount.AstRegenerateAccount2 a);
        
        /// <summary>
        /// alter_symmetric_key : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterSymmetricKey(AstAlterSymmetricKey a);
        
        /// <summary>
        /// create_synonym : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateSynonym(AstCreateSynonym a);
        
        /// <summary>
        /// alter_user : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterUser(AstAlterUser a);
        
        /// <summary>
        /// alter_user_item : NAME EQUAL user_id 
        /// </summary>
        void VisitAlterUserItem(AstAlterUserItem.AstAlterUserItem1 a);
        
        /// <summary>
        /// alter_user_item : DEFAULT_SCHEMA EQUAL schema_id_null 
        /// </summary>
        void VisitAlterUserItem(AstAlterUserItem.AstAlterUserItem2 a);
        
        /// <summary>
        /// alter_user_item : LOGIN EQUAL login_id 
        /// </summary>
        void VisitAlterUserItem(AstAlterUserItem.AstAlterUserItem3 a);
        
        /// <summary>
        /// alter_user_item : password_setting old_pwd+ 
        /// </summary>
        void VisitAlterUserItem(AstAlterUserItem.AstAlterUserItem4 a);
        
        /// <summary>
        /// alter_user_item : DEFAULT_LANGUAGE EQUAL language_setting_value 
        /// </summary>
        void VisitAlterUserItem(AstAlterUserItem.AstAlterUserItem5 a);
        
        /// <summary>
        /// alter_user_item : ALLOW_ENCRYPTED_VALUE_MODIFICATIONS EQUAL on_off 
        /// </summary>
        void VisitAlterUserItem(AstAlterUserItem.AstAlterUserItem6 a);
        
        /// <summary>
        /// schema_id_null : schema_identifier 
        /// </summary>
        void VisitSchemaIdNull(AstSchemaIdNull.AstSchemaIdNull1 a);
        
        /// <summary>
        /// schema_id_null : NULL_ 
        /// </summary>
        void VisitSchemaIdNull(AstSchemaIdNull.AstSchemaIdNull2 a);
        
        /// <summary>
        /// create_user : CREATE USER user_id create_user_with_login 
        /// </summary>
        void VisitCreateUser(AstCreateUser.AstCreateUser1 a);
        
        /// <summary>
        /// create_user : CREATE USER create_user_windows_principal_id 
        /// </summary>
        void VisitCreateUser(AstCreateUser.AstCreateUser2 a);
        
        /// <summary>
        /// create_user : CREATE USER user_id create_user_without_login? 
        /// </summary>
        void VisitCreateUser(AstCreateUser.AstCreateUser3 a);
        
        void VisitCreateUserWithLogin(AstCreateUserWithLogin a);
        
        /// <summary>
        /// create_user_without_login : WITHOUT LOGIN user_settings_shorts? 
        /// </summary>
        void VisitCreateUserWithoutLogin(AstCreateUserWithoutLogin.AstCreateUserWithoutLogin1 a);
        
        /// <summary>
        /// create_user_without_login : for_from CERTIFICATE certificate_id 
        /// </summary>
        void VisitCreateUserWithoutLogin(AstCreateUserWithoutLogin.AstCreateUserWithoutLogin2 a);
        
        /// <summary>
        /// create_user_without_login : for_from ASYMMETRIC KEY asym_key_id 
        /// </summary>
        void VisitCreateUserWithoutLogin(AstCreateUserWithoutLogin.AstCreateUserWithoutLogin3 a);
        
        /// <summary>
        /// create_user_windows_principal_id : windows_principal_id WITH user_settings 
        /// </summary>
        void VisitCreateUserWindowsPrincipalId(AstCreateUserWindowsPrincipalId.AstCreateUserWindowsPrincipalId1 a);
        
        /// <summary>
        /// create_user_windows_principal_id : user_id WITH password_setting user_settings? 
        /// </summary>
        void VisitCreateUserWindowsPrincipalId(AstCreateUserWindowsPrincipalId.AstCreateUserWindowsPrincipalId2 a);
        
        /// <summary>
        /// create_user_windows_principal_id : user_id FROM EXTERNAL PROVIDER 
        /// </summary>
        void VisitCreateUserWindowsPrincipalId(AstCreateUserWindowsPrincipalId.AstCreateUserWindowsPrincipalId3 a);
        
        /// <summary>
        /// old_pwd_strategies : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOldPwdStrategies(AstOldPwdStrategies a);
        
        /// <summary>
        /// pwd_settings : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPwdSettings(AstPwdSettings a);
        
        /// <summary>
        /// password_setting : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPasswordSetting(AstPasswordSetting a);
        
        /// <summary>
        /// new_password_set : Bb.Generators.ModelMethod
        /// </summary>
        void VisitNewPasswordSet(AstNewPasswordSet a);
        
        /// <summary>
        /// old_pwd : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOldPwd(AstOldPwd a);
        
        /// <summary>
        /// pwd_value : pwd 
        /// </summary>
        void VisitPwdValue(AstPwdValue.AstPwdValue1 a);
        
        /// <summary>
        /// pwd_value : binary_ HASHED 
        /// </summary>
        void VisitPwdValue(AstPwdValue.AstPwdValue2 a);
        
        /// <summary>
        /// pwd : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPwd(AstPwd a);
        
        /// <summary>
        /// user_settings_shorts : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUserSettingsShorts(AstUserSettingsShorts a);
        
        /// <summary>
        /// user_settings_short : default_schema_set 
        /// </summary>
        void VisitUserSettingsShort(AstUserSettingsShort.AstUserSettingsShort1 a);
        
        /// <summary>
        /// user_settings_short : ALLOW_ENCRYPTED_VALUE_MODIFICATIONS EQUAL on_off 
        /// </summary>
        void VisitUserSettingsShort(AstUserSettingsShort.AstUserSettingsShort2 a);
        
        /// <summary>
        /// user_settings : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUserSettings(AstUserSettings a);
        
        /// <summary>
        /// default_schema_set : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDefaultSchemaSet(AstDefaultSchemaSet a);
        
        /// <summary>
        /// user_setting : default_schema_set 
        /// </summary>
        void VisitUserSetting(AstUserSetting.AstUserSetting1 a);
        
        /// <summary>
        /// user_setting : DEFAULT_LANGUAGE EQUAL language_setting_value 
        /// </summary>
        void VisitUserSetting(AstUserSetting.AstUserSetting2 a);
        
        /// <summary>
        /// user_setting : SID EQUAL binary_ 
        /// </summary>
        void VisitUserSetting(AstUserSetting.AstUserSetting3 a);
        
        /// <summary>
        /// user_setting : ALLOW_ENCRYPTED_VALUE_MODIFICATIONS EQUAL on_off 
        /// </summary>
        void VisitUserSetting(AstUserSetting.AstUserSetting4 a);
        
        /// <summary>
        /// create_user_azure_sql_dw : CREATE USER user_id user_strategy? WITH default_schema_set 
        /// </summary>
        void VisitCreateUserAzureSqlDw(AstCreateUserAzureSqlDw.AstCreateUserAzureSqlDw1 a);
        
        /// <summary>
        /// create_user_azure_sql_dw : CREATE USER user_id FROM EXTERNAL PROVIDER WITH default_schema_set 
        /// </summary>
        void VisitCreateUserAzureSqlDw(AstCreateUserAzureSqlDw.AstCreateUserAzureSqlDw2 a);
        
        /// <summary>
        /// user_strategy : for_from LOGIN login_id 
        /// </summary>
        void VisitUserStrategy(AstUserStrategy.AstUserStrategy1 a);
        
        /// <summary>
        /// user_strategy : WITHOUT LOGIN 
        /// </summary>
        void VisitUserStrategy(AstUserStrategy.AstUserStrategy2 a);
        
        /// <summary>
        /// alter_user_azure_sql : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterUserAzureSql(AstAlterUserAzureSql a);
        
        /// <summary>
        /// alter_user_azure_sql_infos : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterUserAzureSqlInfos(AstAlterUserAzureSqlInfos a);
        
        /// <summary>
        /// alter_user_azure_sql_info : NAME EQUAL user_id 
        /// </summary>
        void VisitAlterUserAzureSqlInfo(AstAlterUserAzureSqlInfo.AstAlterUserAzureSqlInfo1 a);
        
        /// <summary>
        /// alter_user_azure_sql_info : default_schema_set 
        /// </summary>
        void VisitAlterUserAzureSqlInfo(AstAlterUserAzureSqlInfo.AstAlterUserAzureSqlInfo2 a);
        
        /// <summary>
        /// alter_user_azure_sql_info : LOGIN EQUAL login_id 
        /// </summary>
        void VisitAlterUserAzureSqlInfo(AstAlterUserAzureSqlInfo.AstAlterUserAzureSqlInfo3 a);
        
        /// <summary>
        /// alter_user_azure_sql_info : ALLOW_ENCRYPTED_VALUE_MODIFICATIONS EQUAL on_off 
        /// </summary>
        void VisitAlterUserAzureSqlInfo(AstAlterUserAzureSqlInfo.AstAlterUserAzureSqlInfo4 a);
        
        /// <summary>
        /// alter_workload_group : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterWorkloadGroup(AstAlterWorkloadGroup a);
        
        /// <summary>
        /// workload_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWorkloadOption(AstWorkloadOption a);
        
        /// <summary>
        /// workload_group_name : workload_group_group_id 
        /// </summary>
        void VisitWorkloadGroupName(AstWorkloadGroupName.AstWorkloadGroupName1 a);
        
        /// <summary>
        /// workload_group_name : DEFAULT_DOUBLE_QUOTE 
        /// </summary>
        void VisitWorkloadGroupName(AstWorkloadGroupName.AstWorkloadGroupName2 a);
        
        /// <summary>
        /// alter_workload_group_using : USING workload_group_pool_id 
        /// </summary>
        void VisitAlterWorkloadGroupUsing(AstAlterWorkloadGroupUsing.AstAlterWorkloadGroupUsing1 a);
        
        /// <summary>
        /// alter_workload_group_using : USING DEFAULT_DOUBLE_QUOTE 
        /// </summary>
        void VisitAlterWorkloadGroupUsing(AstAlterWorkloadGroupUsing.AstAlterWorkloadGroupUsing2 a);
        
        void VisitWorkloadOptionItem(AstWorkloadOptionItem a);
        
        /// <summary>
        /// create_workload_group : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateWorkloadGroup(AstCreateWorkloadGroup a);
        
        /// <summary>
        /// workload_group_id_or_defaults : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWorkloadGroupIdOrDefaults(AstWorkloadGroupIdOrDefaults a);
        
        /// <summary>
        /// workload_group_id_or_default : workload_group_pool_id 
        /// </summary>
        void VisitWorkloadGroupIdOrDefault(AstWorkloadGroupIdOrDefault.AstWorkloadGroupIdOrDefault1 a);
        
        /// <summary>
        /// workload_group_id_or_default : DEFAULT_DOUBLE_QUOTE 
        /// </summary>
        void VisitWorkloadGroupIdOrDefault(AstWorkloadGroupIdOrDefault.AstWorkloadGroupIdOrDefault2 a);
        
        /// <summary>
        /// create_xml_schema_collection : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateXmlSchemaCollection(AstCreateXmlSchemaCollection a);
        
        /// <summary>
        /// create_partition_function : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreatePartitionFunction(AstCreatePartitionFunction a);
        
        /// <summary>
        /// create_partition_scheme : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreatePartitionScheme(AstCreatePartitionScheme a);
        
        /// <summary>
        /// create_queue : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateQueue(AstCreateQueue a);
        
        /// <summary>
        /// queue_settings : WITH STATUS EQUAL status=on_off COMMA? RETENTION EQUAL retention=on_off COMMA? ACTIVATION LR_BRACKET STATUS EQUAL activation_status=on_off COMMA? PROCEDURE_NAME EQUAL func_proc_name_database_schema_ref COMMA? MAX_QUEUE_READERS EQUAL max_readers=decimal COMMA? EXECUTE AS SELF COMMA? RR_BRACKET COMMA? POISON_MESSAGE_HANDLING LR_BRACKET STATUS EQUAL on_off RR_BRACKET 
        /// </summary>
        void VisitQueueSettings(AstQueueSettings.AstQueueSettings1 a);
        
        /// <summary>
        /// queue_settings : WITH STATUS EQUAL status=on_off COMMA? RETENTION EQUAL retention=on_off COMMA? ACTIVATION LR_BRACKET STATUS EQUAL activation_status=on_off COMMA? PROCEDURE_NAME EQUAL func_proc_name_database_schema_ref COMMA? MAX_QUEUE_READERS EQUAL max_readers=decimal COMMA? EXECUTE AS username=stringtext COMMA? RR_BRACKET COMMA? POISON_MESSAGE_HANDLING LR_BRACKET STATUS EQUAL on_off RR_BRACKET 
        /// </summary>
        void VisitQueueSettings(AstQueueSettings.AstQueueSettings2 a);
        
        /// <summary>
        /// queue_settings : WITH STATUS EQUAL status=on_off COMMA? RETENTION EQUAL retention=on_off COMMA? ACTIVATION LR_BRACKET STATUS EQUAL activation_status=on_off COMMA? PROCEDURE_NAME EQUAL func_proc_name_database_schema_ref COMMA? MAX_QUEUE_READERS EQUAL max_readers=decimal COMMA? EXECUTE AS OWNER COMMA? RR_BRACKET COMMA? POISON_MESSAGE_HANDLING LR_BRACKET STATUS EQUAL on_off RR_BRACKET 
        /// </summary>
        void VisitQueueSettings(AstQueueSettings.AstQueueSettings3 a);
        
        /// <summary>
        /// queue_settings : WITH STATUS EQUAL status=on_off COMMA? RETENTION EQUAL retention=on_off COMMA? ACTIVATION LR_BRACKET DROP RR_BRACKET COMMA? POISON_MESSAGE_HANDLING LR_BRACKET STATUS EQUAL on_off RR_BRACKET 
        /// </summary>
        void VisitQueueSettings(AstQueueSettings.AstQueueSettings4 a);
        
        /// <summary>
        /// alter_queue : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterQueue(AstAlterQueue a);
        
        /// <summary>
        /// table_or_queue : complete_table_ref 
        /// </summary>
        void VisitTableOrQueue(AstTableOrQueue.AstTableOrQueue1 a);
        
        /// <summary>
        /// table_or_queue : queue_id 
        /// </summary>
        void VisitTableOrQueue(AstTableOrQueue.AstTableOrQueue2 a);
        
        /// <summary>
        /// queue_action : REBUILD WITH LR_BRACKET queue_rebuild_options RR_BRACKET 
        /// </summary>
        void VisitQueueAction(AstQueueAction.AstQueueAction1 a);
        
        /// <summary>
        /// queue_action : REORGANIZE WITH LOB_COMPACTION EQUAL on_off 
        /// </summary>
        void VisitQueueAction(AstQueueAction.AstQueueAction2 a);
        
        /// <summary>
        /// queue_action : MOVE TO id1=id_default id2=id_default 
        /// </summary>
        void VisitQueueAction(AstQueueAction.AstQueueAction3 a);
        
        /// <summary>
        /// id_default : id_ 
        /// </summary>
        void VisitIdDefault(AstIdDefault.AstIdDefault1 a);
        
        /// <summary>
        /// id_default : DEFAULT 
        /// </summary>
        void VisitIdDefault(AstIdDefault.AstIdDefault2 a);
        
        /// <summary>
        /// queue_rebuild_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitQueueRebuildOptions(AstQueueRebuildOptions a);
        
        /// <summary>
        /// create_contract : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateContract(AstCreateContract a);
        
        /// <summary>
        /// contract_item : Bb.Generators.ModelMethod
        /// </summary>
        void VisitContractItem(AstContractItem a);
        
        /// <summary>
        /// contract_item_target : message_type_id 
        /// </summary>
        void VisitContractItemTarget(AstContractItemTarget.AstContractItemTarget1 a);
        
        /// <summary>
        /// contract_item_target : DEFAULT 
        /// </summary>
        void VisitContractItemTarget(AstContractItemTarget.AstContractItemTarget2 a);
        
        /// <summary>
        /// message_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMessageStatement(AstMessageStatement a);
        
        /// <summary>
        /// merge_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMergeStatement(AstMergeStatement a);
        
        /// <summary>
        /// when_matches : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWhenMatches(AstWhenMatches a);
        
        /// <summary>
        /// when_matche : WHEN MATCHED AND search_condition THEN merge_matched 
        /// </summary>
        void VisitWhenMatche(AstWhenMatche.AstWhenMatche1 a);
        
        /// <summary>
        /// when_matche : WHEN NOT MATCHED BY TARGET AND search_condition THEN merge_not_matched 
        /// </summary>
        void VisitWhenMatche(AstWhenMatche.AstWhenMatche2 a);
        
        /// <summary>
        /// when_matche : WHEN NOT MATCHED BY SOURCE AND search_condition THEN merge_matched 
        /// </summary>
        void VisitWhenMatche(AstWhenMatche.AstWhenMatche3 a);
        
        /// <summary>
        /// merge_matched : UPDATE SET update_elem_merges 
        /// </summary>
        void VisitMergeMatched(AstMergeMatched.AstMergeMatched1 a);
        
        /// <summary>
        /// merge_matched : DELETE 
        /// </summary>
        void VisitMergeMatched(AstMergeMatched.AstMergeMatched2 a);
        
        /// <summary>
        /// merge_not_matched : INSERT LR_BRACKET column_name_list RR_BRACKET table_value_constructor 
        /// </summary>
        void VisitMergeNotMatched(AstMergeNotMatched.AstMergeNotMatched1 a);
        
        /// <summary>
        /// merge_not_matched : INSERT LR_BRACKET column_name_list RR_BRACKET DEFAULT VALUES 
        /// </summary>
        void VisitMergeNotMatched(AstMergeNotMatched.AstMergeNotMatched2 a);
        
        /// <summary>
        /// delete_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDeleteStatement(AstDeleteStatement a);
        
        /// <summary>
        /// delete_statement_from : ddl_object 
        /// </summary>
        void VisitDeleteStatementFrom(AstDeleteStatementFrom.AstDeleteStatementFrom1 a);
        
        /// <summary>
        /// delete_statement_from : rowset_function_limited 
        /// </summary>
        void VisitDeleteStatementFrom(AstDeleteStatementFrom.AstDeleteStatementFrom2 a);
        
        /// <summary>
        /// delete_statement_from : table_var=local_id 
        /// </summary>
        void VisitDeleteStatementFrom(AstDeleteStatementFrom.AstDeleteStatementFrom3 a);
        
        /// <summary>
        /// insert_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitInsertStatement(AstInsertStatement a);
        
        /// <summary>
        /// insert_statement_value : table_value_constructor 
        /// </summary>
        void VisitInsertStatementValue(AstInsertStatementValue.AstInsertStatementValue1 a);
        
        /// <summary>
        /// insert_statement_value : derived_table 
        /// </summary>
        void VisitInsertStatementValue(AstInsertStatementValue.AstInsertStatementValue2 a);
        
        /// <summary>
        /// insert_statement_value : execute_statement 
        /// </summary>
        void VisitInsertStatementValue(AstInsertStatementValue.AstInsertStatementValue3 a);
        
        /// <summary>
        /// insert_statement_value : DEFAULT VALUES 
        /// </summary>
        void VisitInsertStatementValue(AstInsertStatementValue.AstInsertStatementValue4 a);
        
        /// <summary>
        /// receive_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitReceiveStatement(AstReceiveStatement a);
        
        /// <summary>
        /// receive_into : Bb.Generators.ModelMethod
        /// </summary>
        void VisitReceiveInto(AstReceiveInto a);
        
        /// <summary>
        /// where_condition : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWhereCondition(AstWhereCondition a);
        
        /// <summary>
        /// receive_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitReceiveId(AstReceiveId a);
        
        /// <summary>
        /// receive_mode : receive_mode_enum 
        /// </summary>
        void VisitReceiveMode(AstReceiveMode.AstReceiveMode1 a);
        
        /// <summary>
        /// receive_mode : top_clause 
        /// </summary>
        void VisitReceiveMode(AstReceiveMode.AstReceiveMode2 a);
        
        /// <summary>
        /// select_statement_standalone : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSelectStatementStandalone(AstSelectStatementStandalone a);
        
        /// <summary>
        /// select_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSelectStatement(AstSelectStatement a);
        
        /// <summary>
        /// timespan : local_id 
        /// </summary>
        void VisitTimespan(AstTimespan.AstTimespan1 a);
        
        /// <summary>
        /// timespan : constant 
        /// </summary>
        void VisitTimespan(AstTimespan.AstTimespan2 a);
        
        /// <summary>
        /// update_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUpdateStatement(AstUpdateStatement a);
        
        /// <summary>
        /// output_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOutputClause(AstOutputClause a);
        
        /// <summary>
        /// output_dml_list_elem : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOutputDmlListElem(AstOutputDmlListElem a);
        
        /// <summary>
        /// create_database : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateDatabase(AstCreateDatabase a);
        
        /// <summary>
        /// database_containment : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseContainment(AstDatabaseContainment a);
        
        /// <summary>
        /// database_on_primary : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseOnPrimary(AstDatabaseOnPrimary a);
        
        /// <summary>
        /// database_on_log : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseOnLog(AstDatabaseOnLog a);
        
        /// <summary>
        /// database_collate : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseCollate(AstDatabaseCollate a);
        
        /// <summary>
        /// database_create_with : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseCreateWith(AstDatabaseCreateWith a);
        
        /// <summary>
        /// create_index : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateIndex(AstCreateIndex a);
        
        /// <summary>
        /// relational_index_option : rebuild_index_option 
        /// </summary>
        void VisitRelationalIndexOption(AstRelationalIndexOption.AstRelationalIndexOption1 a);
        
        /// <summary>
        /// relational_index_option : DROP_EXISTING EQUAL on_off 
        /// </summary>
        void VisitRelationalIndexOption(AstRelationalIndexOption.AstRelationalIndexOption2 a);
        
        /// <summary>
        /// relational_index_option : OPTIMIZE_FOR_SEQUENTIAL_KEY EQUAL on_off 
        /// </summary>
        void VisitRelationalIndexOption(AstRelationalIndexOption.AstRelationalIndexOption3 a);
        
        /// <summary>
        /// alter_index : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterIndex(AstAlterIndex a);
        
        /// <summary>
        /// index_status : index_status_enum 
        /// </summary>
        void VisitIndexStatus(AstIndexStatus.AstIndexStatus1 a);
        
        /// <summary>
        /// index_status : RESUME resumable_index_options? 
        /// </summary>
        void VisitIndexStatus(AstIndexStatus.AstIndexStatus2 a);
        
        /// <summary>
        /// index_status : reorganize_partition 
        /// </summary>
        void VisitIndexStatus(AstIndexStatus.AstIndexStatus3 a);
        
        /// <summary>
        /// index_status : set_index_options 
        /// </summary>
        void VisitIndexStatus(AstIndexStatus.AstIndexStatus4 a);
        
        /// <summary>
        /// index_status : rebuild_partition 
        /// </summary>
        void VisitIndexStatus(AstIndexStatus.AstIndexStatus5 a);
        
        /// <summary>
        /// index_status_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIndexStatusEnum(AstIndexStatusEnum a);
        
        /// <summary>
        /// index_name : id_ 
        /// </summary>
        void VisitIndexName(AstIndexName.AstIndexName1 a);
        
        /// <summary>
        /// index_name : ALL 
        /// </summary>
        void VisitIndexName(AstIndexName.AstIndexName2 a);
        
        /// <summary>
        /// resumable_index_option : MAXDOP EQUAL max_degree_of_parallelism=decimal 
        /// </summary>
        void VisitResumableIndexOption(AstResumableIndexOption.AstResumableIndexOption1 a);
        
        /// <summary>
        /// resumable_index_option : MAX_DURATION EQUAL max_duration=decimal MINUTES? 
        /// </summary>
        void VisitResumableIndexOption(AstResumableIndexOption.AstResumableIndexOption2 a);
        
        /// <summary>
        /// resumable_index_option : low_priority_lock_wait 
        /// </summary>
        void VisitResumableIndexOption(AstResumableIndexOption.AstResumableIndexOption3 a);
        
        /// <summary>
        /// reorganize_partition : Bb.Generators.ModelMethod
        /// </summary>
        void VisitReorganizePartition(AstReorganizePartition a);
        
        /// <summary>
        /// reorganize_option : LOB_COMPACTION EQUAL on_off 
        /// </summary>
        void VisitReorganizeOption(AstReorganizeOption.AstReorganizeOption1 a);
        
        /// <summary>
        /// reorganize_option : COMPRESS_ALL_ROW_GROUPS EQUAL on_off 
        /// </summary>
        void VisitReorganizeOption(AstReorganizeOption.AstReorganizeOption2 a);
        
        /// <summary>
        /// set_index_option : ALLOW_ROW_LOCKS EQUAL on_off 
        /// </summary>
        void VisitSetIndexOption(AstSetIndexOption.AstSetIndexOption1 a);
        
        /// <summary>
        /// set_index_option : ALLOW_PAGE_LOCKS EQUAL on_off 
        /// </summary>
        void VisitSetIndexOption(AstSetIndexOption.AstSetIndexOption2 a);
        
        /// <summary>
        /// set_index_option : OPTIMIZE_FOR_SEQUENTIAL_KEY EQUAL on_off 
        /// </summary>
        void VisitSetIndexOption(AstSetIndexOption.AstSetIndexOption3 a);
        
        /// <summary>
        /// set_index_option : IGNORE_DUP_KEY EQUAL on_off 
        /// </summary>
        void VisitSetIndexOption(AstSetIndexOption.AstSetIndexOption4 a);
        
        /// <summary>
        /// set_index_option : STATISTICS_NORECOMPUTE EQUAL on_off 
        /// </summary>
        void VisitSetIndexOption(AstSetIndexOption.AstSetIndexOption5 a);
        
        /// <summary>
        /// set_index_option : COMPRESSION_DELAY EQUAL delay=decimal MINUTES? 
        /// </summary>
        void VisitSetIndexOption(AstSetIndexOption.AstSetIndexOption6 a);
        
        /// <summary>
        /// rebuild_partition : REBUILD PARTITION EQUAL ALL rebuild_index_options? 
        /// </summary>
        void VisitRebuildPartition(AstRebuildPartition.AstRebuildPartition1 a);
        
        /// <summary>
        /// rebuild_partition : REBUILD PARTITION EQUAL decimal single_partition_rebuild_index_options? 
        /// </summary>
        void VisitRebuildPartition(AstRebuildPartition.AstRebuildPartition2 a);
        
        /// <summary>
        /// rebuild_index_option : PAD_INDEX EQUAL on_off 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption1 a);
        
        /// <summary>
        /// rebuild_index_option : FILLFACTOR EQUAL decimal 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption2 a);
        
        /// <summary>
        /// rebuild_index_option : SORT_IN_TEMPDB EQUAL on_off 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption3 a);
        
        /// <summary>
        /// rebuild_index_option : IGNORE_DUP_KEY EQUAL on_off 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption4 a);
        
        /// <summary>
        /// rebuild_index_option : STATISTICS_NORECOMPUTE EQUAL on_off 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption5 a);
        
        /// <summary>
        /// rebuild_index_option : STATISTICS_INCREMENTAL EQUAL on_off 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption6 a);
        
        /// <summary>
        /// rebuild_index_option : ONLINE EQUAL online_value 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption7 a);
        
        /// <summary>
        /// rebuild_index_option : RESUMABLE EQUAL on_off 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption8 a);
        
        /// <summary>
        /// rebuild_index_option : MAX_DURATION EQUAL times=decimal MINUTES? 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption9 a);
        
        /// <summary>
        /// rebuild_index_option : ALLOW_ROW_LOCKS EQUAL on_off 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption10 a);
        
        /// <summary>
        /// rebuild_index_option : ALLOW_PAGE_LOCKS EQUAL on_off 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption11 a);
        
        /// <summary>
        /// rebuild_index_option : MAXDOP EQUAL max_degree_of_parallelism=decimal 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption12 a);
        
        /// <summary>
        /// rebuild_index_option : DATA_COMPRESSION EQUAL datacompression_mode on_partitions? 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption13 a);
        
        /// <summary>
        /// rebuild_index_option : XML_COMPRESSION EQUAL on_off on_partitions? 
        /// </summary>
        void VisitRebuildIndexOption(AstRebuildIndexOption.AstRebuildIndexOption14 a);
        
        /// <summary>
        /// online_value : ON LR_BRACKET low_priority_lock_wait RR_BRACKET 
        /// </summary>
        void VisitOnlineValue(AstOnlineValue.AstOnlineValue1 a);
        
        /// <summary>
        /// online_value : OFF 
        /// </summary>
        void VisitOnlineValue(AstOnlineValue.AstOnlineValue2 a);
        
        /// <summary>
        /// single_partition_rebuild_index_option : SORT_IN_TEMPDB EQUAL on_off 
        /// </summary>
        void VisitSinglePartitionRebuildIndexOption(AstSinglePartitionRebuildIndexOption.AstSinglePartitionRebuildIndexOption1 a);
        
        /// <summary>
        /// single_partition_rebuild_index_option : MAXDOP EQUAL max_degree_of_parallelism=decimal 
        /// </summary>
        void VisitSinglePartitionRebuildIndexOption(AstSinglePartitionRebuildIndexOption.AstSinglePartitionRebuildIndexOption2 a);
        
        /// <summary>
        /// single_partition_rebuild_index_option : RESUMABLE EQUAL on_off 
        /// </summary>
        void VisitSinglePartitionRebuildIndexOption(AstSinglePartitionRebuildIndexOption.AstSinglePartitionRebuildIndexOption3 a);
        
        /// <summary>
        /// single_partition_rebuild_index_option : DATA_COMPRESSION EQUAL datacompression_mode on_partitions? 
        /// </summary>
        void VisitSinglePartitionRebuildIndexOption(AstSinglePartitionRebuildIndexOption.AstSinglePartitionRebuildIndexOption4 a);
        
        /// <summary>
        /// single_partition_rebuild_index_option : XML_COMPRESSION EQUAL on_off on_partitions? 
        /// </summary>
        void VisitSinglePartitionRebuildIndexOption(AstSinglePartitionRebuildIndexOption.AstSinglePartitionRebuildIndexOption5 a);
        
        /// <summary>
        /// single_partition_rebuild_index_option : ONLINE EQUAL online_value 
        /// </summary>
        void VisitSinglePartitionRebuildIndexOption(AstSinglePartitionRebuildIndexOption.AstSinglePartitionRebuildIndexOption6 a);
        
        /// <summary>
        /// on_partitions : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOnPartitions(AstOnPartitions a);
        
        void VisitPartitionNums(AstPartitionNums a);
        
        /// <summary>
        /// create_columnstore_index : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateColumnstoreIndex(AstCreateColumnstoreIndex a);
        
        /// <summary>
        /// columnstore_index_option : DROP_EXISTING EQUAL drop_existing=on_off 
        /// </summary>
        void VisitColumnstoreIndexOption(AstColumnstoreIndexOption.AstColumnstoreIndexOption1 a);
        
        /// <summary>
        /// columnstore_index_option : MAXDOP EQUAL max_degree_of_parallelism=decimal 
        /// </summary>
        void VisitColumnstoreIndexOption(AstColumnstoreIndexOption.AstColumnstoreIndexOption2 a);
        
        /// <summary>
        /// columnstore_index_option : ONLINE EQUAL online=on_off 
        /// </summary>
        void VisitColumnstoreIndexOption(AstColumnstoreIndexOption.AstColumnstoreIndexOption3 a);
        
        /// <summary>
        /// columnstore_index_option : COMPRESSION_DELAY EQUAL delay=decimal MINUTES? 
        /// </summary>
        void VisitColumnstoreIndexOption(AstColumnstoreIndexOption.AstColumnstoreIndexOption4 a);
        
        /// <summary>
        /// columnstore_index_option : DATA_COMPRESSION EQUAL datacompression_column_mode on_partitions? 
        /// </summary>
        void VisitColumnstoreIndexOption(AstColumnstoreIndexOption.AstColumnstoreIndexOption5 a);
        
        /// <summary>
        /// create_nonclustered_columnstore_index : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateNonclusteredColumnstoreIndex(AstCreateNonclusteredColumnstoreIndex a);
        
        /// <summary>
        /// create_xml_index : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateXmlIndex(AstCreateXmlIndex a);
        
        /// <summary>
        /// using_xml_index : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUsingXmlIndex(AstUsingXmlIndex a);
        
        /// <summary>
        /// xml_index_option : PAD_INDEX EQUAL pad_index=on_off 
        /// </summary>
        void VisitXmlIndexOption(AstXmlIndexOption.AstXmlIndexOption1 a);
        
        /// <summary>
        /// xml_index_option : FILLFACTOR EQUAL fillfactor=decimal 
        /// </summary>
        void VisitXmlIndexOption(AstXmlIndexOption.AstXmlIndexOption2 a);
        
        /// <summary>
        /// xml_index_option : SORT_IN_TEMPDB EQUAL sort_in_tempdb=on_off 
        /// </summary>
        void VisitXmlIndexOption(AstXmlIndexOption.AstXmlIndexOption3 a);
        
        /// <summary>
        /// xml_index_option : IGNORE_DUP_KEY EQUAL ignore_dup_key=on_off 
        /// </summary>
        void VisitXmlIndexOption(AstXmlIndexOption.AstXmlIndexOption4 a);
        
        /// <summary>
        /// xml_index_option : DROP_EXISTING EQUAL drop_existing=on_off 
        /// </summary>
        void VisitXmlIndexOption(AstXmlIndexOption.AstXmlIndexOption5 a);
        
        /// <summary>
        /// xml_index_option : ONLINE EQUAL online_value 
        /// </summary>
        void VisitXmlIndexOption(AstXmlIndexOption.AstXmlIndexOption6 a);
        
        /// <summary>
        /// xml_index_option : ALLOW_ROW_LOCKS EQUAL allow_row_loks=on_off 
        /// </summary>
        void VisitXmlIndexOption(AstXmlIndexOption.AstXmlIndexOption7 a);
        
        /// <summary>
        /// xml_index_option : ALLOW_PAGE_LOCKS EQUAL allow_page_locks=on_off 
        /// </summary>
        void VisitXmlIndexOption(AstXmlIndexOption.AstXmlIndexOption8 a);
        
        /// <summary>
        /// xml_index_option : MAXDOP EQUAL max_degree_of_parallelism=decimal 
        /// </summary>
        void VisitXmlIndexOption(AstXmlIndexOption.AstXmlIndexOption9 a);
        
        /// <summary>
        /// xml_index_option : XML_COMPRESSION EQUAL xml_compression=on_off 
        /// </summary>
        void VisitXmlIndexOption(AstXmlIndexOption.AstXmlIndexOption10 a);
        
        /// <summary>
        /// create_or_alter_procedure : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterProcedure(AstCreateOrAlterProcedure a);
        
        /// <summary>
        /// procedure_declaration_arguments : procedure_params 
        /// </summary>
        void VisitProcedureDeclarationArguments(AstProcedureDeclarationArguments.AstProcedureDeclarationArguments1 a);
        
        /// <summary>
        /// procedure_declaration_arguments : LR_BRACKET procedure_params RR_BRACKET 
        /// </summary>
        void VisitProcedureDeclarationArguments(AstProcedureDeclarationArguments.AstProcedureDeclarationArguments2 a);
        
        /// <summary>
        /// procedure_declaration : procedure_declaration_create 
        /// </summary>
        void VisitProcedureDeclaration(AstProcedureDeclaration.AstProcedureDeclaration1 a);
        
        /// <summary>
        /// procedure_declaration : ALTER 
        /// </summary>
        void VisitProcedureDeclaration(AstProcedureDeclaration.AstProcedureDeclaration2 a);
        
        void VisitProcedureDeclarationCreate(AstProcedureDeclarationCreate a);
        
        /// <summary>
        /// replication_alias : as_external_name 
        /// </summary>
        void VisitReplicationAlias(AstReplicationAlias.AstReplicationAlias1 a);
        
        /// <summary>
        /// replication_alias : sql_clause 
        /// </summary>
        void VisitReplicationAlias(AstReplicationAlias.AstReplicationAlias2 a);
        
        /// <summary>
        /// as_external_name : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAsExternalName(AstAsExternalName a);
        
        /// <summary>
        /// create_or_alter_trigger : create_or_alter_dml_trigger 
        /// </summary>
        void VisitCreateOrAlterTrigger(AstCreateOrAlterTrigger.AstCreateOrAlterTrigger1 a);
        
        /// <summary>
        /// create_or_alter_trigger : create_or_alter_ddl_trigger 
        /// </summary>
        void VisitCreateOrAlterTrigger(AstCreateOrAlterTrigger.AstCreateOrAlterTrigger2 a);
        
        /// <summary>
        /// create_or_alter_dml_trigger : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterDmlTrigger(AstCreateOrAlterDmlTrigger a);
        
        /// <summary>
        /// create_or_alter : CREATE OR ALTER 
        /// </summary>
        void VisitCreateOrAlter(AstCreateOrAlter.AstCreateOrAlter1 a);
        
        /// <summary>
        /// create_or_alter : ALTER 
        /// </summary>
        void VisitCreateOrAlter(AstCreateOrAlter.AstCreateOrAlter2 a);
        
        /// <summary>
        /// for_after_instead : FOR 
        /// </summary>
        void VisitForAfterInstead(AstForAfterInstead.AstForAfterInstead1 a);
        
        /// <summary>
        /// for_after_instead : AFTER 
        /// </summary>
        void VisitForAfterInstead(AstForAfterInstead.AstForAfterInstead2 a);
        
        /// <summary>
        /// for_after_instead : INSTEAD OF 
        /// </summary>
        void VisitForAfterInstead(AstForAfterInstead.AstForAfterInstead3 a);
        
        /// <summary>
        /// dml_trigger_option : ENCRYPTION 
        /// </summary>
        void VisitDmlTriggerOption(AstDmlTriggerOption.AstDmlTriggerOption1 a);
        
        /// <summary>
        /// dml_trigger_option : execute_clause 
        /// </summary>
        void VisitDmlTriggerOption(AstDmlTriggerOption.AstDmlTriggerOption2 a);
        
        /// <summary>
        /// dml_trigger_operation : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDmlTriggerOperation(AstDmlTriggerOperation a);
        
        /// <summary>
        /// create_or_alter_ddl_trigger : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterDdlTrigger(AstCreateOrAlterDdlTrigger a);
        
        /// <summary>
        /// create_or_alter_function : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterFunction(AstCreateOrAlterFunction a);
        
        /// <summary>
        /// func_body_returns_select : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFuncBodyReturnsSelect(AstFuncBodyReturnsSelect a);
        
        /// <summary>
        /// func_body_returns_table : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFuncBodyReturnsTable(AstFuncBodyReturnsTable a);
        
        /// <summary>
        /// func_body_returns_scalar : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFuncBodyReturnsScalar(AstFuncBodyReturnsScalar a);
        
        /// <summary>
        /// procedure_param : Bb.Generators.ModelMethod
        /// </summary>
        void VisitProcedureParam(AstProcedureParam a);
        
        /// <summary>
        /// procedure_option : procedure_option_enum 
        /// </summary>
        void VisitProcedureOption(AstProcedureOption.AstProcedureOption1 a);
        
        /// <summary>
        /// procedure_option : execute_clause 
        /// </summary>
        void VisitProcedureOption(AstProcedureOption.AstProcedureOption2 a);
        
        /// <summary>
        /// function_option : function_option_enum 
        /// </summary>
        void VisitFunctionOption(AstFunctionOption.AstFunctionOption1 a);
        
        /// <summary>
        /// function_option : execute_clause 
        /// </summary>
        void VisitFunctionOption(AstFunctionOption.AstFunctionOption2 a);
        
        /// <summary>
        /// create_statistics : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateStatistics(AstCreateStatistics a);
        
        /// <summary>
        /// statistics_with : FULLSCAN 
        /// </summary>
        void VisitStatisticsWith(AstStatisticsWith.AstStatisticsWith1 a);
        
        /// <summary>
        /// statistics_with : SAMPLE decimal percent_row 
        /// </summary>
        void VisitStatisticsWith(AstStatisticsWith.AstStatisticsWith2 a);
        
        /// <summary>
        /// statistics_with : STATS_STREAM 
        /// </summary>
        void VisitStatisticsWith(AstStatisticsWith.AstStatisticsWith3 a);
        
        /// <summary>
        /// update_statistics : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUpdateStatistics(AstUpdateStatistics a);
        
        /// <summary>
        /// update_statistics_option : FULLSCAN COMMA? PERSIST_SAMPLE_PERCENT EQUAL on_off 
        /// </summary>
        void VisitUpdateStatisticsOption(AstUpdateStatisticsOption.AstUpdateStatisticsOption1 a);
        
        /// <summary>
        /// update_statistics_option : SAMPLE number=decimal percent_row COMMA? PERSIST_SAMPLE_PERCENT EQUAL on_off 
        /// </summary>
        void VisitUpdateStatisticsOption(AstUpdateStatisticsOption.AstUpdateStatisticsOption2 a);
        
        /// <summary>
        /// update_statistics_option : RESAMPLE on_partitions? 
        /// </summary>
        void VisitUpdateStatisticsOption(AstUpdateStatisticsOption.AstUpdateStatisticsOption3 a);
        
        /// <summary>
        /// update_statistics_option : STATS_STREAM EQUAL stats_stream_=expression 
        /// </summary>
        void VisitUpdateStatisticsOption(AstUpdateStatisticsOption.AstUpdateStatisticsOption4 a);
        
        /// <summary>
        /// update_statistics_option : ROWCOUNT EQUAL decimal 
        /// </summary>
        void VisitUpdateStatisticsOption(AstUpdateStatisticsOption.AstUpdateStatisticsOption5 a);
        
        /// <summary>
        /// update_statistics_option : PAGECOUNT EQUAL decimal 
        /// </summary>
        void VisitUpdateStatisticsOption(AstUpdateStatisticsOption.AstUpdateStatisticsOption6 a);
        
        /// <summary>
        /// update_statistics_option : ALL 
        /// </summary>
        void VisitUpdateStatisticsOption(AstUpdateStatisticsOption.AstUpdateStatisticsOption7 a);
        
        /// <summary>
        /// update_statistics_option : COLUMNS 
        /// </summary>
        void VisitUpdateStatisticsOption(AstUpdateStatisticsOption.AstUpdateStatisticsOption8 a);
        
        /// <summary>
        /// update_statistics_option : INDEX 
        /// </summary>
        void VisitUpdateStatisticsOption(AstUpdateStatisticsOption.AstUpdateStatisticsOption9 a);
        
        /// <summary>
        /// update_statistics_option : NORECOMPUTE 
        /// </summary>
        void VisitUpdateStatisticsOption(AstUpdateStatisticsOption.AstUpdateStatisticsOption10 a);
        
        /// <summary>
        /// update_statistics_option : INCREMENTAL EQUAL on_off 
        /// </summary>
        void VisitUpdateStatisticsOption(AstUpdateStatisticsOption.AstUpdateStatisticsOption11 a);
        
        /// <summary>
        /// update_statistics_option : MAXDOP EQUAL max_dregree_of_parallelism=decimal 
        /// </summary>
        void VisitUpdateStatisticsOption(AstUpdateStatisticsOption.AstUpdateStatisticsOption12 a);
        
        /// <summary>
        /// update_statistics_option : AUTO_DROP EQUAL on_off 
        /// </summary>
        void VisitUpdateStatisticsOption(AstUpdateStatisticsOption.AstUpdateStatisticsOption13 a);
        
        /// <summary>
        /// create_table : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateTable(AstCreateTable a);
        
        /// <summary>
        /// table_indices_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableIndicesList(AstTableIndicesList a);
        
        /// <summary>
        /// table_indices : INDEX id_ UNIQUE? clustered? LR_BRACKET column_name_list_with_order RR_BRACKET 
        /// </summary>
        void VisitTableIndices(AstTableIndices.AstTableIndices1 a);
        
        /// <summary>
        /// table_indices : INDEX id_ CLUSTERED COLUMNSTORE 
        /// </summary>
        void VisitTableIndices(AstTableIndices.AstTableIndices2 a);
        
        /// <summary>
        /// table_indices : INDEX id_ NONCLUSTERED? COLUMNSTORE LR_BRACKET column_name_list RR_BRACKET create_table_index_options? ON group_id 
        /// </summary>
        void VisitTableIndices(AstTableIndices.AstTableIndices3 a);
        
        /// <summary>
        /// table_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableOptions(AstTableOptions a);
        
        /// <summary>
        /// tbl_option : WITH LR_BRACKET tableoptions RR_BRACKET 
        /// </summary>
        void VisitTblOption(AstTblOption.AstTblOption1 a);
        
        /// <summary>
        /// tbl_option : tableoptions 
        /// </summary>
        void VisitTblOption(AstTblOption.AstTblOption2 a);
        
        /// <summary>
        /// tableoption : table_opt_varname EQUAL table_opt_var_value 
        /// </summary>
        void VisitTableoption(AstTableoption.AstTableoption1 a);
        
        /// <summary>
        /// tableoption : tableoption_cluster_mode 
        /// </summary>
        void VisitTableoption(AstTableoption.AstTableoption2 a);
        
        /// <summary>
        /// tableoption : FILLFACTOR EQUAL decimal 
        /// </summary>
        void VisitTableoption(AstTableoption.AstTableoption3 a);
        
        /// <summary>
        /// tableoption : table_distribution 
        /// </summary>
        void VisitTableoption(AstTableoption.AstTableoption4 a);
        
        /// <summary>
        /// tableoption : DATA_COMPRESSION EQUAL compression_mode on_partitions? 
        /// </summary>
        void VisitTableoption(AstTableoption.AstTableoption5 a);
        
        /// <summary>
        /// tableoption : XML_COMPRESSION EQUAL on_off on_partitions? 
        /// </summary>
        void VisitTableoption(AstTableoption.AstTableoption6 a);
        
        /// <summary>
        /// table_opt_varname : simple_id 
        /// </summary>
        void VisitTableOptVarname(AstTableOptVarname.AstTableOptVarname1 a);
        
        /// <summary>
        /// table_opt_varname : keyword 
        /// </summary>
        void VisitTableOptVarname(AstTableOptVarname.AstTableOptVarname2 a);
        
        /// <summary>
        /// table_opt_var_value : simple_id 
        /// </summary>
        void VisitTableOptVarValue(AstTableOptVarValue.AstTableOptVarValue1 a);
        
        /// <summary>
        /// table_opt_var_value : keyword 
        /// </summary>
        void VisitTableOptVarValue(AstTableOptVarValue.AstTableOptVarValue2 a);
        
        /// <summary>
        /// table_opt_var_value : on_off 
        /// </summary>
        void VisitTableOptVarValue(AstTableOptVarValue.AstTableOptVarValue3 a);
        
        /// <summary>
        /// table_opt_var_value : decimal 
        /// </summary>
        void VisitTableOptVarValue(AstTableOptVarValue.AstTableOptVarValue4 a);
        
        /// <summary>
        /// table_distribution : DISTRIBUTION EQUAL HASH LR_BRACKET id_ RR_BRACKET 
        /// </summary>
        void VisitTableDistribution(AstTableDistribution.AstTableDistribution1 a);
        
        /// <summary>
        /// table_distribution : CLUSTERED INDEX LR_BRACKET column_name_list_with_order RR_BRACKET 
        /// </summary>
        void VisitTableDistribution(AstTableDistribution.AstTableDistribution2 a);
        
        /// <summary>
        /// create_table_index_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateTableIndexOption(AstCreateTableIndexOption a);
        
        /// <summary>
        /// create_view : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateView(AstCreateView a);
        
        /// <summary>
        /// alter_table : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterTable(AstAlterTable a);
        
        /// <summary>
        /// alter_table_constraint : CONSTRAINT constraint_id alter_table_constraint_foreign 
        /// </summary>
        void VisitAlterTableConstraint(AstAlterTableConstraint.AstAlterTableConstraint1 a);
        
        /// <summary>
        /// alter_table_constraint : CHECK LR_BRACKET search_condition RR_BRACKET 
        /// </summary>
        void VisitAlterTableConstraint(AstAlterTableConstraint.AstAlterTableConstraint2 a);
        
        /// <summary>
        /// alter_table_constraint_foreign : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterTableConstraintForeign(AstAlterTableConstraintForeign a);
        
        /// <summary>
        /// constraint_delete_or_update : on_delete 
        /// </summary>
        void VisitConstraintDeleteOrUpdate(AstConstraintDeleteOrUpdate.AstConstraintDeleteOrUpdate1 a);
        
        /// <summary>
        /// constraint_delete_or_update : on_update 
        /// </summary>
        void VisitConstraintDeleteOrUpdate(AstConstraintDeleteOrUpdate.AstConstraintDeleteOrUpdate2 a);
        
        void VisitSwitchPartition(AstSwitchPartition a);
        
        void VisitLowPriorityLockWait(AstLowPriorityLockWait a);
        
        /// <summary>
        /// alter_database : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterDatabase(AstAlterDatabase a);
        
        /// <summary>
        /// alter_database_new_infos : MODIFY NAME EQUAL database_id 
        /// </summary>
        void VisitAlterDatabaseNewInfos(AstAlterDatabaseNewInfos.AstAlterDatabaseNewInfos1 a);
        
        /// <summary>
        /// alter_database_new_infos : COLLATE collation_id 
        /// </summary>
        void VisitAlterDatabaseNewInfos(AstAlterDatabaseNewInfos.AstAlterDatabaseNewInfos2 a);
        
        /// <summary>
        /// alter_database_new_infos : SET database_optionspec WITH termination 
        /// </summary>
        void VisitAlterDatabaseNewInfos(AstAlterDatabaseNewInfos.AstAlterDatabaseNewInfos3 a);
        
        /// <summary>
        /// alter_database_new_infos : add_or_modify_files 
        /// </summary>
        void VisitAlterDatabaseNewInfos(AstAlterDatabaseNewInfos.AstAlterDatabaseNewInfos4 a);
        
        /// <summary>
        /// alter_database_new_infos : add_or_modify_filegroups 
        /// </summary>
        void VisitAlterDatabaseNewInfos(AstAlterDatabaseNewInfos.AstAlterDatabaseNewInfos5 a);
        
        /// <summary>
        /// add_or_modify_files : ADD FILE filespecs TO FILEGROUP file_group_id 
        /// </summary>
        void VisitAddOrModifyFiles(AstAddOrModifyFiles.AstAddOrModifyFiles1 a);
        
        /// <summary>
        /// add_or_modify_files : ADD LOG FILE filespecs 
        /// </summary>
        void VisitAddOrModifyFiles(AstAddOrModifyFiles.AstAddOrModifyFiles2 a);
        
        /// <summary>
        /// add_or_modify_files : REMOVE FILE file_group_id 
        /// </summary>
        void VisitAddOrModifyFiles(AstAddOrModifyFiles.AstAddOrModifyFiles3 a);
        
        /// <summary>
        /// add_or_modify_files : MODIFY FILE filespec 
        /// </summary>
        void VisitAddOrModifyFiles(AstAddOrModifyFiles.AstAddOrModifyFiles4 a);
        
        /// <summary>
        /// filespec : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFilespec(AstFilespec a);
        
        /// <summary>
        /// add_or_modify_filegroups : ADD FILEGROUP file_group_id filegroup_predicate? 
        /// </summary>
        void VisitAddOrModifyFilegroups(AstAddOrModifyFilegroups.AstAddOrModifyFilegroups1 a);
        
        /// <summary>
        /// add_or_modify_filegroups : REMOVE FILEGROUP file_group_id 
        /// </summary>
        void VisitAddOrModifyFilegroups(AstAddOrModifyFilegroups.AstAddOrModifyFilegroups2 a);
        
        /// <summary>
        /// add_or_modify_filegroups : MODIFY FILEGROUP file_group_id modify_filegroups_options 
        /// </summary>
        void VisitAddOrModifyFilegroups(AstAddOrModifyFilegroups.AstAddOrModifyFilegroups3 a);
        
        /// <summary>
        /// modify_filegroups_options : filegroup_updatability_option 
        /// </summary>
        void VisitModifyFilegroupsOptions(AstModifyFilegroupsOptions.AstModifyFilegroupsOptions1 a);
        
        /// <summary>
        /// modify_filegroups_options : DEFAULT 
        /// </summary>
        void VisitModifyFilegroupsOptions(AstModifyFilegroupsOptions.AstModifyFilegroupsOptions2 a);
        
        /// <summary>
        /// modify_filegroups_options : NAME EQUAL file_group_id 
        /// </summary>
        void VisitModifyFilegroupsOptions(AstModifyFilegroupsOptions.AstModifyFilegroupsOptions3 a);
        
        /// <summary>
        /// modify_filegroups_options : AUTOGROW_SINGLE_FILE 
        /// </summary>
        void VisitModifyFilegroupsOptions(AstModifyFilegroupsOptions.AstModifyFilegroupsOptions4 a);
        
        /// <summary>
        /// modify_filegroups_options : AUTOGROW_ALL_FILES 
        /// </summary>
        void VisitModifyFilegroupsOptions(AstModifyFilegroupsOptions.AstModifyFilegroupsOptions5 a);
        
        /// <summary>
        /// filegroup_updatability_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFilegroupUpdatabilityOption(AstFilegroupUpdatabilityOption a);
        
        /// <summary>
        /// database_optionspec : auto_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec1 a);
        
        /// <summary>
        /// database_optionspec : change_tracking_set 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec2 a);
        
        /// <summary>
        /// database_optionspec : containment_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec3 a);
        
        /// <summary>
        /// database_optionspec : cursor_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec4 a);
        
        /// <summary>
        /// database_optionspec : database_mirroring_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec5 a);
        
        /// <summary>
        /// database_optionspec : date_correlation_optimization_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec6 a);
        
        /// <summary>
        /// database_optionspec : db_encryption_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec7 a);
        
        /// <summary>
        /// database_optionspec : db_state_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec8 a);
        
        /// <summary>
        /// database_optionspec : db_update_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec9 a);
        
        /// <summary>
        /// database_optionspec : db_user_access_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec10 a);
        
        /// <summary>
        /// database_optionspec : delayed_durability_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec11 a);
        
        /// <summary>
        /// database_optionspec : external_access_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec12 a);
        
        /// <summary>
        /// database_optionspec : database_filestream 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec13 a);
        
        /// <summary>
        /// database_optionspec : hadr_options 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec14 a);
        
        /// <summary>
        /// database_optionspec : mixed_page_allocation_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec15 a);
        
        /// <summary>
        /// database_optionspec : parameterization_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec16 a);
        
        /// <summary>
        /// database_optionspec : recovery_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec17 a);
        
        /// <summary>
        /// database_optionspec : service_broker_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec18 a);
        
        /// <summary>
        /// database_optionspec : snapshot_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec19 a);
        
        /// <summary>
        /// database_optionspec : sql_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec20 a);
        
        /// <summary>
        /// database_optionspec : target_recovery_time_option 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec21 a);
        
        /// <summary>
        /// database_optionspec : termination 
        /// </summary>
        void VisitDatabaseOptionspec(AstDatabaseOptionspec.AstDatabaseOptionspec22 a);
        
        /// <summary>
        /// database_filestream : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseFilestream(AstDatabaseFilestream a);
        
        /// <summary>
        /// auto_option : AUTO_CLOSE on_off 
        /// </summary>
        void VisitAutoOption(AstAutoOption.AstAutoOption1 a);
        
        /// <summary>
        /// auto_option : AUTO_CREATE_STATISTICS statistic_value 
        /// </summary>
        void VisitAutoOption(AstAutoOption.AstAutoOption2 a);
        
        /// <summary>
        /// auto_option : AUTO_SHRINK on_off 
        /// </summary>
        void VisitAutoOption(AstAutoOption.AstAutoOption3 a);
        
        /// <summary>
        /// auto_option : AUTO_UPDATE_STATISTICS on_off 
        /// </summary>
        void VisitAutoOption(AstAutoOption.AstAutoOption4 a);
        
        /// <summary>
        /// auto_option : AUTO_UPDATE_STATISTICS_ASYNC on_off 
        /// </summary>
        void VisitAutoOption(AstAutoOption.AstAutoOption5 a);
        
        /// <summary>
        /// change_tracking_set : CHANGE_TRACKING EQUAL OFF 
        /// </summary>
        void VisitChangeTrackingSet(AstChangeTrackingSet.AstChangeTrackingSet1 a);
        
        /// <summary>
        /// change_tracking_set : CHANGE_TRACKING EQUAL ON change_tracking_option_list 
        /// </summary>
        void VisitChangeTrackingSet(AstChangeTrackingSet.AstChangeTrackingSet2 a);
        
        /// <summary>
        /// change_tracking_option_item : Bb.Generators.ModelMethod
        /// </summary>
        void VisitChangeTrackingOptionItem(AstChangeTrackingOptionItem a);
        
        /// <summary>
        /// change_tracking_option_list : AUTO_CLEANUP EQUAL on_off 
        /// </summary>
        void VisitChangeTrackingOptionList(AstChangeTrackingOptionList.AstChangeTrackingOptionList1 a);
        
        /// <summary>
        /// change_tracking_option_list : CHANGE_RETENTION EQUAL period 
        /// </summary>
        void VisitChangeTrackingOptionList(AstChangeTrackingOptionList.AstChangeTrackingOptionList2 a);
        
        /// <summary>
        /// containment_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitContainmentOption(AstContainmentOption a);
        
        /// <summary>
        /// cursor_option : CURSOR_CLOSE_ON_COMMIT on_off 
        /// </summary>
        void VisitCursorOption(AstCursorOption.AstCursorOption1 a);
        
        /// <summary>
        /// cursor_option : CURSOR_DEFAULT local_global 
        /// </summary>
        void VisitCursorOption(AstCursorOption.AstCursorOption2 a);
        
        /// <summary>
        /// listener_ip_addr : LISTENER_IP EQUAL ALL 
        /// </summary>
        void VisitListenerIpAddr(AstListenerIpAddr.AstListenerIpAddr1 a);
        
        /// <summary>
        /// listener_ip_addr : LISTENER_IP EQUAL ipv4 
        /// </summary>
        void VisitListenerIpAddr(AstListenerIpAddr.AstListenerIpAddr2 a);
        
        /// <summary>
        /// listener_ip_addr : LISTENER_IP EQUAL ipv6 
        /// </summary>
        void VisitListenerIpAddr(AstListenerIpAddr.AstListenerIpAddr3 a);
        
        /// <summary>
        /// listener_ip_addr : LISTENER_IP EQUAL stringtext 
        /// </summary>
        void VisitListenerIpAddr(AstListenerIpAddr.AstListenerIpAddr4 a);
        
        /// <summary>
        /// alter_endpoint : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterEndpoint(AstAlterEndpoint a);
        
        /// <summary>
        /// authentication_configuration : AUTHENTICATION EQUAL WINDOWS authentication_mode? CERTIFICATE certificate_id 
        /// </summary>
        void VisitAuthenticationConfiguration(AstAuthenticationConfiguration.AstAuthenticationConfiguration1 a);
        
        /// <summary>
        /// authentication_configuration : AUTHENTICATION EQUAL CERTIFICATE certificate_id WINDOWS? authentication_mode? 
        /// </summary>
        void VisitAuthenticationConfiguration(AstAuthenticationConfiguration.AstAuthenticationConfiguration2 a);
        
        /// <summary>
        /// alter_endpoint_database_mirroring : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterEndpointDatabaseMirroring(AstAlterEndpointDatabaseMirroring a);
        
        /// <summary>
        /// alter_endpoint_service_broker : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterEndpointServiceBroker(AstAlterEndpointServiceBroker a);
        
        /// <summary>
        /// database_mirroring_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseMirroringOption(AstDatabaseMirroringOption a);
        
        /// <summary>
        /// mirroring_set_option : mirroring_partner partner_option 
        /// </summary>
        void VisitMirroringSetOption(AstMirroringSetOption.AstMirroringSetOption1 a);
        
        /// <summary>
        /// mirroring_set_option : mirroring_witness witness_option 
        /// </summary>
        void VisitMirroringSetOption(AstMirroringSetOption.AstMirroringSetOption2 a);
        
        /// <summary>
        /// mirroring_partner : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMirroringPartner(AstMirroringPartner a);
        
        /// <summary>
        /// mirroring_witness : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMirroringWitness(AstMirroringWitness a);
        
        /// <summary>
        /// witness_partner_equal : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWitnessPartnerEqual(AstWitnessPartnerEqual a);
        
        /// <summary>
        /// partner_option : witness_partner_equal partner_server 
        /// </summary>
        void VisitPartnerOption(AstPartnerOption.AstPartnerOption1 a);
        
        /// <summary>
        /// partner_option : TIMEOUT decimal 
        /// </summary>
        void VisitPartnerOption(AstPartnerOption.AstPartnerOption2 a);
        
        /// <summary>
        /// partner_option : partner_option_enum 
        /// </summary>
        void VisitPartnerOption(AstPartnerOption.AstPartnerOption3 a);
        
        /// <summary>
        /// witness_option : witness_partner_equal witness_server 
        /// </summary>
        void VisitWitnessOption(AstWitnessOption.AstWitnessOption1 a);
        
        /// <summary>
        /// witness_option : OFF 
        /// </summary>
        void VisitWitnessOption(AstWitnessOption.AstWitnessOption2 a);
        
        /// <summary>
        /// witness_server : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWitnessServer(AstWitnessServer a);
        
        /// <summary>
        /// partner_server : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPartnerServer(AstPartnerServer a);
        
        /// <summary>
        /// host : Bb.Generators.ModelMethod
        /// </summary>
        void VisitHost(AstHost a);
        
        void VisitPartnerServerTcpPrefix(AstPartnerServerTcpPrefix a);
        
        /// <summary>
        /// port_number : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPortNumber(AstPortNumber a);
        
        /// <summary>
        /// date_correlation_optimization_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDateCorrelationOptimizationOption(AstDateCorrelationOptimizationOption a);
        
        /// <summary>
        /// db_encryption_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDbEncryptionOption(AstDbEncryptionOption a);
        
        /// <summary>
        /// delayed_durability_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDelayedDurabilityOption(AstDelayedDurabilityOption a);
        
        /// <summary>
        /// external_access_option : DB_CHAINING on_off 
        /// </summary>
        void VisitExternalAccessOption(AstExternalAccessOption.AstExternalAccessOption1 a);
        
        /// <summary>
        /// external_access_option : TRUSTWORTHY on_off 
        /// </summary>
        void VisitExternalAccessOption(AstExternalAccessOption.AstExternalAccessOption2 a);
        
        /// <summary>
        /// external_access_option : DEFAULT_LANGUAGE EQUAL language_setting 
        /// </summary>
        void VisitExternalAccessOption(AstExternalAccessOption.AstExternalAccessOption3 a);
        
        /// <summary>
        /// external_access_option : DEFAULT_FULLTEXT_LANGUAGE EQUAL language_setting 
        /// </summary>
        void VisitExternalAccessOption(AstExternalAccessOption.AstExternalAccessOption4 a);
        
        /// <summary>
        /// external_access_option : NESTED_TRIGGERS EQUAL on_off 
        /// </summary>
        void VisitExternalAccessOption(AstExternalAccessOption.AstExternalAccessOption5 a);
        
        /// <summary>
        /// external_access_option : TRANSFORM_NOISE_WORDS EQUAL on_off 
        /// </summary>
        void VisitExternalAccessOption(AstExternalAccessOption.AstExternalAccessOption6 a);
        
        /// <summary>
        /// external_access_option : TWO_DIGIT_YEAR_CUTOFF EQUAL decimal 
        /// </summary>
        void VisitExternalAccessOption(AstExternalAccessOption.AstExternalAccessOption7 a);
        
        /// <summary>
        /// language_setting : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLanguageSetting(AstLanguageSetting a);
        
        /// <summary>
        /// language_setting_value : NONE 
        /// </summary>
        void VisitLanguageSettingValue(AstLanguageSettingValue.AstLanguageSettingValue1 a);
        
        /// <summary>
        /// language_setting_value : lcid=decimal 
        /// </summary>
        void VisitLanguageSettingValue(AstLanguageSettingValue.AstLanguageSettingValue2 a);
        
        /// <summary>
        /// language_setting_value : language_id 
        /// </summary>
        void VisitLanguageSettingValue(AstLanguageSettingValue.AstLanguageSettingValue3 a);
        
        /// <summary>
        /// id_or_string : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIdOrString(AstIdOrString a);
        
        /// <summary>
        /// hadr_options : HADR AVAILABILITY GROUP EQUAL group_id 
        /// </summary>
        void VisitHadrOptions(AstHadrOptions.AstHadrOptions1 a);
        
        /// <summary>
        /// hadr_options : HADR OFF 
        /// </summary>
        void VisitHadrOptions(AstHadrOptions.AstHadrOptions2 a);
        
        /// <summary>
        /// hadr_options : HADR suspend_resume 
        /// </summary>
        void VisitHadrOptions(AstHadrOptions.AstHadrOptions3 a);
        
        /// <summary>
        /// mixed_page_allocation_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMixedPageAllocationOption(AstMixedPageAllocationOption a);
        
        /// <summary>
        /// recovery_option : recovery_option_enum 
        /// </summary>
        void VisitRecoveryOption(AstRecoveryOption.AstRecoveryOption1 a);
        
        /// <summary>
        /// recovery_option : TORN_PAGE_DETECTION on_off 
        /// </summary>
        void VisitRecoveryOption(AstRecoveryOption.AstRecoveryOption2 a);
        
        /// <summary>
        /// recovery_option : ACCELERATED_DATABASE_RECOVERY EQUAL on_off 
        /// </summary>
        void VisitRecoveryOption(AstRecoveryOption.AstRecoveryOption3 a);
        
        /// <summary>
        /// service_broker_option : ENABLE_BROKER 
        /// </summary>
        void VisitServiceBrokerOption(AstServiceBrokerOption.AstServiceBrokerOption1 a);
        
        /// <summary>
        /// service_broker_option : DISABLE_BROKER 
        /// </summary>
        void VisitServiceBrokerOption(AstServiceBrokerOption.AstServiceBrokerOption2 a);
        
        /// <summary>
        /// service_broker_option : NEW_BROKER 
        /// </summary>
        void VisitServiceBrokerOption(AstServiceBrokerOption.AstServiceBrokerOption3 a);
        
        /// <summary>
        /// service_broker_option : ERROR_BROKER_CONVERSATIONS 
        /// </summary>
        void VisitServiceBrokerOption(AstServiceBrokerOption.AstServiceBrokerOption4 a);
        
        /// <summary>
        /// service_broker_option : HONOR_BROKER_PRIORITY on_off 
        /// </summary>
        void VisitServiceBrokerOption(AstServiceBrokerOption.AstServiceBrokerOption5 a);
        
        /// <summary>
        /// snapshot_option : ALLOW_SNAPSHOT_ISOLATION on_off 
        /// </summary>
        void VisitSnapshotOption(AstSnapshotOption.AstSnapshotOption1 a);
        
        /// <summary>
        /// snapshot_option : READ_COMMITTED_SNAPSHOT on_off 
        /// </summary>
        void VisitSnapshotOption(AstSnapshotOption.AstSnapshotOption2 a);
        
        /// <summary>
        /// snapshot_option : MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT=on_off 
        /// </summary>
        void VisitSnapshotOption(AstSnapshotOption.AstSnapshotOption3 a);
        
        /// <summary>
        /// sql_option : ANSI_NULL_DEFAULT on_off 
        /// </summary>
        void VisitSqlOption(AstSqlOption.AstSqlOption1 a);
        
        /// <summary>
        /// sql_option : ANSI_NULLS on_off 
        /// </summary>
        void VisitSqlOption(AstSqlOption.AstSqlOption2 a);
        
        /// <summary>
        /// sql_option : ANSI_PADDING on_off 
        /// </summary>
        void VisitSqlOption(AstSqlOption.AstSqlOption3 a);
        
        /// <summary>
        /// sql_option : ANSI_WARNINGS on_off 
        /// </summary>
        void VisitSqlOption(AstSqlOption.AstSqlOption4 a);
        
        /// <summary>
        /// sql_option : ARITHABORT on_off 
        /// </summary>
        void VisitSqlOption(AstSqlOption.AstSqlOption5 a);
        
        /// <summary>
        /// sql_option : COMPATIBILITY_LEVEL EQUAL decimal 
        /// </summary>
        void VisitSqlOption(AstSqlOption.AstSqlOption6 a);
        
        /// <summary>
        /// sql_option : CONCAT_NULL_YIELDS_NULL on_off 
        /// </summary>
        void VisitSqlOption(AstSqlOption.AstSqlOption7 a);
        
        /// <summary>
        /// sql_option : NUMERIC_ROUNDABORT on_off 
        /// </summary>
        void VisitSqlOption(AstSqlOption.AstSqlOption8 a);
        
        /// <summary>
        /// sql_option : QUOTED_IDENTIFIER on_off 
        /// </summary>
        void VisitSqlOption(AstSqlOption.AstSqlOption9 a);
        
        /// <summary>
        /// sql_option : RECURSIVE_TRIGGERS on_off 
        /// </summary>
        void VisitSqlOption(AstSqlOption.AstSqlOption10 a);
        
        /// <summary>
        /// target_recovery_time_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTargetRecoveryTimeOption(AstTargetRecoveryTimeOption a);
        
        /// <summary>
        /// termination : ROLLBACK AFTER seconds=decimal 
        /// </summary>
        void VisitTermination(AstTermination.AstTermination1 a);
        
        /// <summary>
        /// termination : ROLLBACK IMMEDIATE 
        /// </summary>
        void VisitTermination(AstTermination.AstTermination2 a);
        
        /// <summary>
        /// termination : NO_WAIT 
        /// </summary>
        void VisitTermination(AstTermination.AstTermination3 a);
        
        /// <summary>
        /// drop_index : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropIndex(AstDropIndex a);
        
        /// <summary>
        /// drop_relational_or_xml_or_spatial_index : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropRelationalOrXmlOrSpatialIndex(AstDropRelationalOrXmlOrSpatialIndex a);
        
        /// <summary>
        /// drop_procedure : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropProcedure(AstDropProcedure a);
        
        /// <summary>
        /// drop_dml_trigger : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropDmlTrigger(AstDropDmlTrigger a);
        
        /// <summary>
        /// drop_ddl_trigger : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropDdlTrigger(AstDropDdlTrigger a);
        
        /// <summary>
        /// drop_function : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropFunction(AstDropFunction a);
        
        /// <summary>
        /// drop_statistics : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropStatistics(AstDropStatistics a);
        
        /// <summary>
        /// full_table_ref_column : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFullTableRefColumn(AstFullTableRefColumn a);
        
        /// <summary>
        /// drop_table : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropTable(AstDropTable a);
        
        /// <summary>
        /// drop_view : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropView(AstDropView a);
        
        void VisitIfExists(AstIfExists a);
        
        void VisitCreateType(AstCreateType a);
        
        void VisitDropType(AstDropType a);
        
        /// <summary>
        /// rowset_function_limited : openquery_args 
        /// </summary>
        void VisitRowsetFunctionLimited(AstRowsetFunctionLimited.AstRowsetFunctionLimited1 a);
        
        /// <summary>
        /// rowset_function_limited : open_data_source 
        /// </summary>
        void VisitRowsetFunctionLimited(AstRowsetFunctionLimited.AstRowsetFunctionLimited2 a);
        
        /// <summary>
        /// openquery_args : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOpenqueryArgs(AstOpenqueryArgs a);
        
        /// <summary>
        /// open_data_source : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOpenDataSource(AstOpenDataSource a);
        
        /// <summary>
        /// declare_statement : DECLARE local_id AS? declare_object_table 
        /// </summary>
        void VisitDeclareStatement(AstDeclareStatement.AstDeclareStatement1 a);
        
        /// <summary>
        /// declare_statement : DECLARE declare_locals 
        /// </summary>
        void VisitDeclareStatement(AstDeclareStatement.AstDeclareStatement2 a);
        
        /// <summary>
        /// declare_statement : DECLARE local_id AS? xml_type_definition 
        /// </summary>
        void VisitDeclareStatement(AstDeclareStatement.AstDeclareStatement3 a);
        
        /// <summary>
        /// declare_statement : WITH XMLNAMESPACES LR_BRACKET xml_declarations RR_BRACKET 
        /// </summary>
        void VisitDeclareStatement(AstDeclareStatement.AstDeclareStatement4 a);
        
        /// <summary>
        /// declare_object_table : table_type_definition 
        /// </summary>
        void VisitDeclareObjectTable(AstDeclareObjectTable.AstDeclareObjectTable1 a);
        
        /// <summary>
        /// declare_object_table : full_table_ref 
        /// </summary>
        void VisitDeclareObjectTable(AstDeclareObjectTable.AstDeclareObjectTable2 a);
        
        /// <summary>
        /// xml_declaration : xml_namespace_uri=stringtext AS id_ 
        /// </summary>
        void VisitXmlDeclaration(AstXmlDeclaration.AstXmlDeclaration1 a);
        
        /// <summary>
        /// xml_declaration : DEFAULT stringtext 
        /// </summary>
        void VisitXmlDeclaration(AstXmlDeclaration.AstXmlDeclaration2 a);
        
        /// <summary>
        /// cursor_statement : CLOSE GLOBAL? cursor_name 
        /// </summary>
        void VisitCursorStatement(AstCursorStatement.AstCursorStatement1 a);
        
        /// <summary>
        /// cursor_statement : DEALLOCATE GLOBAL? CURSOR? cursor_name 
        /// </summary>
        void VisitCursorStatement(AstCursorStatement.AstCursorStatement2 a);
        
        /// <summary>
        /// cursor_statement : declare_cursor 
        /// </summary>
        void VisitCursorStatement(AstCursorStatement.AstCursorStatement3 a);
        
        /// <summary>
        /// cursor_statement : fetch_cursor 
        /// </summary>
        void VisitCursorStatement(AstCursorStatement.AstCursorStatement4 a);
        
        /// <summary>
        /// cursor_statement : OPEN GLOBAL? cursor_name 
        /// </summary>
        void VisitCursorStatement(AstCursorStatement.AstCursorStatement5 a);
        
        /// <summary>
        /// backup_database : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBackupDatabase(AstBackupDatabase a);
        
        /// <summary>
        /// file_group_assign : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFileGroupAssign(AstFileGroupAssign a);
        
        /// <summary>
        /// backup_log : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBackupLog(AstBackupLog a);
        
        /// <summary>
        /// backup_target : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBackupTarget(AstBackupTarget a);
        
        void VisitBackupTo(AstBackupTo a);
        
        /// <summary>
        /// backup_to_mirror : MIRROR TO logical_device_ids 
        /// </summary>
        void VisitBackupToMirror(AstBackupToMirror.AstBackupToMirror1 a);
        
        /// <summary>
        /// backup_to_mirror : MIRROR TO disk_tape_url_values 
        /// </summary>
        void VisitBackupToMirror(AstBackupToMirror.AstBackupToMirror2 a);
        
        /// <summary>
        /// disk_tape_url_value : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDiskTapeUrlValue(AstDiskTapeUrlValue a);
        
        /// <summary>
        /// backup_certificate : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBackupCertificate(AstBackupCertificate a);
        
        /// <summary>
        /// backup_certificate_private_keys : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBackupCertificatePrivateKeys(AstBackupCertificatePrivateKeys a);
        
        /// <summary>
        /// backup_certificate_private_key : FILE EQUAL private_key_file=stringtext 
        /// </summary>
        void VisitBackupCertificatePrivateKey(AstBackupCertificatePrivateKey.AstBackupCertificatePrivateKey1 a);
        
        /// <summary>
        /// backup_certificate_private_key : by_password_crypt 
        /// </summary>
        void VisitBackupCertificatePrivateKey(AstBackupCertificatePrivateKey.AstBackupCertificatePrivateKey2 a);
        
        /// <summary>
        /// backup_settings : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBackupSettings(AstBackupSettings a);
        
        /// <summary>
        /// backup_setting : DIFFERENTIAL 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting1 a);
        
        /// <summary>
        /// backup_setting : COPY_ONLY 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting2 a);
        
        /// <summary>
        /// backup_setting : CREDENTIAL 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting3 a);
        
        /// <summary>
        /// backup_setting : FILE_SNAPSHOT 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting4 a);
        
        /// <summary>
        /// backup_setting : NO_CHECKSUM 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting5 a);
        
        /// <summary>
        /// backup_setting : CHECKSUM 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting6 a);
        
        /// <summary>
        /// backup_setting : STOP_ON_ERROR 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting7 a);
        
        /// <summary>
        /// backup_setting : CONTINUE_AFTER_ERROR 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting8 a);
        
        /// <summary>
        /// backup_setting : RESTART 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting9 a);
        
        /// <summary>
        /// backup_setting : DESCRIPTION EQUAL string_id 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting10 a);
        
        /// <summary>
        /// backup_setting : NAME EQUAL backup_id 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting11 a);
        
        /// <summary>
        /// backup_setting : EXPIREDATE EQUAL string_id 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting12 a);
        
        /// <summary>
        /// backup_setting : RETAINDAYS EQUAL decimal_id 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting13 a);
        
        /// <summary>
        /// backup_setting : MEDIADESCRIPTION EQUAL string_id 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting14 a);
        
        /// <summary>
        /// backup_setting : MEDIANAME EQUAL stringtext 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting15 a);
        
        /// <summary>
        /// backup_setting : BLOCKSIZE EQUAL decimal_id 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting16 a);
        
        /// <summary>
        /// backup_setting : BUFFERCOUNT EQUAL decimal_id 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting17 a);
        
        /// <summary>
        /// backup_setting : MAXTRANSFER EQUAL decimal_id 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting18 a);
        
        /// <summary>
        /// backup_setting : STATS EQUAL decimal 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting19 a);
        
        /// <summary>
        /// backup_setting : ENCRYPTION LR_BRACKET ALGORITHM EQUAL algorithm_short COMMA SERVER CERTIFICATE EQUAL server_certificate_value RR_BRACKET 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting20 a);
        
        /// <summary>
        /// backup_setting : compression 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting21 a);
        
        /// <summary>
        /// backup_setting : rewind 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting22 a);
        
        /// <summary>
        /// backup_setting : load_moun_load 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting23 a);
        
        /// <summary>
        /// backup_setting : init_no_init 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting24 a);
        
        /// <summary>
        /// backup_setting : no_skip 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting25 a);
        
        /// <summary>
        /// backup_setting : format_noformat 
        /// </summary>
        void VisitBackupSetting(AstBackupSetting.AstBackupSetting26 a);
        
        /// <summary>
        /// server_certificate_value : encryptor_id 
        /// </summary>
        void VisitServerCertificateValue(AstServerCertificateValue.AstServerCertificateValue1 a);
        
        /// <summary>
        /// server_certificate_value : SERVER ASYMMETRIC KEY EQUAL encryptor_id 
        /// </summary>
        void VisitServerCertificateValue(AstServerCertificateValue.AstServerCertificateValue2 a);
        
        /// <summary>
        /// backup_master_key : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBackupMasterKey(AstBackupMasterKey a);
        
        /// <summary>
        /// backup_service_master_key : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBackupServiceMasterKey(AstBackupServiceMasterKey a);
        
        /// <summary>
        /// kill_statement : KILL kill_process 
        /// </summary>
        void VisitKillStatement(AstKillStatement.AstKillStatement1 a);
        
        /// <summary>
        /// kill_statement : KILL kill_query_notification 
        /// </summary>
        void VisitKillStatement(AstKillStatement.AstKillStatement2 a);
        
        /// <summary>
        /// kill_statement : KILL kill_stats_job 
        /// </summary>
        void VisitKillStatement(AstKillStatement.AstKillStatement3 a);
        
        /// <summary>
        /// kill_process : session=decimal_string WITH STATUSONLY 
        /// </summary>
        void VisitKillProcess(AstKillProcess.AstKillProcess1 a);
        
        /// <summary>
        /// kill_process : UOW WITH STATUSONLY 
        /// </summary>
        void VisitKillProcess(AstKillProcess.AstKillProcess2 a);
        
        /// <summary>
        /// kill_query_notification : QUERY NOTIFICATION SUBSCRIPTION ALL 
        /// </summary>
        void VisitKillQueryNotification(AstKillQueryNotification.AstKillQueryNotification1 a);
        
        /// <summary>
        /// kill_query_notification : QUERY NOTIFICATION SUBSCRIPTION subscription=decimal 
        /// </summary>
        void VisitKillQueryNotification(AstKillQueryNotification.AstKillQueryNotification2 a);
        
        void VisitKillStatsJob(AstKillStatsJob a);
        
        /// <summary>
        /// execute_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExecuteStatement(AstExecuteStatement a);
        
        /// <summary>
        /// execute_body_batch : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExecuteBodyBatch(AstExecuteBodyBatch a);
        
        /// <summary>
        /// execute_body : return_status=local_id EQUAL body_kind execute_statement_arg? 
        /// </summary>
        void VisitExecuteBody(AstExecuteBody.AstExecuteBody1 a);
        
        /// <summary>
        /// execute_body : LR_BRACKET execute_var_strings RR_BRACKET AS? login_user EQUAL stringtext AT_KEYWORD server_id 
        /// </summary>
        void VisitExecuteBody(AstExecuteBody.AstExecuteBody2 a);
        
        /// <summary>
        /// body_kind : func_proc_name_server_database_schema 
        /// </summary>
        void VisitBodyKind(AstBodyKind.AstBodyKind1 a);
        
        /// <summary>
        /// body_kind : execute_var_string 
        /// </summary>
        void VisitBodyKind(AstBodyKind.AstBodyKind2 a);
        
        /// <summary>
        /// execute_statement_arg : execute_statement_arg_unnamed execute_statement_args? 
        /// </summary>
        void VisitExecuteStatementArg(AstExecuteStatementArg.AstExecuteStatementArg1 a);
        
        /// <summary>
        /// execute_statement_arg : execute_statement_arg_nameds 
        /// </summary>
        void VisitExecuteStatementArg(AstExecuteStatementArg.AstExecuteStatementArg2 a);
        
        void VisitExecuteStatementArgNamed(AstExecuteStatementArgNamed a);
        
        void VisitExecuteStatementArgUnnamed(AstExecuteStatementArgUnnamed a);
        
        /// <summary>
        /// execute_parameter : constant 
        /// </summary>
        void VisitExecuteParameter(AstExecuteParameter.AstExecuteParameter1 a);
        
        /// <summary>
        /// execute_parameter : local_id output_out? 
        /// </summary>
        void VisitExecuteParameter(AstExecuteParameter.AstExecuteParameter2 a);
        
        /// <summary>
        /// execute_parameter : id_ 
        /// </summary>
        void VisitExecuteParameter(AstExecuteParameter.AstExecuteParameter3 a);
        
        /// <summary>
        /// execute_parameter : DEFAULT 
        /// </summary>
        void VisitExecuteParameter(AstExecuteParameter.AstExecuteParameter4 a);
        
        /// <summary>
        /// execute_parameter : NULL_ 
        /// </summary>
        void VisitExecuteParameter(AstExecuteParameter.AstExecuteParameter5 a);
        
        /// <summary>
        /// execute_var_string : source=local_id output_out? PLUS more=local_id PLUS execute_var_string 
        /// </summary>
        void VisitExecuteVarString(AstExecuteVarString.AstExecuteVarString1 a);
        
        /// <summary>
        /// execute_var_string : stringtext PLUS local_id PLUS execute_var_string 
        /// </summary>
        void VisitExecuteVarString(AstExecuteVarString.AstExecuteVarString2 a);
        
        /// <summary>
        /// security_statement : execute_clause 
        /// </summary>
        void VisitSecurityStatement(AstSecurityStatement.AstSecurityStatement1 a);
        
        /// <summary>
        /// security_statement : GRANT grant_mode ON class_type_for_grant DOUBLE_COLON table=full_table_ref TO to_principal_rincipal_ids WITH GRANT OPTION AS as_principal=principal_id 
        /// </summary>
        void VisitSecurityStatement(AstSecurityStatement.AstSecurityStatement2 a);
        
        /// <summary>
        /// security_statement : REVERT LR_BRACKET WITH COOKIE EQUAL local_id RR_BRACKET 
        /// </summary>
        void VisitSecurityStatement(AstSecurityStatement.AstSecurityStatement3 a);
        
        /// <summary>
        /// security_statement : open_key 
        /// </summary>
        void VisitSecurityStatement(AstSecurityStatement.AstSecurityStatement4 a);
        
        /// <summary>
        /// security_statement : close_key 
        /// </summary>
        void VisitSecurityStatement(AstSecurityStatement.AstSecurityStatement5 a);
        
        /// <summary>
        /// security_statement : create_key 
        /// </summary>
        void VisitSecurityStatement(AstSecurityStatement.AstSecurityStatement6 a);
        
        /// <summary>
        /// security_statement : create_certificate 
        /// </summary>
        void VisitSecurityStatement(AstSecurityStatement.AstSecurityStatement7 a);
        
        /// <summary>
        /// grant_mode : ALL PRIVILEGES? 
        /// </summary>
        void VisitGrantMode(AstGrantMode.AstGrantMode1 a);
        
        /// <summary>
        /// grant_mode : grant_permission LR_BRACKET column_name_list RR_BRACKET 
        /// </summary>
        void VisitGrantMode(AstGrantMode.AstGrantMode2 a);
        
        /// <summary>
        /// to_principal_rincipal_ids : Bb.Generators.ModelMethod
        /// </summary>
        void VisitToPrincipalRincipalIds(AstToPrincipalRincipalIds a);
        
        /// <summary>
        /// principal_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPrincipalId(AstPrincipalId a);
        
        /// <summary>
        /// create_certificate : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateCertificate(AstCreateCertificate a);
        
        /// <summary>
        /// existing_keys : ASSEMBLY assembly_id 
        /// </summary>
        void VisitExistingKeys(AstExistingKeys.AstExistingKeys1 a);
        
        /// <summary>
        /// existing_keys : EXECUTABLE? FILE EQUAL path_to_file=stringtext WITH PRIVATE KEY LR_BRACKET private_key_options RR_BRACKET 
        /// </summary>
        void VisitExistingKeys(AstExistingKeys.AstExistingKeys2 a);
        
        /// <summary>
        /// private_key_options : FILE EQUAL path=stringtext COMMA encryption_decryption BY password_setting 
        /// </summary>
        void VisitPrivateKeyOptions(AstPrivateKeyOptions.AstPrivateKeyOptions1 a);
        
        /// <summary>
        /// private_key_options : binary_ EQUAL path=stringtext COMMA encryption_decryption BY password_setting 
        /// </summary>
        void VisitPrivateKeyOptions(AstPrivateKeyOptions.AstPrivateKeyOptions2 a);
        
        /// <summary>
        /// generate_new_keys : Bb.Generators.ModelMethod
        /// </summary>
        void VisitGenerateNewKeys(AstGenerateNewKeys a);
        
        /// <summary>
        /// date_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDateOption(AstDateOption a);
        
        /// <summary>
        /// open_key : OPEN SYMMETRIC KEY symmetric_key_id DECRYPTION BY decryption_mechanism 
        /// </summary>
        void VisitOpenKey(AstOpenKey.AstOpenKey1 a);
        
        /// <summary>
        /// open_key : OPEN MASTER KEY decryption_by_pwd 
        /// </summary>
        void VisitOpenKey(AstOpenKey.AstOpenKey2 a);
        
        /// <summary>
        /// close_key : CLOSE SYMMETRIC KEY symmetric_key_id 
        /// </summary>
        void VisitCloseKey(AstCloseKey.AstCloseKey1 a);
        
        /// <summary>
        /// close_key : CLOSE ALL SYMMETRIC KEYS 
        /// </summary>
        void VisitCloseKey(AstCloseKey.AstCloseKey2 a);
        
        /// <summary>
        /// close_key : CLOSE MASTER KEY 
        /// </summary>
        void VisitCloseKey(AstCloseKey.AstCloseKey3 a);
        
        /// <summary>
        /// create_key : CREATE MASTER KEY encryption_by_pwd 
        /// </summary>
        void VisitCreateKey(AstCreateKey.AstCreateKey1 a);
        
        /// <summary>
        /// create_key : CREATE SYMMETRIC KEY symmetric_key_id AUTHORIZATION user_id FROM PROVIDER provider_id WITH create_key_options 
        /// </summary>
        void VisitCreateKey(AstCreateKey.AstCreateKey2 a);
        
        /// <summary>
        /// create_key_option : key_options 
        /// </summary>
        void VisitCreateKeyOption(AstCreateKeyOption.AstCreateKeyOption1 a);
        
        /// <summary>
        /// create_key_option : ENCRYPTION BY encryption_mechanism 
        /// </summary>
        void VisitCreateKeyOption(AstCreateKeyOption.AstCreateKeyOption2 a);
        
        /// <summary>
        /// create_key_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateKeyOptions(AstCreateKeyOptions a);
        
        /// <summary>
        /// key_options : KEY_SOURCE EQUAL pass_phrase=stringtext 
        /// </summary>
        void VisitKeyOptions(AstKeyOptions.AstKeyOptions1 a);
        
        /// <summary>
        /// key_options : ALGORITHM EQUAL algorithm 
        /// </summary>
        void VisitKeyOptions(AstKeyOptions.AstKeyOptions2 a);
        
        /// <summary>
        /// key_options : IDENTITY_VALUE EQUAL identity_phrase=stringtext 
        /// </summary>
        void VisitKeyOptions(AstKeyOptions.AstKeyOptions3 a);
        
        /// <summary>
        /// key_options : PROVIDER_KEY_NAME EQUAL key_name_in_provider=stringtext 
        /// </summary>
        void VisitKeyOptions(AstKeyOptions.AstKeyOptions4 a);
        
        /// <summary>
        /// key_options : CREATION_DISPOSITION EQUAL creation_disposition 
        /// </summary>
        void VisitKeyOptions(AstKeyOptions.AstKeyOptions5 a);
        
        /// <summary>
        /// encryption_mechanism : CERTIFICATE certificate_id 
        /// </summary>
        void VisitEncryptionMechanism(AstEncryptionMechanism.AstEncryptionMechanism1 a);
        
        /// <summary>
        /// encryption_mechanism : ASYMMETRIC KEY asym_key_id 
        /// </summary>
        void VisitEncryptionMechanism(AstEncryptionMechanism.AstEncryptionMechanism2 a);
        
        /// <summary>
        /// encryption_mechanism : SYMMETRIC KEY symmetric_key_id 
        /// </summary>
        void VisitEncryptionMechanism(AstEncryptionMechanism.AstEncryptionMechanism3 a);
        
        /// <summary>
        /// encryption_mechanism : password_setting 
        /// </summary>
        void VisitEncryptionMechanism(AstEncryptionMechanism.AstEncryptionMechanism4 a);
        
        /// <summary>
        /// decryption_mechanism : CERTIFICATE certificate_id WITH password_setting 
        /// </summary>
        void VisitDecryptionMechanism(AstDecryptionMechanism.AstDecryptionMechanism1 a);
        
        /// <summary>
        /// decryption_mechanism : ASYMMETRIC KEY asym_key_id WITH password_setting 
        /// </summary>
        void VisitDecryptionMechanism(AstDecryptionMechanism.AstDecryptionMechanism2 a);
        
        /// <summary>
        /// decryption_mechanism : SYMMETRIC KEY symmetric_key_id 
        /// </summary>
        void VisitDecryptionMechanism(AstDecryptionMechanism.AstDecryptionMechanism3 a);
        
        /// <summary>
        /// decryption_mechanism : password_setting 
        /// </summary>
        void VisitDecryptionMechanism(AstDecryptionMechanism.AstDecryptionMechanism4 a);
        
        /// <summary>
        /// grant_permission_alter : Bb.Generators.ModelMethod
        /// </summary>
        void VisitGrantPermissionAlter(AstGrantPermissionAlter a);
        
        /// <summary>
        /// grant_permission_create : Bb.Generators.ModelMethod
        /// </summary>
        void VisitGrantPermissionCreate(AstGrantPermissionCreate a);
        
        /// <summary>
        /// grant_permission : grant_permission_enum 
        /// </summary>
        void VisitGrantPermission(AstGrantPermission.AstGrantPermission1 a);
        
        /// <summary>
        /// grant_permission : grant_permission_alter 
        /// </summary>
        void VisitGrantPermission(AstGrantPermission.AstGrantPermission2 a);
        
        /// <summary>
        /// grant_permission : grant_permission_create 
        /// </summary>
        void VisitGrantPermission(AstGrantPermission.AstGrantPermission3 a);
        
        /// <summary>
        /// set_statement : SET local_id DOT member_name=id_ EQUAL expression 
        /// </summary>
        void VisitSetStatement(AstSetStatement.AstSetStatement1 a);
        
        /// <summary>
        /// set_statement : SET local_id assignment_operator expression 
        /// </summary>
        void VisitSetStatement(AstSetStatement.AstSetStatement2 a);
        
        /// <summary>
        /// set_statement : SET local_id EQUAL CURSOR declare_set_cursor_common FOR cursor_mode 
        /// </summary>
        void VisitSetStatement(AstSetStatement.AstSetStatement3 a);
        
        /// <summary>
        /// set_statement : set_special 
        /// </summary>
        void VisitSetStatement(AstSetStatement.AstSetStatement4 a);
        
        /// <summary>
        /// cursor_mode : READ ONLY 
        /// </summary>
        void VisitCursorMode(AstCursorMode.AstCursorMode1 a);
        
        /// <summary>
        /// cursor_mode : UPDATE OF column_name_list 
        /// </summary>
        void VisitCursorMode(AstCursorMode.AstCursorMode2 a);
        
        /// <summary>
        /// transaction_statement : BEGIN DISTRIBUTED transaction transaction_ref? 
        /// </summary>
        void VisitTransactionStatement(AstTransactionStatement.AstTransactionStatement1 a);
        
        /// <summary>
        /// transaction_statement : BEGIN transaction transaction_ref WITH MARK mark=stringtext 
        /// </summary>
        void VisitTransactionStatement(AstTransactionStatement.AstTransactionStatement2 a);
        
        /// <summary>
        /// transaction_statement : COMMIT transaction transaction_ref WITH LR_BRACKET DELAYED_DURABILITY EQUAL on_off RR_BRACKET 
        /// </summary>
        void VisitTransactionStatement(AstTransactionStatement.AstTransactionStatement3 a);
        
        /// <summary>
        /// transaction_statement : COMMIT WORK? 
        /// </summary>
        void VisitTransactionStatement(AstTransactionStatement.AstTransactionStatement4 a);
        
        /// <summary>
        /// transaction_statement : COMMIT transaction_identifier 
        /// </summary>
        void VisitTransactionStatement(AstTransactionStatement.AstTransactionStatement5 a);
        
        /// <summary>
        /// transaction_statement : ROLLBACK transaction_identifier 
        /// </summary>
        void VisitTransactionStatement(AstTransactionStatement.AstTransactionStatement6 a);
        
        /// <summary>
        /// transaction_statement : ROLLBACK transaction transaction_ref? 
        /// </summary>
        void VisitTransactionStatement(AstTransactionStatement.AstTransactionStatement7 a);
        
        /// <summary>
        /// transaction_statement : ROLLBACK WORK? 
        /// </summary>
        void VisitTransactionStatement(AstTransactionStatement.AstTransactionStatement8 a);
        
        /// <summary>
        /// transaction_statement : SAVE transaction transaction_ref? 
        /// </summary>
        void VisitTransactionStatement(AstTransactionStatement.AstTransactionStatement9 a);
        
        /// <summary>
        /// transaction_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTransactionRef(AstTransactionRef a);
        
        void VisitGoStatement(AstGoStatement a);
        
        /// <summary>
        /// use_statement : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUseStatement(AstUseStatement a);
        
        void VisitSetuserStatement(AstSetuserStatement a);
        
        void VisitReconfigureStatement(AstReconfigureStatement a);
        
        void VisitShutdownStatement(AstShutdownStatement a);
        
        void VisitCheckpointStatement(AstCheckpointStatement a);
        
        void VisitDbccSpecial(AstDbccSpecial a);
        
        /// <summary>
        /// dbcc_special_size : constant_expression id_ 
        /// </summary>
        void VisitDbccSpecialSize(AstDbccSpecialSize.AstDbccSpecialSize1 a);
        
        /// <summary>
        /// dbcc_special_size : DEFAULT 
        /// </summary>
        void VisitDbccSpecialSize(AstDbccSpecialSize.AstDbccSpecialSize2 a);
        
        void VisitDbccClause(AstDbccClause a);
        
        /// <summary>
        /// dbcc_command : simple_id 
        /// </summary>
        void VisitDbccCommand(AstDbccCommand.AstDbccCommand1 a);
        
        /// <summary>
        /// dbcc_command : keyword 
        /// </summary>
        void VisitDbccCommand(AstDbccCommand.AstDbccCommand2 a);
        
        /// <summary>
        /// execute_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExecuteClause(AstExecuteClause a);
        
        /// <summary>
        /// execute_clause_mode : execute_clause_mode_enum 
        /// </summary>
        void VisitExecuteClauseMode(AstExecuteClauseMode.AstExecuteClauseMode1 a);
        
        /// <summary>
        /// execute_clause_mode : stringtext 
        /// </summary>
        void VisitExecuteClauseMode(AstExecuteClauseMode.AstExecuteClauseMode2 a);
        
        /// <summary>
        /// declare_local : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDeclareLocal(AstDeclareLocal a);
        
        /// <summary>
        /// table_type_definition : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableTypeDefinition(AstTableTypeDefinition a);
        
        /// <summary>
        /// table_type_indice : type_indice LR_BRACKET column_name_list_with_order RR_BRACKET 
        /// </summary>
        void VisitTableTypeIndice(AstTableTypeIndice.AstTableTypeIndice1 a);
        
        /// <summary>
        /// table_type_indice : CHECK LR_BRACKET search_condition RR_BRACKET 
        /// </summary>
        void VisitTableTypeIndice(AstTableTypeIndice.AstTableTypeIndice2 a);
        
        /// <summary>
        /// type_indice : indice_name clustered? 
        /// </summary>
        void VisitTypeIndice(AstTypeIndice.AstTypeIndice1 a);
        
        /// <summary>
        /// type_indice : UNIQUE 
        /// </summary>
        void VisitTypeIndice(AstTypeIndice.AstTypeIndice2 a);
        
        /// <summary>
        /// indice_name : PRIMARY KEY 
        /// </summary>
        void VisitIndiceName(AstIndiceName.AstIndiceName1 a);
        
        /// <summary>
        /// indice_name : INDEX index_id 
        /// </summary>
        void VisitIndiceName(AstIndiceName.AstIndiceName2 a);
        
        /// <summary>
        /// xml_type_definition : Bb.Generators.ModelMethod
        /// </summary>
        void VisitXmlTypeDefinition(AstXmlTypeDefinition a);
        
        void VisitXmlSchemaCollection(AstXmlSchemaCollection a);
        
        /// <summary>
        /// column_def_table_constraints : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnDefTableConstraints(AstColumnDefTableConstraints a);
        
        /// <summary>
        /// column_def_table_constraint : column_definition 
        /// </summary>
        void VisitColumnDefTableConstraint(AstColumnDefTableConstraint.AstColumnDefTableConstraint1 a);
        
        /// <summary>
        /// column_def_table_constraint : materialized_column_definition 
        /// </summary>
        void VisitColumnDefTableConstraint(AstColumnDefTableConstraint.AstColumnDefTableConstraint2 a);
        
        /// <summary>
        /// column_def_table_constraint : table_constraint 
        /// </summary>
        void VisitColumnDefTableConstraint(AstColumnDefTableConstraint.AstColumnDefTableConstraint3 a);
        
        /// <summary>
        /// column_definition : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnDefinition(AstColumnDefinition a);
        
        /// <summary>
        /// column_definition_element : FILESTREAM 
        /// </summary>
        void VisitColumnDefinitionElement(AstColumnDefinitionElement.AstColumnDefinitionElement1 a);
        
        /// <summary>
        /// column_definition_element : COLLATE collation_id 
        /// </summary>
        void VisitColumnDefinitionElement(AstColumnDefinitionElement.AstColumnDefinitionElement2 a);
        
        /// <summary>
        /// column_definition_element : SPARSE 
        /// </summary>
        void VisitColumnDefinitionElement(AstColumnDefinitionElement.AstColumnDefinitionElement3 a);
        
        /// <summary>
        /// column_definition_element : MASKED WITH LR_BRACKET FUNCTION EQUAL mask_function=stringtext RR_BRACKET 
        /// </summary>
        void VisitColumnDefinitionElement(AstColumnDefinitionElement.AstColumnDefinitionElement4 a);
        
        /// <summary>
        /// column_definition_element : CONSTRAINT constraint_id DEFAULT constant_expr=expression 
        /// </summary>
        void VisitColumnDefinitionElement(AstColumnDefinitionElement.AstColumnDefinitionElement5 a);
        
        /// <summary>
        /// column_definition_element : IDENTITY LR_BRACKET seed=decimal COMMA increment=decimal RR_BRACKET 
        /// </summary>
        void VisitColumnDefinitionElement(AstColumnDefinitionElement.AstColumnDefinitionElement6 a);
        
        /// <summary>
        /// column_definition_element : NOT FOR REPLICATION 
        /// </summary>
        void VisitColumnDefinitionElement(AstColumnDefinitionElement.AstColumnDefinitionElement7 a);
        
        /// <summary>
        /// column_definition_element : GENERATED ALWAYS AS generation_mode start_end HIDDEN_KEYWORD? 
        /// </summary>
        void VisitColumnDefinitionElement(AstColumnDefinitionElement.AstColumnDefinitionElement8 a);
        
        /// <summary>
        /// column_definition_element : ROWGUIDCOL 
        /// </summary>
        void VisitColumnDefinitionElement(AstColumnDefinitionElement.AstColumnDefinitionElement9 a);
        
        /// <summary>
        /// column_definition_element : ENCRYPTED WITH LR_BRACKET column_encryption_key_id EQUAL key_name=stringtext COMMA ENCRYPTION_TYPE EQUAL encryption_mode COMMA ALGORITHM EQUAL algo=stringtext RR_BRACKET 
        /// </summary>
        void VisitColumnDefinitionElement(AstColumnDefinitionElement.AstColumnDefinitionElement10 a);
        
        /// <summary>
        /// column_definition_element : column_constraint 
        /// </summary>
        void VisitColumnDefinitionElement(AstColumnDefinitionElement.AstColumnDefinitionElement11 a);
        
        /// <summary>
        /// column_modifier : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnModifier(AstColumnModifier a);
        
        /// <summary>
        /// materialized_column_definition : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMaterializedColumnDefinition(AstMaterializedColumnDefinition a);
        
        /// <summary>
        /// column_constraint : CONSTRAINT constraint_id null_notnull 
        /// </summary>
        void VisitColumnConstraint(AstColumnConstraint.AstColumnConstraint1 a);
        
        /// <summary>
        /// column_constraint : CONSTRAINT constraint_id primary_key_unique clustered? primary_key_options 
        /// </summary>
        void VisitColumnConstraint(AstColumnConstraint.AstColumnConstraint2 a);
        
        /// <summary>
        /// column_constraint : CONSTRAINT constraint_id FOREIGN KEY foreign_key_options 
        /// </summary>
        void VisitColumnConstraint(AstColumnConstraint.AstColumnConstraint3 a);
        
        /// <summary>
        /// column_constraint : CONSTRAINT constraint_id check_constraint 
        /// </summary>
        void VisitColumnConstraint(AstColumnConstraint.AstColumnConstraint4 a);
        
        /// <summary>
        /// column_index : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnIndex(AstColumnIndex a);
        
        /// <summary>
        /// on_partition_or_filegroup : ON partition_scheme_id LR_BRACKET partition_column_id RR_BRACKET 
        /// </summary>
        void VisitOnPartitionOrFilegroup(AstOnPartitionOrFilegroup.AstOnPartitionOrFilegroup1 a);
        
        /// <summary>
        /// on_partition_or_filegroup : ON file_group_id 
        /// </summary>
        void VisitOnPartitionOrFilegroup(AstOnPartitionOrFilegroup.AstOnPartitionOrFilegroup2 a);
        
        /// <summary>
        /// on_partition_or_filegroup : ON DEFAULT_DOUBLE_QUOTE 
        /// </summary>
        void VisitOnPartitionOrFilegroup(AstOnPartitionOrFilegroup.AstOnPartitionOrFilegroup3 a);
        
        /// <summary>
        /// table_constraint : CONSTRAINT constraint_id primary_key_unique clustered? LR_BRACKET column_name_list_with_order RR_BRACKET primary_key_options 
        /// </summary>
        void VisitTableConstraint(AstTableConstraint.AstTableConstraint1 a);
        
        /// <summary>
        /// table_constraint : CONSTRAINT constraint_id FOREIGN KEY LR_BRACKET fk=column_name_list RR_BRACKET foreign_key_options 
        /// </summary>
        void VisitTableConstraint(AstTableConstraint.AstTableConstraint2 a);
        
        /// <summary>
        /// table_constraint : CONSTRAINT constraint_id CONNECTION LR_BRACKET connection_nodes RR_BRACKET 
        /// </summary>
        void VisitTableConstraint(AstTableConstraint.AstTableConstraint3 a);
        
        /// <summary>
        /// table_constraint : CONSTRAINT constraint_id DEFAULT LR_BRACKET? stringtext RR_BRACKET? FOR id_ 
        /// </summary>
        void VisitTableConstraint(AstTableConstraint.AstTableConstraint4 a);
        
        /// <summary>
        /// table_constraint : CONSTRAINT constraint_id DEFAULT LR_BRACKET? PLUS RR_BRACKET? FOR id_ 
        /// </summary>
        void VisitTableConstraint(AstTableConstraint.AstTableConstraint5 a);
        
        /// <summary>
        /// table_constraint : CONSTRAINT constraint_id DEFAULT LR_BRACKET? function_call RR_BRACKET? FOR id_ 
        /// </summary>
        void VisitTableConstraint(AstTableConstraint.AstTableConstraint6 a);
        
        /// <summary>
        /// table_constraint : CONSTRAINT constraint_id DEFAULT LR_BRACKET? decimal RR_BRACKET? FOR id_ 
        /// </summary>
        void VisitTableConstraint(AstTableConstraint.AstTableConstraint7 a);
        
        /// <summary>
        /// table_constraint : CONSTRAINT constraint_id DEFAULT LR_BRACKET? NEXT VALUE FOR full_table_ref RR_BRACKET? FOR id_ 
        /// </summary>
        void VisitTableConstraint(AstTableConstraint.AstTableConstraint8 a);
        
        /// <summary>
        /// table_constraint : CONSTRAINT constraint_id check_constraint 
        /// </summary>
        void VisitTableConstraint(AstTableConstraint.AstTableConstraint9 a);
        
        void VisitConnectionNode(AstConnectionNode a);
        
        /// <summary>
        /// primary_key_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPrimaryKeyOptions(AstPrimaryKeyOptions a);
        
        /// <summary>
        /// foreign_key_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitForeignKeyOptions(AstForeignKeyOptions a);
        
        /// <summary>
        /// check_constraint : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCheckConstraint(AstCheckConstraint a);
        
        /// <summary>
        /// alter_table_index_option : PAD_INDEX EQUAL on_off 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption1 a);
        
        /// <summary>
        /// alter_table_index_option : FILLFACTOR EQUAL decimal 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption2 a);
        
        /// <summary>
        /// alter_table_index_option : IGNORE_DUP_KEY EQUAL on_off 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption3 a);
        
        /// <summary>
        /// alter_table_index_option : STATISTICS_NORECOMPUTE EQUAL on_off 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption4 a);
        
        /// <summary>
        /// alter_table_index_option : ALLOW_ROW_LOCKS EQUAL on_off 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption5 a);
        
        /// <summary>
        /// alter_table_index_option : ALLOW_PAGE_LOCKS EQUAL on_off 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption6 a);
        
        /// <summary>
        /// alter_table_index_option : OPTIMIZE_FOR_SEQUENTIAL_KEY EQUAL on_off 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption7 a);
        
        /// <summary>
        /// alter_table_index_option : SORT_IN_TEMPDB EQUAL on_off 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption8 a);
        
        /// <summary>
        /// alter_table_index_option : MAXDOP EQUAL max_degree_of_parallelism=decimal 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption9 a);
        
        /// <summary>
        /// alter_table_index_option : DATA_COMPRESSION EQUAL index_strategy on_partitions? 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption10 a);
        
        /// <summary>
        /// alter_table_index_option : XML_COMPRESSION EQUAL on_off on_partitions? 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption11 a);
        
        /// <summary>
        /// alter_table_index_option : table_distribution 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption12 a);
        
        /// <summary>
        /// alter_table_index_option : ONLINE EQUAL online_value 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption13 a);
        
        /// <summary>
        /// alter_table_index_option : RESUMABLE EQUAL on_off 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption14 a);
        
        /// <summary>
        /// alter_table_index_option : MAX_DURATION EQUAL times=decimal MINUTES? 
        /// </summary>
        void VisitAlterTableIndexOption(AstAlterTableIndexOption.AstAlterTableIndexOption15 a);
        
        /// <summary>
        /// declare_cursor : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDeclareCursor(AstDeclareCursor a);
        
        /// <summary>
        /// declare_set_cursor_common : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDeclareSetCursorCommon(AstDeclareSetCursorCommon a);
        
        /// <summary>
        /// declare_set_cursor_common_partial : local_global 
        /// </summary>
        void VisitDeclareSetCursorCommonPartial(AstDeclareSetCursorCommonPartial.AstDeclareSetCursorCommonPartial1 a);
        
        /// <summary>
        /// declare_set_cursor_common_partial : declare_set_cursor_common_partial_enum 
        /// </summary>
        void VisitDeclareSetCursorCommonPartial(AstDeclareSetCursorCommonPartial.AstDeclareSetCursorCommonPartial2 a);
        
        /// <summary>
        /// fetch_cursor : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFetchCursor(AstFetchCursor a);
        
        /// <summary>
        /// set_special : SET left=id_ set_special_set_value 
        /// </summary>
        void VisitSetSpecial(AstSetSpecial.AstSetSpecial1 a);
        
        /// <summary>
        /// set_special : SET STATISTICS statistic_kind statistics=on_off 
        /// </summary>
        void VisitSetSpecial(AstSetSpecial.AstSetSpecial2 a);
        
        /// <summary>
        /// set_special : SET ROWCOUNT local_id_decimal 
        /// </summary>
        void VisitSetSpecial(AstSetSpecial.AstSetSpecial3 a);
        
        /// <summary>
        /// set_special : SET TEXTSIZE decimal 
        /// </summary>
        void VisitSetSpecial(AstSetSpecial.AstSetSpecial4 a);
        
        /// <summary>
        /// set_special : SET TRANSACTION ISOLATION LEVEL transaction_level 
        /// </summary>
        void VisitSetSpecial(AstSetSpecial.AstSetSpecial5 a);
        
        /// <summary>
        /// set_special : SET IDENTITY_INSERT full_table_ref identity_insert=on_off 
        /// </summary>
        void VisitSetSpecial(AstSetSpecial.AstSetSpecial6 a);
        
        /// <summary>
        /// set_special : SET special_lists list=on_off 
        /// </summary>
        void VisitSetSpecial(AstSetSpecial.AstSetSpecial7 a);
        
        /// <summary>
        /// set_special : SET modify_method 
        /// </summary>
        void VisitSetSpecial(AstSetSpecial.AstSetSpecial8 a);
        
        /// <summary>
        /// transaction_level : transaction_isolation 
        /// </summary>
        void VisitTransactionLevel(AstTransactionLevel.AstTransactionLevel1 a);
        
        /// <summary>
        /// transaction_level : decimal 
        /// </summary>
        void VisitTransactionLevel(AstTransactionLevel.AstTransactionLevel2 a);
        
        /// <summary>
        /// local_id_decimal : local_id 
        /// </summary>
        void VisitLocalIdDecimal(AstLocalIdDecimal.AstLocalIdDecimal1 a);
        
        /// <summary>
        /// local_id_decimal : decimal 
        /// </summary>
        void VisitLocalIdDecimal(AstLocalIdDecimal.AstLocalIdDecimal2 a);
        
        /// <summary>
        /// set_special_set_value : id_ 
        /// </summary>
        void VisitSetSpecialSetValue(AstSetSpecialSetValue.AstSetSpecialSetValue1 a);
        
        /// <summary>
        /// set_special_set_value : constant_local_id 
        /// </summary>
        void VisitSetSpecialSetValue(AstSetSpecialSetValue.AstSetSpecialSetValue2 a);
        
        /// <summary>
        /// set_special_set_value : on_off 
        /// </summary>
        void VisitSetSpecialSetValue(AstSetSpecialSetValue.AstSetSpecialSetValue3 a);
        
        /// <summary>
        /// constant_local_id : constant 
        /// </summary>
        void VisitConstantLocalId(AstConstantLocalId.AstConstantLocalId1 a);
        
        /// <summary>
        /// constant_local_id : local_id 
        /// </summary>
        void VisitConstantLocalId(AstConstantLocalId.AstConstantLocalId2 a);
        
        /// <summary>
        /// empty_value : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEmptyValue(AstEmptyValue a);
        
        /// <summary>
        /// expression : primitive_expression 
        /// </summary>
        void VisitExpression(AstExpression.AstExpression1 a);
        
        /// <summary>
        /// expression : function_call 
        /// </summary>
        void VisitExpression(AstExpression.AstExpression2 a);
        
        /// <summary>
        /// expression : expression DOT expression_chained 
        /// </summary>
        void VisitExpression(AstExpression.AstExpression3 a);
        
        /// <summary>
        /// expression : expression DOT hierarchyid_call 
        /// </summary>
        void VisitExpression(AstExpression.AstExpression4 a);
        
        /// <summary>
        /// expression : expression COLLATE id_ 
        /// </summary>
        void VisitExpression(AstExpression.AstExpression5 a);
        
        /// <summary>
        /// expression : case_expression 
        /// </summary>
        void VisitExpression(AstExpression.AstExpression6 a);
        
        /// <summary>
        /// expression : full_column_name 
        /// </summary>
        void VisitExpression(AstExpression.AstExpression7 a);
        
        /// <summary>
        /// expression : bracket_expression 
        /// </summary>
        void VisitExpression(AstExpression.AstExpression8 a);
        
        /// <summary>
        /// expression : unary_operator_expression 
        /// </summary>
        void VisitExpression(AstExpression.AstExpression9 a);
        
        /// <summary>
        /// expression : left=expression op=expression_operator right=expression 
        /// </summary>
        void VisitExpression(AstExpression.AstExpression10 a);
        
        /// <summary>
        /// expression : expression time_zone 
        /// </summary>
        void VisitExpression(AstExpression.AstExpression11 a);
        
        /// <summary>
        /// expression : over_clause 
        /// </summary>
        void VisitExpression(AstExpression.AstExpression12 a);
        
        /// <summary>
        /// expression : DOLLAR_ACTION 
        /// </summary>
        void VisitExpression(AstExpression.AstExpression13 a);
        
        /// <summary>
        /// expression_chained : value_call 
        /// </summary>
        void VisitExpressionChained(AstExpressionChained.AstExpressionChained1 a);
        
        /// <summary>
        /// expression_chained : query_call 
        /// </summary>
        void VisitExpressionChained(AstExpressionChained.AstExpressionChained2 a);
        
        /// <summary>
        /// expression_chained : exist_call 
        /// </summary>
        void VisitExpressionChained(AstExpressionChained.AstExpressionChained3 a);
        
        /// <summary>
        /// expression_chained : modify_call 
        /// </summary>
        void VisitExpressionChained(AstExpressionChained.AstExpressionChained4 a);
        
        /// <summary>
        /// time_zone : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTimeZone(AstTimeZone a);
        
        /// <summary>
        /// primitive_expression : DEFAULT 
        /// </summary>
        void VisitPrimitiveExpression(AstPrimitiveExpression.AstPrimitiveExpression1 a);
        
        /// <summary>
        /// primitive_expression : NULL_ 
        /// </summary>
        void VisitPrimitiveExpression(AstPrimitiveExpression.AstPrimitiveExpression2 a);
        
        /// <summary>
        /// primitive_expression : local_id 
        /// </summary>
        void VisitPrimitiveExpression(AstPrimitiveExpression.AstPrimitiveExpression3 a);
        
        /// <summary>
        /// primitive_expression : constant 
        /// </summary>
        void VisitPrimitiveExpression(AstPrimitiveExpression.AstPrimitiveExpression4 a);
        
        /// <summary>
        /// case_expression : CASE caseExpr=expression switch_section+ ELSE elseExpr=expression END 
        /// </summary>
        void VisitCaseExpression(AstCaseExpression.AstCaseExpression1 a);
        
        /// <summary>
        /// case_expression : CASE switch_search_condition_section+ ELSE elseExpr=expression END 
        /// </summary>
        void VisitCaseExpression(AstCaseExpression.AstCaseExpression2 a);
        
        /// <summary>
        /// unary_operator_expression : BIT_NOT expression 
        /// </summary>
        void VisitUnaryOperatorExpression(AstUnaryOperatorExpression.AstUnaryOperatorExpression1 a);
        
        /// <summary>
        /// unary_operator_expression : plus_minus expression 
        /// </summary>
        void VisitUnaryOperatorExpression(AstUnaryOperatorExpression.AstUnaryOperatorExpression2 a);
        
        /// <summary>
        /// bracket_expression : LR_BRACKET expression RR_BRACKET 
        /// </summary>
        void VisitBracketExpression(AstBracketExpression.AstBracketExpression1 a);
        
        /// <summary>
        /// bracket_expression : LR_BRACKET subquery RR_BRACKET 
        /// </summary>
        void VisitBracketExpression(AstBracketExpression.AstBracketExpression2 a);
        
        /// <summary>
        /// constant_expression : NULL_ 
        /// </summary>
        void VisitConstantExpression(AstConstantExpression.AstConstantExpression1 a);
        
        /// <summary>
        /// constant_expression : constant 
        /// </summary>
        void VisitConstantExpression(AstConstantExpression.AstConstantExpression2 a);
        
        /// <summary>
        /// constant_expression : function_call 
        /// </summary>
        void VisitConstantExpression(AstConstantExpression.AstConstantExpression3 a);
        
        /// <summary>
        /// constant_expression : local_id 
        /// </summary>
        void VisitConstantExpression(AstConstantExpression.AstConstantExpression4 a);
        
        /// <summary>
        /// constant_expression : LR_BRACKET constant_expression RR_BRACKET 
        /// </summary>
        void VisitConstantExpression(AstConstantExpression.AstConstantExpression5 a);
        
        /// <summary>
        /// subquery : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSubquery(AstSubquery a);
        
        void VisitCommonTableExpression(AstCommonTableExpression a);
        
        /// <summary>
        /// update_elem : local_id EQUAL full_column_name update_operator expression 
        /// </summary>
        void VisitUpdateElem(AstUpdateElem.AstUpdateElem1 a);
        
        /// <summary>
        /// update_elem : column_ref update_operator expression 
        /// </summary>
        void VisitUpdateElem(AstUpdateElem.AstUpdateElem2 a);
        
        /// <summary>
        /// update_elem : udt_column_id DOT method_id LR_BRACKET expression_list RR_BRACKET 
        /// </summary>
        void VisitUpdateElem(AstUpdateElem.AstUpdateElem3 a);
        
        /// <summary>
        /// column_ref : full_column_name 
        /// </summary>
        void VisitColumnRef(AstColumnRef.AstColumnRef1 a);
        
        /// <summary>
        /// column_ref : local_id 
        /// </summary>
        void VisitColumnRef(AstColumnRef.AstColumnRef2 a);
        
        /// <summary>
        /// update_operator : EQUAL 
        /// </summary>
        void VisitUpdateOperator(AstUpdateOperator.AstUpdateOperator1 a);
        
        /// <summary>
        /// update_operator : assignment_operator 
        /// </summary>
        void VisitUpdateOperator(AstUpdateOperator.AstUpdateOperator2 a);
        
        /// <summary>
        /// update_elem_merge : column_ref update_operator expression 
        /// </summary>
        void VisitUpdateElemMerge(AstUpdateElemMerge.AstUpdateElemMerge1 a);
        
        /// <summary>
        /// update_elem_merge : udt_column_id DOT method_id LR_BRACKET expression_list RR_BRACKET 
        /// </summary>
        void VisitUpdateElemMerge(AstUpdateElemMerge.AstUpdateElemMerge2 a);
        
        /// <summary>
        /// search_condition : NOT* sub_search_condition 
        /// </summary>
        void VisitSearchCondition(AstSearchCondition.AstSearchCondition1 a);
        
        /// <summary>
        /// search_condition : left=search_condition and_or right=search_condition 
        /// </summary>
        void VisitSearchCondition(AstSearchCondition.AstSearchCondition2 a);
        
        /// <summary>
        /// sub_search_condition : predicate_expr 
        /// </summary>
        void VisitSubSearchCondition(AstSubSearchCondition.AstSubSearchCondition1 a);
        
        /// <summary>
        /// sub_search_condition : LR_BRACKET search_condition RR_BRACKET 
        /// </summary>
        void VisitSubSearchCondition(AstSubSearchCondition.AstSubSearchCondition2 a);
        
        /// <summary>
        /// predicate_expr : EXISTS LR_BRACKET subquery RR_BRACKET 
        /// </summary>
        void VisitPredicateExpr(AstPredicateExpr.AstPredicateExpr1 a);
        
        /// <summary>
        /// predicate_expr : freetext_predicate 
        /// </summary>
        void VisitPredicateExpr(AstPredicateExpr.AstPredicateExpr2 a);
        
        /// <summary>
        /// predicate_expr : predicate_binary 
        /// </summary>
        void VisitPredicateExpr(AstPredicateExpr.AstPredicateExpr3 a);
        
        /// <summary>
        /// predicate_expr : predicate_multi_assign 
        /// </summary>
        void VisitPredicateExpr(AstPredicateExpr.AstPredicateExpr4 a);
        
        /// <summary>
        /// predicate_expr : expression comparison_operator all_some_any LR_BRACKET subquery RR_BRACKET 
        /// </summary>
        void VisitPredicateExpr(AstPredicateExpr.AstPredicateExpr5 a);
        
        /// <summary>
        /// predicate_expr : predicate_tier 
        /// </summary>
        void VisitPredicateExpr(AstPredicateExpr.AstPredicateExpr6 a);
        
        /// <summary>
        /// predicate_expr : predicate_not_in 
        /// </summary>
        void VisitPredicateExpr(AstPredicateExpr.AstPredicateExpr7 a);
        
        /// <summary>
        /// predicate_expr : predicate_not_like 
        /// </summary>
        void VisitPredicateExpr(AstPredicateExpr.AstPredicateExpr8 a);
        
        /// <summary>
        /// predicate_expr : expression IS null_notnull 
        /// </summary>
        void VisitPredicateExpr(AstPredicateExpr.AstPredicateExpr9 a);
        
        /// <summary>
        /// predicate_multi_assign : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPredicateMultiAssign(AstPredicateMultiAssign a);
        
        /// <summary>
        /// predicate_binary : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPredicateBinary(AstPredicateBinary a);
        
        /// <summary>
        /// predicate_tier : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPredicateTier(AstPredicateTier a);
        
        /// <summary>
        /// predicate_not_like : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPredicateNotLike(AstPredicateNotLike a);
        
        /// <summary>
        /// predicate_not_in : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPredicateNotIn(AstPredicateNotIn a);
        
        /// <summary>
        /// query_expression : query_specification select_order_by_clause? unions=sql_unions? 
        /// </summary>
        void VisitQueryExpression(AstQueryExpression.AstQueryExpression1 a);
        
        /// <summary>
        /// query_expression : LR_BRACKET left=query_expression RR_BRACKET UNION ALL? right=query_expression 
        /// </summary>
        void VisitQueryExpression(AstQueryExpression.AstQueryExpression2 a);
        
        /// <summary>
        /// sql_unions : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSqlUnions(AstSqlUnions a);
        
        /// <summary>
        /// sql_union : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSqlUnion(AstSqlUnion a);
        
        /// <summary>
        /// sql_union_def : query_specification 
        /// </summary>
        void VisitSqlUnionDef(AstSqlUnionDef.AstSqlUnionDef1 a);
        
        /// <summary>
        /// sql_union_def : LR_BRACKET query_expression RR_BRACKET 
        /// </summary>
        void VisitSqlUnionDef(AstSqlUnionDef.AstSqlUnionDef2 a);
        
        /// <summary>
        /// query_specification : Bb.Generators.ModelMethod
        /// </summary>
        void VisitQuerySpecification(AstQuerySpecification a);
        
        /// <summary>
        /// top_clause : TOP top_percent WITH TIES 
        /// </summary>
        void VisitTopClause(AstTopClause.AstTopClause1 a);
        
        /// <summary>
        /// top_clause : TOP top_count WITH TIES 
        /// </summary>
        void VisitTopClause(AstTopClause.AstTopClause2 a);
        
        /// <summary>
        /// top_percent : percent_constant PERCENT 
        /// </summary>
        void VisitTopPercent(AstTopPercent.AstTopPercent1 a);
        
        /// <summary>
        /// top_percent : LR_BRACKET topper_expression=expression RR_BRACKET PERCENT 
        /// </summary>
        void VisitTopPercent(AstTopPercent.AstTopPercent2 a);
        
        /// <summary>
        /// percent_constant : real 
        /// </summary>
        void VisitPercentConstant(AstPercentConstant.AstPercentConstant1 a);
        
        /// <summary>
        /// percent_constant : float 
        /// </summary>
        void VisitPercentConstant(AstPercentConstant.AstPercentConstant2 a);
        
        /// <summary>
        /// percent_constant : decimal 
        /// </summary>
        void VisitPercentConstant(AstPercentConstant.AstPercentConstant3 a);
        
        /// <summary>
        /// top_count : count_constant=decimal 
        /// </summary>
        void VisitTopCount(AstTopCount.AstTopCount1 a);
        
        /// <summary>
        /// top_count : LR_BRACKET topcount_expression=expression RR_BRACKET 
        /// </summary>
        void VisitTopCount(AstTopCount.AstTopCount2 a);
        
        /// <summary>
        /// order_by_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOrderByClause(AstOrderByClause a);
        
        /// <summary>
        /// select_order_by_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSelectOrderByClause(AstSelectOrderByClause a);
        
        /// <summary>
        /// for_clause : FOR BROWSE 
        /// </summary>
        void VisitForClause(AstForClause.AstForClause1 a);
        
        /// <summary>
        /// for_clause : for_clause_xml_raw 
        /// </summary>
        void VisitForClause(AstForClause.AstForClause2 a);
        
        /// <summary>
        /// for_clause : FOR XML EXPLICIT xml_common_directives? COMMA XMLDATA 
        /// </summary>
        void VisitForClause(AstForClause.AstForClause3 a);
        
        /// <summary>
        /// for_clause : FOR XML PATH LR_BRACKET stringtext RR_BRACKET xml_common_directives? COMMA ELEMENTS absent_xsinil? 
        /// </summary>
        void VisitForClause(AstForClause.AstForClause4 a);
        
        /// <summary>
        /// for_clause : for_clause_json 
        /// </summary>
        void VisitForClause(AstForClause.AstForClause5 a);
        
        /// <summary>
        /// xml_common_directive : BINARY_KEYWORD BASE64 
        /// </summary>
        void VisitXmlCommonDirective(AstXmlCommonDirective.AstXmlCommonDirective1 a);
        
        /// <summary>
        /// xml_common_directive : TYPE 
        /// </summary>
        void VisitXmlCommonDirective(AstXmlCommonDirective.AstXmlCommonDirective2 a);
        
        /// <summary>
        /// xml_common_directive : ROOTWORD LR_BRACKET stringtext RR_BRACKET 
        /// </summary>
        void VisitXmlCommonDirective(AstXmlCommonDirective.AstXmlCommonDirective3 a);
        
        /// <summary>
        /// for_clause_xml_raw : Bb.Generators.ModelMethod
        /// </summary>
        void VisitForClauseXmlRaw(AstForClauseXmlRaw a);
        
        /// <summary>
        /// for_clause_json : Bb.Generators.ModelMethod
        /// </summary>
        void VisitForClauseJson(AstForClauseJson a);
        
        /// <summary>
        /// clause_json_info : ROOTWORD LR_BRACKET stringtext RR_BRACKET 
        /// </summary>
        void VisitClauseJsonInfo(AstClauseJsonInfo.AstClauseJsonInfo1 a);
        
        /// <summary>
        /// clause_json_info : INCLUDE_NULL_VALUES 
        /// </summary>
        void VisitClauseJsonInfo(AstClauseJsonInfo.AstClauseJsonInfo2 a);
        
        /// <summary>
        /// clause_json_info : WITHOUT_ARRAY_WRAPPER 
        /// </summary>
        void VisitClauseJsonInfo(AstClauseJsonInfo.AstClauseJsonInfo3 a);
        
        /// <summary>
        /// order_by_expression : order_by=expression ascending=ASC 
        /// </summary>
        void VisitOrderByExpression(AstOrderByExpression.AstOrderByExpression1 a);
        
        /// <summary>
        /// order_by_expression : order_by=expression descending=DESC 
        /// </summary>
        void VisitOrderByExpression(AstOrderByExpression.AstOrderByExpression2 a);
        
        /// <summary>
        /// grouping_sets_item : grouping_sets_list 
        /// </summary>
        void VisitGroupingSetsItem(AstGroupingSetsItem.AstGroupingSetsItem1 a);
        
        /// <summary>
        /// grouping_sets_item : LR_BRACKET grouping_sets_list? RR_BRACKET 
        /// </summary>
        void VisitGroupingSetsItem(AstGroupingSetsItem.AstGroupingSetsItem2 a);
        
        /// <summary>
        /// group_by_item : Bb.Generators.ModelMethod
        /// </summary>
        void VisitGroupByItem(AstGroupByItem a);
        
        /// <summary>
        /// update_option : FAST number_rows=decimal 
        /// </summary>
        void VisitUpdateOption(AstUpdateOption.AstUpdateOption1 a);
        
        /// <summary>
        /// update_option : MAXDOP number_of_processors=decimal 
        /// </summary>
        void VisitUpdateOption(AstUpdateOption.AstUpdateOption2 a);
        
        /// <summary>
        /// update_option : MAXRECURSION number_recursion=decimal 
        /// </summary>
        void VisitUpdateOption(AstUpdateOption.AstUpdateOption3 a);
        
        /// <summary>
        /// update_option : USE PLAN stringtext 
        /// </summary>
        void VisitUpdateOption(AstUpdateOption.AstUpdateOption4 a);
        
        /// <summary>
        /// update_option : OPTIMIZE FOR LR_BRACKET optimize_for_args RR_BRACKET 
        /// </summary>
        void VisitUpdateOption(AstUpdateOption.AstUpdateOption5 a);
        
        /// <summary>
        /// update_option : update_option_enum 
        /// </summary>
        void VisitUpdateOption(AstUpdateOption.AstUpdateOption6 a);
        
        /// <summary>
        /// optimize_for_arg : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOptimizeForArg(AstOptimizeForArg a);
        
        /// <summary>
        /// asterisk : star_asterisk 
        /// </summary>
        void VisitAsterisk(AstAsterisk.AstAsterisk1 a);
        
        /// <summary>
        /// asterisk : table_asterisk 
        /// </summary>
        void VisitAsterisk(AstAsterisk.AstAsterisk2 a);
        
        /// <summary>
        /// asterisk : updated_asterisk 
        /// </summary>
        void VisitAsterisk(AstAsterisk.AstAsterisk3 a);
        
        /// <summary>
        /// table_asterisk : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableAsterisk(AstTableAsterisk a);
        
        /// <summary>
        /// column_elem : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnElem(AstColumnElem a);
        
        /// <summary>
        /// column_elem_target : full_column_name 
        /// </summary>
        void VisitColumnElemTarget(AstColumnElemTarget.AstColumnElemTarget1 a);
        
        /// <summary>
        /// column_elem_target : DOLLAR IDENTITY 
        /// </summary>
        void VisitColumnElemTarget(AstColumnElemTarget.AstColumnElemTarget2 a);
        
        /// <summary>
        /// column_elem_target : DOLLAR ROWGUID 
        /// </summary>
        void VisitColumnElemTarget(AstColumnElemTarget.AstColumnElemTarget3 a);
        
        /// <summary>
        /// column_elem_target : NULL_ 
        /// </summary>
        void VisitColumnElemTarget(AstColumnElemTarget.AstColumnElemTarget4 a);
        
        /// <summary>
        /// udt_elem : udt_column_id DOT non_static_attr_id udt_method_arguments as_column_alias? 
        /// </summary>
        void VisitUdtElem(AstUdtElem.AstUdtElem1 a);
        
        /// <summary>
        /// udt_elem : udt_column_id DOUBLE_COLON static_attr_id udt_method_arguments? as_column_alias? 
        /// </summary>
        void VisitUdtElem(AstUdtElem.AstUdtElem2 a);
        
        /// <summary>
        /// expression_elem : leftAlias=column_alias eq=EQUAL leftAssignment=expression 
        /// </summary>
        void VisitExpressionElem(AstExpressionElem.AstExpressionElem1 a);
        
        /// <summary>
        /// expression_elem : expressionAs=expression as_column_alias? 
        /// </summary>
        void VisitExpressionElem(AstExpressionElem.AstExpressionElem2 a);
        
        /// <summary>
        /// select_list_elem : asterisk 
        /// </summary>
        void VisitSelectListElem(AstSelectListElem.AstSelectListElem1 a);
        
        /// <summary>
        /// select_list_elem : column_elem 
        /// </summary>
        void VisitSelectListElem(AstSelectListElem.AstSelectListElem2 a);
        
        /// <summary>
        /// select_list_elem : udt_elem 
        /// </summary>
        void VisitSelectListElem(AstSelectListElem.AstSelectListElem3 a);
        
        /// <summary>
        /// select_list_elem : expression_assign_elem 
        /// </summary>
        void VisitSelectListElem(AstSelectListElem.AstSelectListElem4 a);
        
        /// <summary>
        /// select_list_elem : expression_elem 
        /// </summary>
        void VisitSelectListElem(AstSelectListElem.AstSelectListElem5 a);
        
        /// <summary>
        /// expression_assign_elem : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExpressionAssignElem(AstExpressionAssignElem a);
        
        /// <summary>
        /// table_source : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableSource(AstTableSource a);
        
        /// <summary>
        /// table_source_item_joined : table_source_item joins=join_part* 
        /// </summary>
        void VisitTableSourceItemJoined(AstTableSourceItemJoined.AstTableSourceItemJoined1 a);
        
        /// <summary>
        /// table_source_item_joined : LR_BRACKET table_source_item_joined RR_BRACKET joins=join_part* 
        /// </summary>
        void VisitTableSourceItemJoined(AstTableSourceItemJoined.AstTableSourceItemJoined2 a);
        
        /// <summary>
        /// table_source_item : complete_table_ref deprecated_table_hint as_table_alias 
        /// </summary>
        void VisitTableSourceItem(AstTableSourceItem.AstTableSourceItem1 a);
        
        /// <summary>
        /// table_source_item : complete_table_ref as_table_alias? table_hints? 
        /// </summary>
        void VisitTableSourceItem(AstTableSourceItem.AstTableSourceItem2 a);
        
        /// <summary>
        /// table_source_item : rowset_function as_table_alias? 
        /// </summary>
        void VisitTableSourceItem(AstTableSourceItem.AstTableSourceItem3 a);
        
        /// <summary>
        /// table_source_item : LR_BRACKET derived_table RR_BRACKET as_table_alias_column? 
        /// </summary>
        void VisitTableSourceItem(AstTableSourceItem.AstTableSourceItem4 a);
        
        /// <summary>
        /// table_source_item : change_table as_table_alias? 
        /// </summary>
        void VisitTableSourceItem(AstTableSourceItem.AstTableSourceItem5 a);
        
        /// <summary>
        /// table_source_item : nodes_method as_table_alias_column? 
        /// </summary>
        void VisitTableSourceItem(AstTableSourceItem.AstTableSourceItem6 a);
        
        /// <summary>
        /// table_source_item : function_call as_table_alias_column? 
        /// </summary>
        void VisitTableSourceItem(AstTableSourceItem.AstTableSourceItem7 a);
        
        /// <summary>
        /// table_source_item : loc_id=local_id as_table_alias? 
        /// </summary>
        void VisitTableSourceItem(AstTableSourceItem.AstTableSourceItem8 a);
        
        /// <summary>
        /// table_source_item : loc_id_call=local_id DOT loc_fcall=function_call as_table_alias_column? 
        /// </summary>
        void VisitTableSourceItem(AstTableSourceItem.AstTableSourceItem9 a);
        
        /// <summary>
        /// table_source_item : open_xml 
        /// </summary>
        void VisitTableSourceItem(AstTableSourceItem.AstTableSourceItem10 a);
        
        /// <summary>
        /// table_source_item : open_json 
        /// </summary>
        void VisitTableSourceItem(AstTableSourceItem.AstTableSourceItem11 a);
        
        /// <summary>
        /// table_source_item : DOUBLE_COLON oldstyle_fcall=function_call as_table_alias? 
        /// </summary>
        void VisitTableSourceItem(AstTableSourceItem.AstTableSourceItem12 a);
        
        /// <summary>
        /// as_table_alias_column : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAsTableAliasColumn(AstAsTableAliasColumn a);
        
        /// <summary>
        /// table_hints : with_table_hints 
        /// </summary>
        void VisitTableHints(AstTableHints.AstTableHints1 a);
        
        /// <summary>
        /// table_hints : deprecated_table_hint 
        /// </summary>
        void VisitTableHints(AstTableHints.AstTableHints2 a);
        
        /// <summary>
        /// table_hints : sybase_legacy_hints 
        /// </summary>
        void VisitTableHints(AstTableHints.AstTableHints3 a);
        
        /// <summary>
        /// open_xml : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOpenXml(AstOpenXml a);
        
        /// <summary>
        /// open_json : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOpenJson(AstOpenJson a);
        
        /// <summary>
        /// json_column_declaration : Bb.Generators.ModelMethod
        /// </summary>
        void VisitJsonColumnDeclaration(AstJsonColumnDeclaration a);
        
        /// <summary>
        /// column_declaration : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnDeclaration(AstColumnDeclaration a);
        
        /// <summary>
        /// change_table : change_table_changes 
        /// </summary>
        void VisitChangeTable(AstChangeTable.AstChangeTable1 a);
        
        /// <summary>
        /// change_table : change_table_version 
        /// </summary>
        void VisitChangeTable(AstChangeTable.AstChangeTable2 a);
        
        /// <summary>
        /// change_table_changes : CHANGETABLE LR_BRACKET CHANGES changetable=full_table_ref COMMA NULL_ RR_BRACKET 
        /// </summary>
        void VisitChangeTableChanges(AstChangeTableChanges.AstChangeTableChanges1 a);
        
        /// <summary>
        /// change_table_changes : CHANGETABLE LR_BRACKET CHANGES changetable=full_table_ref COMMA decimal_local_id RR_BRACKET 
        /// </summary>
        void VisitChangeTableChanges(AstChangeTableChanges.AstChangeTableChanges2 a);
        
        void VisitChangeTableVersion(AstChangeTableVersion a);
        
        /// <summary>
        /// join_part : join_on 
        /// </summary>
        void VisitJoinPart(AstJoinPart.AstJoinPart1 a);
        
        /// <summary>
        /// join_part : cross_join 
        /// </summary>
        void VisitJoinPart(AstJoinPart.AstJoinPart2 a);
        
        /// <summary>
        /// join_part : apply_enum 
        /// </summary>
        void VisitJoinPart(AstJoinPart.AstJoinPart3 a);
        
        /// <summary>
        /// join_part : pivot_join 
        /// </summary>
        void VisitJoinPart(AstJoinPart.AstJoinPart4 a);
        
        /// <summary>
        /// join_part : unpivot_join 
        /// </summary>
        void VisitJoinPart(AstJoinPart.AstJoinPart5 a);
        
        /// <summary>
        /// join_on : Bb.Generators.ModelMethod
        /// </summary>
        void VisitJoinOn(AstJoinOn a);
        
        /// <summary>
        /// cross_join : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCrossJoin(AstCrossJoin a);
        
        /// <summary>
        /// apply_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitApplyEnum(AstApplyEnum a);
        
        /// <summary>
        /// pivot_join : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPivotJoin(AstPivotJoin a);
        
        /// <summary>
        /// unpivot_join : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUnpivotJoin(AstUnpivotJoin a);
        
        /// <summary>
        /// pivot_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPivotClause(AstPivotClause a);
        
        /// <summary>
        /// unpivot_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUnpivotClause(AstUnpivotClause a);
        
        /// <summary>
        /// rowset_function : OPENROWSET LR_BRACKET providerName=stringtext COMMA connectionString=stringtext COMMA sql=stringtext RR_BRACKET 
        /// </summary>
        void VisitRowsetFunction(AstRowsetFunction.AstRowsetFunction1 a);
        
        /// <summary>
        /// rowset_function : OPENROWSET LR_BRACKET BULK data_file=stringtext COMMA buk_extended_options RR_BRACKET 
        /// </summary>
        void VisitRowsetFunction(AstRowsetFunction.AstRowsetFunction2 a);
        
        /// <summary>
        /// buk_extended_options : bulk_options 
        /// </summary>
        void VisitBukExtendedOptions(AstBukExtendedOptions.AstBukExtendedOptions1 a);
        
        /// <summary>
        /// buk_extended_options : id_ 
        /// </summary>
        void VisitBukExtendedOptions(AstBukExtendedOptions.AstBukExtendedOptions2 a);
        
        /// <summary>
        /// bulk_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBulkOption(AstBulkOption a);
        
        /// <summary>
        /// derived_table : subquery 
        /// </summary>
        void VisitDerivedTable(AstDerivedTable.AstDerivedTable1 a);
        
        /// <summary>
        /// derived_table : LR_BRACKET subqueries RR_BRACKET 
        /// </summary>
        void VisitDerivedTable(AstDerivedTable.AstDerivedTable2 a);
        
        /// <summary>
        /// derived_table : table_value_constructor 
        /// </summary>
        void VisitDerivedTable(AstDerivedTable.AstDerivedTable3 a);
        
        /// <summary>
        /// derived_table : LR_BRACKET table_value_constructor RR_BRACKET 
        /// </summary>
        void VisitDerivedTable(AstDerivedTable.AstDerivedTable4 a);
        
        /// <summary>
        /// subqueries : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSubqueries(AstSubqueries a);
        
        /// <summary>
        /// function_call : ranking_windowed_function 
        /// </summary>
        void VisitFunctionCall(AstFunctionCall.AstFunctionCall1 a);
        
        /// <summary>
        /// function_call : aggregate_windowed_function 
        /// </summary>
        void VisitFunctionCall(AstFunctionCall.AstFunctionCall2 a);
        
        /// <summary>
        /// function_call : analytic_windowed_function 
        /// </summary>
        void VisitFunctionCall(AstFunctionCall.AstFunctionCall3 a);
        
        /// <summary>
        /// function_call : built_in_functions 
        /// </summary>
        void VisitFunctionCall(AstFunctionCall.AstFunctionCall4 a);
        
        /// <summary>
        /// function_call : scalar_function_name LR_BRACKET expression_list? RR_BRACKET 
        /// </summary>
        void VisitFunctionCall(AstFunctionCall.AstFunctionCall5 a);
        
        /// <summary>
        /// function_call : freetext_function 
        /// </summary>
        void VisitFunctionCall(AstFunctionCall.AstFunctionCall6 a);
        
        /// <summary>
        /// function_call : partition_function 
        /// </summary>
        void VisitFunctionCall(AstFunctionCall.AstFunctionCall7 a);
        
        /// <summary>
        /// function_call : hierarchyid_static_method 
        /// </summary>
        void VisitFunctionCall(AstFunctionCall.AstFunctionCall8 a);
        
        /// <summary>
        /// partition_function : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPartitionFunction(AstPartitionFunction a);
        
        /// <summary>
        /// freetext_function : containstable_freetexttable LR_BRACKET freetext_table_andcolumn_names COMMA expression_language COMMA expression RR_BRACKET 
        /// </summary>
        void VisitFreetextFunction(AstFreetextFunction.AstFreetextFunction1 a);
        
        /// <summary>
        /// freetext_function : semantic_table LR_BRACKET freetext_table_andcolumn_names COMMA expression RR_BRACKET 
        /// </summary>
        void VisitFreetextFunction(AstFreetextFunction.AstFreetextFunction2 a);
        
        /// <summary>
        /// freetext_function : SEMANTICSIMILARITYDETAILSTABLE LR_BRACKET full_table_ref COMMA name1=full_column_name COMMA expr1=expression COMMA name2=full_column_name COMMA expr2=expression RR_BRACKET 
        /// </summary>
        void VisitFreetextFunction(AstFreetextFunction.AstFreetextFunction3 a);
        
        /// <summary>
        /// freetext_predicate : CONTAINS LR_BRACKET predicate_contains COMMA rule=expression RR_BRACKET 
        /// </summary>
        void VisitFreetextPredicate(AstFreetextPredicate.AstFreetextPredicate1 a);
        
        /// <summary>
        /// freetext_predicate : FREETEXT LR_BRACKET freetext_table_andcolumn_names COMMA expression_language RR_BRACKET 
        /// </summary>
        void VisitFreetextPredicate(AstFreetextPredicate.AstFreetextPredicate2 a);
        
        /// <summary>
        /// predicate_contains : full_column_name 
        /// </summary>
        void VisitPredicateContains(AstPredicateContains.AstPredicateContains1 a);
        
        /// <summary>
        /// predicate_contains : full_column_names 
        /// </summary>
        void VisitPredicateContains(AstPredicateContains.AstPredicateContains2 a);
        
        /// <summary>
        /// predicate_contains : STAR 
        /// </summary>
        void VisitPredicateContains(AstPredicateContains.AstPredicateContains3 a);
        
        /// <summary>
        /// predicate_contains : PROPERTY LR_BRACKET full_column_name COMMA property=expression RR_BRACKET 
        /// </summary>
        void VisitPredicateContains(AstPredicateContains.AstPredicateContains4 a);
        
        /// <summary>
        /// freetext_table_andcolumn_names : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFreetextTableAndcolumnNames(AstFreetextTableAndcolumnNames a);
        
        /// <summary>
        /// built_in_functions : APP_NAME LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions1 a);
        
        /// <summary>
        /// built_in_functions : APPLOCK_MODE LR_BRACKET database_principal=expression COMMA resource_name=expression COMMA lock_owner=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions2 a);
        
        /// <summary>
        /// built_in_functions : APPLOCK_TEST LR_BRACKET database_principal=expression COMMA resource_name=expression COMMA lockmode=expression COMMA lock_owner=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions3 a);
        
        /// <summary>
        /// built_in_functions : ASSEMBLYPROPERTY LR_BRACKET assemblyName=expression COMMA propertyName=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions4 a);
        
        /// <summary>
        /// built_in_functions : COL_LENGTH LR_BRACKET table=expression COMMA column=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions5 a);
        
        /// <summary>
        /// built_in_functions : COL_NAME LR_BRACKET table=expression COMMA column=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions6 a);
        
        /// <summary>
        /// built_in_functions : COLUMNPROPERTY LR_BRACKET idExpression=expression COMMA column=expression COMMA property=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions7 a);
        
        /// <summary>
        /// built_in_functions : DATABASEPROPERTYEX LR_BRACKET database=expression COMMA property=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions8 a);
        
        /// <summary>
        /// built_in_functions : DB_ID LR_BRACKET databaseName=expression? RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions9 a);
        
        /// <summary>
        /// built_in_functions : DB_NAME LR_BRACKET database=expression? RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions10 a);
        
        /// <summary>
        /// built_in_functions : FILE_ID LR_BRACKET file_name=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions11 a);
        
        /// <summary>
        /// built_in_functions : FILE_IDEX LR_BRACKET file_name=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions12 a);
        
        /// <summary>
        /// built_in_functions : FILE_NAME LR_BRACKET file=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions13 a);
        
        /// <summary>
        /// built_in_functions : FILEGROUP_ID LR_BRACKET filegroup_name=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions14 a);
        
        /// <summary>
        /// built_in_functions : FILEGROUP_NAME LR_BRACKET filegroup_id=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions15 a);
        
        /// <summary>
        /// built_in_functions : FILEGROUPPROPERTY LR_BRACKET filegroup=expression COMMA property=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions16 a);
        
        /// <summary>
        /// built_in_functions : FILEPROPERTY LR_BRACKET file=expression COMMA property=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions17 a);
        
        /// <summary>
        /// built_in_functions : FILEPROPERTYEX LR_BRACKET name=expression COMMA property=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions18 a);
        
        /// <summary>
        /// built_in_functions : FULLTEXTCATALOGPROPERTY LR_BRACKET catalog=expression COMMA property=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions19 a);
        
        /// <summary>
        /// built_in_functions : FULLTEXTSERVICEPROPERTY LR_BRACKET property=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions20 a);
        
        /// <summary>
        /// built_in_functions : INDEX_COL LR_BRACKET tableOrView=expression COMMA index=expression COMMA key=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions21 a);
        
        /// <summary>
        /// built_in_functions : INDEXKEY_PROPERTY LR_BRACKET object=expression COMMA index=expression COMMA key=expression COMMA property=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions22 a);
        
        /// <summary>
        /// built_in_functions : INDEXPROPERTY LR_BRACKET object=expression COMMA index_or_statistics=expression COMMA property=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions23 a);
        
        /// <summary>
        /// built_in_functions : NEXT VALUE FOR sequenceName=full_table_ref OVER LR_BRACKET order_by_clause RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions24 a);
        
        /// <summary>
        /// built_in_functions : OBJECT_DEFINITION LR_BRACKET object=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions25 a);
        
        /// <summary>
        /// built_in_functions : OBJECT_ID LR_BRACKET objectName=expression COMMA object_type=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions26 a);
        
        /// <summary>
        /// built_in_functions : OBJECT_NAME LR_BRACKET object=expression COMMA database=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions27 a);
        
        /// <summary>
        /// built_in_functions : OBJECT_SCHEMA_NAME LR_BRACKET target_object=expression COMMA database=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions28 a);
        
        /// <summary>
        /// built_in_functions : OBJECTPROPERTY LR_BRACKET idExpression=expression COMMA property=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions29 a);
        
        /// <summary>
        /// built_in_functions : OBJECTPROPERTYEX LR_BRACKET idExpression=expression COMMA property=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions30 a);
        
        /// <summary>
        /// built_in_functions : ORIGINAL_DB_NAME LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions31 a);
        
        /// <summary>
        /// built_in_functions : PARSENAME LR_BRACKET objectName=expression COMMA object_piece=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions32 a);
        
        /// <summary>
        /// built_in_functions : SCHEMA_ID LR_BRACKET schemaName=expression? RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions33 a);
        
        /// <summary>
        /// built_in_functions : SCHEMA_NAME LR_BRACKET schemaId=expression? RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions34 a);
        
        /// <summary>
        /// built_in_functions : SCOPE_IDENTITY LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions35 a);
        
        /// <summary>
        /// built_in_functions : SERVERPROPERTY LR_BRACKET property=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions36 a);
        
        /// <summary>
        /// built_in_functions : STATS_DATE LR_BRACKET target_object=expression COMMA stats=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions37 a);
        
        /// <summary>
        /// built_in_functions : TYPE_ID LR_BRACKET type_name=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions38 a);
        
        /// <summary>
        /// built_in_functions : TYPE_NAME LR_BRACKET type=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions39 a);
        
        /// <summary>
        /// built_in_functions : TYPEPROPERTY LR_BRACKET type=expression COMMA property=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions40 a);
        
        /// <summary>
        /// built_in_functions : ASCII LR_BRACKET character_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions41 a);
        
        /// <summary>
        /// built_in_functions : CHAR LR_BRACKET integer_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions42 a);
        
        /// <summary>
        /// built_in_functions : CHARINDEX LR_BRACKET expressionToFind=expression COMMA expressionToSearch=expression COMMA start_location=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions43 a);
        
        /// <summary>
        /// built_in_functions : CONCAT LR_BRACKET expressions RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions44 a);
        
        /// <summary>
        /// built_in_functions : CONCAT_WS LR_BRACKET expressions RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions45 a);
        
        /// <summary>
        /// built_in_functions : DIFFERENCE LR_BRACKET character_expression_1=expression COMMA character_expression_2=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions46 a);
        
        /// <summary>
        /// built_in_functions : FORMAT LR_BRACKET expressions RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions47 a);
        
        /// <summary>
        /// built_in_functions : LEFT LR_BRACKET character_expression=expression COMMA integer_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions48 a);
        
        /// <summary>
        /// built_in_functions : LEN LR_BRACKET string_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions49 a);
        
        /// <summary>
        /// built_in_functions : LOWER LR_BRACKET character_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions50 a);
        
        /// <summary>
        /// built_in_functions : LTRIM LR_BRACKET character_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions51 a);
        
        /// <summary>
        /// built_in_functions : NCHAR LR_BRACKET integer_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions52 a);
        
        /// <summary>
        /// built_in_functions : PATINDEX LR_BRACKET pattern=expression COMMA string_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions53 a);
        
        /// <summary>
        /// built_in_functions : QUOTENAME LR_BRACKET character_string=expression COMMA quote_character=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions54 a);
        
        /// <summary>
        /// built_in_functions : REPLACE LR_BRACKET input=expression COMMA replacing=expression COMMA with=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions55 a);
        
        /// <summary>
        /// built_in_functions : REPLICATE LR_BRACKET string_expression=expression COMMA integer_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions56 a);
        
        /// <summary>
        /// built_in_functions : REVERSE LR_BRACKET string_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions57 a);
        
        /// <summary>
        /// built_in_functions : RIGHT LR_BRACKET character_expression=expression COMMA integer_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions58 a);
        
        /// <summary>
        /// built_in_functions : RTRIM LR_BRACKET character_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions59 a);
        
        /// <summary>
        /// built_in_functions : SOUNDEX LR_BRACKET character_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions60 a);
        
        /// <summary>
        /// built_in_functions : SPACE_KEYWORD LR_BRACKET integer_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions61 a);
        
        /// <summary>
        /// built_in_functions : STR LR_BRACKET float_expression=expression COMMA length_expression=expression COMMA decimal_expr=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions62 a);
        
        /// <summary>
        /// built_in_functions : STRING_AGG LR_BRACKET expr=expression COMMA separator=expression RR_BRACKET WITHIN GROUP LR_BRACKET order_by_clause RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions63 a);
        
        /// <summary>
        /// built_in_functions : STRING_ESCAPE LR_BRACKET text_=expression COMMA type_=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions64 a);
        
        /// <summary>
        /// built_in_functions : STUFF LR_BRACKET str=expression COMMA from=decimal COMMA to=decimal COMMA str_with=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions65 a);
        
        /// <summary>
        /// built_in_functions : SUBSTRING LR_BRACKET string_expression=expression COMMA start_=expression COMMA length=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions66 a);
        
        /// <summary>
        /// built_in_functions : TRANSLATE LR_BRACKET inputString=expression COMMA characters=expression COMMA translations=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions67 a);
        
        /// <summary>
        /// built_in_functions : TRIM LR_BRACKET characters=expression FROM string_=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions68 a);
        
        /// <summary>
        /// built_in_functions : UNICODE LR_BRACKET ncharacter_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions69 a);
        
        /// <summary>
        /// built_in_functions : UPPER LR_BRACKET character_expression=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions70 a);
        
        /// <summary>
        /// built_in_functions : BINARY_CHECKSUM LR_BRACKET expression_or_star RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions71 a);
        
        /// <summary>
        /// built_in_functions : CHECKSUM LR_BRACKET expression_or_star RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions72 a);
        
        /// <summary>
        /// built_in_functions : COMPRESS LR_BRACKET expr=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions73 a);
        
        /// <summary>
        /// built_in_functions : CONNECTIONPROPERTY LR_BRACKET cnx_property=stringtext RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions74 a);
        
        /// <summary>
        /// built_in_functions : CONTEXT_INFO LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions75 a);
        
        /// <summary>
        /// built_in_functions : CURRENT_REQUEST_ID LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions76 a);
        
        /// <summary>
        /// built_in_functions : CURRENT_TRANSACTION_ID LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions77 a);
        
        /// <summary>
        /// built_in_functions : DECOMPRESS LR_BRACKET expr=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions78 a);
        
        /// <summary>
        /// built_in_functions : ERROR_LINE LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions79 a);
        
        /// <summary>
        /// built_in_functions : ERROR_MESSAGE LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions80 a);
        
        /// <summary>
        /// built_in_functions : ERROR_NUMBER LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions81 a);
        
        /// <summary>
        /// built_in_functions : ERROR_PROCEDURE LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions82 a);
        
        /// <summary>
        /// built_in_functions : ERROR_SEVERITY LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions83 a);
        
        /// <summary>
        /// built_in_functions : ERROR_STATE LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions84 a);
        
        /// <summary>
        /// built_in_functions : FORMATMESSAGE LR_BRACKET format_argument COMMA expressions RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions85 a);
        
        /// <summary>
        /// built_in_functions : GET_FILESTREAM_TRANSACTION_CONTEXT LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions86 a);
        
        /// <summary>
        /// built_in_functions : GETANSINULL LR_BRACKET database_name=stringtext RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions87 a);
        
        /// <summary>
        /// built_in_functions : HOST_ID LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions88 a);
        
        /// <summary>
        /// built_in_functions : HOST_NAME LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions89 a);
        
        /// <summary>
        /// built_in_functions : ISNULL LR_BRACKET left=expression COMMA right=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions90 a);
        
        /// <summary>
        /// built_in_functions : ISNUMERIC LR_BRACKET expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions91 a);
        
        /// <summary>
        /// built_in_functions : NEWID LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions92 a);
        
        /// <summary>
        /// built_in_functions : NEWSEQUENTIALID LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions93 a);
        
        /// <summary>
        /// built_in_functions : ROWCOUNT_BIG LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions94 a);
        
        /// <summary>
        /// built_in_functions : SESSION_CONTEXT LR_BRACKET session_key=stringtext RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions95 a);
        
        /// <summary>
        /// built_in_functions : XACT_STATE LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions96 a);
        
        /// <summary>
        /// built_in_functions : CAST LR_BRACKET expression AS data_type RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions97 a);
        
        /// <summary>
        /// built_in_functions : TRY_CAST LR_BRACKET expression AS data_type RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions98 a);
        
        /// <summary>
        /// built_in_functions : CONVERT LR_BRACKET convert_data_type=data_type COMMA expression2 RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions99 a);
        
        /// <summary>
        /// built_in_functions : COALESCE LR_BRACKET expression_list RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions100 a);
        
        /// <summary>
        /// built_in_functions : CURRENT_DATE LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions101 a);
        
        /// <summary>
        /// built_in_functions : CURRENT_TIMESTAMP 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions102 a);
        
        /// <summary>
        /// built_in_functions : CURRENT_USER 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions103 a);
        
        /// <summary>
        /// built_in_functions : DATEADD LR_BRACKET datepart=id_simple COMMA number=expression COMMA date=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions104 a);
        
        /// <summary>
        /// built_in_functions : DATEDIFF LR_BRACKET datepart=id_simple COMMA date_first=expression COMMA date_second=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions105 a);
        
        /// <summary>
        /// built_in_functions : DATENAME LR_BRACKET datepart=id_simple COMMA date=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions106 a);
        
        /// <summary>
        /// built_in_functions : DATEPART LR_BRACKET datepart=id_simple COMMA date=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions107 a);
        
        /// <summary>
        /// built_in_functions : GETDATE LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions108 a);
        
        /// <summary>
        /// built_in_functions : GETUTCDATE LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions109 a);
        
        /// <summary>
        /// built_in_functions : IDENTITY LR_BRACKET data_type COMMA seed=decimal COMMA increment=decimal RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions110 a);
        
        /// <summary>
        /// built_in_functions : NULLIF LR_BRACKET left=expression COMMA right=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions111 a);
        
        /// <summary>
        /// built_in_functions : SESSION_USER 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions112 a);
        
        /// <summary>
        /// built_in_functions : SYSTEM_USER 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions113 a);
        
        /// <summary>
        /// built_in_functions : USER 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions114 a);
        
        /// <summary>
        /// built_in_functions : PARSE LR_BRACKET str=expression AS data_type USING culture=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions115 a);
        
        /// <summary>
        /// built_in_functions : xml_data_type_methods 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions116 a);
        
        /// <summary>
        /// built_in_functions : IIF LR_BRACKET cond=search_condition COMMA left=expression COMMA right=expression RR_BRACKET 
        /// </summary>
        void VisitBuiltInFunctions(AstBuiltInFunctions.AstBuiltInFunctions117 a);
        
        /// <summary>
        /// expression_or_star : STAR 
        /// </summary>
        void VisitExpressionOrStar(AstExpressionOrStar.AstExpressionOrStar1 a);
        
        /// <summary>
        /// expression_or_star : expressions 
        /// </summary>
        void VisitExpressionOrStar(AstExpressionOrStar.AstExpressionOrStar2 a);
        
        /// <summary>
        /// format_argument : decimal 
        /// </summary>
        void VisitFormatArgument(AstFormatArgument.AstFormatArgument1 a);
        
        /// <summary>
        /// format_argument : stringtext 
        /// </summary>
        void VisitFormatArgument(AstFormatArgument.AstFormatArgument2 a);
        
        /// <summary>
        /// format_argument : local_id 
        /// </summary>
        void VisitFormatArgument(AstFormatArgument.AstFormatArgument3 a);
        
        /// <summary>
        /// xml_data_type_methods : value_method 
        /// </summary>
        void VisitXmlDataTypeMethods(AstXmlDataTypeMethods.AstXmlDataTypeMethods1 a);
        
        /// <summary>
        /// xml_data_type_methods : query_method 
        /// </summary>
        void VisitXmlDataTypeMethods(AstXmlDataTypeMethods.AstXmlDataTypeMethods2 a);
        
        /// <summary>
        /// xml_data_type_methods : exist_method 
        /// </summary>
        void VisitXmlDataTypeMethods(AstXmlDataTypeMethods.AstXmlDataTypeMethods3 a);
        
        /// <summary>
        /// xml_data_type_methods : modify_method 
        /// </summary>
        void VisitXmlDataTypeMethods(AstXmlDataTypeMethods.AstXmlDataTypeMethods4 a);
        
        /// <summary>
        /// value_method : loc=local_id DOT call=value_call 
        /// </summary>
        void VisitValueMethod(AstValueMethod.AstValueMethod1 a);
        
        /// <summary>
        /// value_method : value=full_column_name DOT call=value_call 
        /// </summary>
        void VisitValueMethod(AstValueMethod.AstValueMethod2 a);
        
        /// <summary>
        /// value_method : eventdata=EVENTDATA LR_BRACKET RR_BRACKET DOT call=value_call 
        /// </summary>
        void VisitValueMethod(AstValueMethod.AstValueMethod3 a);
        
        /// <summary>
        /// value_method : query=query_method DOT call=value_call 
        /// </summary>
        void VisitValueMethod(AstValueMethod.AstValueMethod4 a);
        
        /// <summary>
        /// value_method : LR_BRACKET subquery RR_BRACKET DOT call=value_call 
        /// </summary>
        void VisitValueMethod(AstValueMethod.AstValueMethod5 a);
        
        void VisitValueCall(AstValueCall a);
        
        /// <summary>
        /// query_method : loc=local_id DOT call=query_call 
        /// </summary>
        void VisitQueryMethod(AstQueryMethod.AstQueryMethod1 a);
        
        /// <summary>
        /// query_method : value=full_column_name DOT call=query_call 
        /// </summary>
        void VisitQueryMethod(AstQueryMethod.AstQueryMethod2 a);
        
        /// <summary>
        /// query_method : LR_BRACKET subquery RR_BRACKET DOT call=query_call 
        /// </summary>
        void VisitQueryMethod(AstQueryMethod.AstQueryMethod3 a);
        
        void VisitQueryCall(AstQueryCall a);
        
        /// <summary>
        /// exist_method : loc=local_id DOT call=exist_call 
        /// </summary>
        void VisitExistMethod(AstExistMethod.AstExistMethod1 a);
        
        /// <summary>
        /// exist_method : value=full_column_name DOT call=exist_call 
        /// </summary>
        void VisitExistMethod(AstExistMethod.AstExistMethod2 a);
        
        /// <summary>
        /// exist_method : LR_BRACKET subquery RR_BRACKET DOT call=exist_call 
        /// </summary>
        void VisitExistMethod(AstExistMethod.AstExistMethod3 a);
        
        void VisitExistCall(AstExistCall a);
        
        /// <summary>
        /// modify_method : loc=local_id DOT call=modify_call 
        /// </summary>
        void VisitModifyMethod(AstModifyMethod.AstModifyMethod1 a);
        
        /// <summary>
        /// modify_method : value=full_column_name DOT call=modify_call 
        /// </summary>
        void VisitModifyMethod(AstModifyMethod.AstModifyMethod2 a);
        
        /// <summary>
        /// modify_method : LR_BRACKET subquery RR_BRACKET DOT call=modify_call 
        /// </summary>
        void VisitModifyMethod(AstModifyMethod.AstModifyMethod3 a);
        
        void VisitModifyCall(AstModifyCall a);
        
        /// <summary>
        /// hierarchyid_call : GETANCESTOR LR_BRACKET n=expression RR_BRACKET 
        /// </summary>
        void VisitHierarchyidCall(AstHierarchyidCall.AstHierarchyidCall1 a);
        
        /// <summary>
        /// hierarchyid_call : GETDESCENDANT LR_BRACKET child1=expression COMMA child2=expression RR_BRACKET 
        /// </summary>
        void VisitHierarchyidCall(AstHierarchyidCall.AstHierarchyidCall2 a);
        
        /// <summary>
        /// hierarchyid_call : GETLEVEL LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitHierarchyidCall(AstHierarchyidCall.AstHierarchyidCall3 a);
        
        /// <summary>
        /// hierarchyid_call : ISDESCENDANTOF LR_BRACKET parent_=expression RR_BRACKET 
        /// </summary>
        void VisitHierarchyidCall(AstHierarchyidCall.AstHierarchyidCall4 a);
        
        /// <summary>
        /// hierarchyid_call : GETREPARENTEDVALUE LR_BRACKET oldroot=expression COMMA newroot=expression RR_BRACKET 
        /// </summary>
        void VisitHierarchyidCall(AstHierarchyidCall.AstHierarchyidCall5 a);
        
        /// <summary>
        /// hierarchyid_call : TOSTRING LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitHierarchyidCall(AstHierarchyidCall.AstHierarchyidCall6 a);
        
        /// <summary>
        /// hierarchyid_static_method : HIERARCHYID DOUBLE_COLON GETROOT LR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitHierarchyidStaticMethod(AstHierarchyidStaticMethod.AstHierarchyidStaticMethod1 a);
        
        /// <summary>
        /// hierarchyid_static_method : HIERARCHYID DOUBLE_COLON PARSE LR_BRACKET input=expression RR_BRACKET 
        /// </summary>
        void VisitHierarchyidStaticMethod(AstHierarchyidStaticMethod.AstHierarchyidStaticMethod2 a);
        
        /// <summary>
        /// nodes_method : loc=local_id DOT NODES LR_BRACKET xquery=stringtext RR_BRACKET 
        /// </summary>
        void VisitNodesMethod(AstNodesMethod.AstNodesMethod1 a);
        
        /// <summary>
        /// nodes_method : value=full_column_name DOT NODES LR_BRACKET xquery=stringtext RR_BRACKET 
        /// </summary>
        void VisitNodesMethod(AstNodesMethod.AstNodesMethod2 a);
        
        /// <summary>
        /// nodes_method : LR_BRACKET subquery RR_BRACKET DOT NODES LR_BRACKET xquery=stringtext RR_BRACKET 
        /// </summary>
        void VisitNodesMethod(AstNodesMethod.AstNodesMethod3 a);
        
        /// <summary>
        /// switch_section : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSwitchSection(AstSwitchSection a);
        
        /// <summary>
        /// switch_search_condition_section : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSwitchSearchConditionSection(AstSwitchSearchConditionSection a);
        
        /// <summary>
        /// as_column_alias : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAsColumnAlias(AstAsColumnAlias a);
        
        /// <summary>
        /// as_table_alias : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAsTableAlias(AstAsTableAlias a);
        
        /// <summary>
        /// table_alias : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableAlias(AstTableAlias a);
        
        /// <summary>
        /// with_table_hints : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWithTableHints(AstWithTableHints a);
        
        /// <summary>
        /// deprecated_table_hint : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDeprecatedTableHint(AstDeprecatedTableHint a);
        
        /// <summary>
        /// sybase_legacy_hints : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSybaseLegacyHints(AstSybaseLegacyHints a);
        
        /// <summary>
        /// sybase_legacy_hint : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSybaseLegacyHint(AstSybaseLegacyHint a);
        
        /// <summary>
        /// table_hint : NOEXPAND 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint1 a);
        
        /// <summary>
        /// table_hint : INDEX hint_index 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint2 a);
        
        /// <summary>
        /// table_hint : FORCESEEK LR_BRACKET index_value LR_BRACKET column_name_list RR_BRACKET RR_BRACKET 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint3 a);
        
        /// <summary>
        /// table_hint : FORCESCAN 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint4 a);
        
        /// <summary>
        /// table_hint : HOLDLOCK 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint5 a);
        
        /// <summary>
        /// table_hint : NOLOCK 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint6 a);
        
        /// <summary>
        /// table_hint : NOWAIT 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint7 a);
        
        /// <summary>
        /// table_hint : PAGLOCK 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint8 a);
        
        /// <summary>
        /// table_hint : READCOMMITTED 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint9 a);
        
        /// <summary>
        /// table_hint : READCOMMITTEDLOCK 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint10 a);
        
        /// <summary>
        /// table_hint : READPAST 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint11 a);
        
        /// <summary>
        /// table_hint : READUNCOMMITTED 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint12 a);
        
        /// <summary>
        /// table_hint : REPEATABLEREAD 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint13 a);
        
        /// <summary>
        /// table_hint : ROWLOCK 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint14 a);
        
        /// <summary>
        /// table_hint : SERIALIZABLE 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint15 a);
        
        /// <summary>
        /// table_hint : SNAPSHOT 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint16 a);
        
        /// <summary>
        /// table_hint : SPATIAL_WINDOW_MAX_CELLS EQUAL decimal 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint17 a);
        
        /// <summary>
        /// table_hint : TABLOCK 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint18 a);
        
        /// <summary>
        /// table_hint : TABLOCKX 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint19 a);
        
        /// <summary>
        /// table_hint : UPDLOCK 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint20 a);
        
        /// <summary>
        /// table_hint : XLOCK 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint21 a);
        
        /// <summary>
        /// table_hint : KEEPIDENTITY 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint22 a);
        
        /// <summary>
        /// table_hint : KEEPDEFAULTS 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint23 a);
        
        /// <summary>
        /// table_hint : IGNORE_CONSTRAINTS 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint24 a);
        
        /// <summary>
        /// table_hint : IGNORE_TRIGGERS 
        /// </summary>
        void VisitTableHint(AstTableHint.AstTableHint25 a);
        
        /// <summary>
        /// hint_index : LR_BRACKET index_values RR_BRACKET 
        /// </summary>
        void VisitHintIndex(AstHintIndex.AstHintIndex1 a);
        
        /// <summary>
        /// hint_index : EQUAL LR_BRACKET index_value RR_BRACKET 
        /// </summary>
        void VisitHintIndex(AstHintIndex.AstHintIndex2 a);
        
        /// <summary>
        /// hint_index : EQUAL index_value 
        /// </summary>
        void VisitHintIndex(AstHintIndex.AstHintIndex3 a);
        
        /// <summary>
        /// index_value : id_ 
        /// </summary>
        void VisitIndexValue(AstIndexValue.AstIndexValue1 a);
        
        /// <summary>
        /// index_value : decimal 
        /// </summary>
        void VisitIndexValue(AstIndexValue.AstIndexValue2 a);
        
        /// <summary>
        /// column_alias : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnAlias(AstColumnAlias a);
        
        /// <summary>
        /// ranking_windowed_function : ranking_windowed LR_BRACKET RR_BRACKET over_clause 
        /// </summary>
        void VisitRankingWindowedFunction(AstRankingWindowedFunction.AstRankingWindowedFunction1 a);
        
        /// <summary>
        /// ranking_windowed_function : NTILE LR_BRACKET expression RR_BRACKET over_clause 
        /// </summary>
        void VisitRankingWindowedFunction(AstRankingWindowedFunction.AstRankingWindowedFunction2 a);
        
        /// <summary>
        /// aggregate_windowed_function : agg_function LR_BRACKET all_distinct_expression RR_BRACKET over_clause? 
        /// </summary>
        void VisitAggregateWindowedFunction(AstAggregateWindowedFunction.AstAggregateWindowedFunction1 a);
        
        /// <summary>
        /// aggregate_windowed_function : count_count_big LR_BRACKET all_distinct_expression_or_star RR_BRACKET over_clause? 
        /// </summary>
        void VisitAggregateWindowedFunction(AstAggregateWindowedFunction.AstAggregateWindowedFunction2 a);
        
        /// <summary>
        /// aggregate_windowed_function : CHECKSUM_AGG LR_BRACKET all_distinct_expression RR_BRACKET 
        /// </summary>
        void VisitAggregateWindowedFunction(AstAggregateWindowedFunction.AstAggregateWindowedFunction3 a);
        
        /// <summary>
        /// aggregate_windowed_function : GROUPING LR_BRACKET expression RR_BRACKET 
        /// </summary>
        void VisitAggregateWindowedFunction(AstAggregateWindowedFunction.AstAggregateWindowedFunction4 a);
        
        /// <summary>
        /// aggregate_windowed_function : GROUPING_ID LR_BRACKET expression_list RR_BRACKET 
        /// </summary>
        void VisitAggregateWindowedFunction(AstAggregateWindowedFunction.AstAggregateWindowedFunction5 a);
        
        /// <summary>
        /// all_distinct_expression_or_star : STAR 
        /// </summary>
        void VisitAllDistinctExpressionOrStar(AstAllDistinctExpressionOrStar.AstAllDistinctExpressionOrStar1 a);
        
        /// <summary>
        /// all_distinct_expression_or_star : all_distinct_expression 
        /// </summary>
        void VisitAllDistinctExpressionOrStar(AstAllDistinctExpressionOrStar.AstAllDistinctExpressionOrStar2 a);
        
        /// <summary>
        /// analytic_windowed_function : first_last_value LR_BRACKET expression RR_BRACKET over_clause 
        /// </summary>
        void VisitAnalyticWindowedFunction(AstAnalyticWindowedFunction.AstAnalyticWindowedFunction1 a);
        
        /// <summary>
        /// analytic_windowed_function : lag_lead LR_BRACKET expression COMMA expression2 RR_BRACKET over_clause 
        /// </summary>
        void VisitAnalyticWindowedFunction(AstAnalyticWindowedFunction.AstAnalyticWindowedFunction2 a);
        
        /// <summary>
        /// analytic_windowed_function : cume_percent LR_BRACKET RR_BRACKET OVER LR_BRACKET PARTITION BY expression_list order_by_clause RR_BRACKET 
        /// </summary>
        void VisitAnalyticWindowedFunction(AstAnalyticWindowedFunction.AstAnalyticWindowedFunction3 a);
        
        /// <summary>
        /// analytic_windowed_function : percentil LR_BRACKET expression RR_BRACKET WITHIN GROUP LR_BRACKET order_by_clause RR_BRACKET OVER LR_BRACKET PARTITION BY expression_list RR_BRACKET 
        /// </summary>
        void VisitAnalyticWindowedFunction(AstAnalyticWindowedFunction.AstAnalyticWindowedFunction4 a);
        
        /// <summary>
        /// all_distinct_expression : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAllDistinctExpression(AstAllDistinctExpression a);
        
        /// <summary>
        /// over_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOverClause(AstOverClause a);
        
        /// <summary>
        /// row_or_range_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRowOrRangeClause(AstRowOrRangeClause a);
        
        /// <summary>
        /// window_frame_extent : window_frame_preceding 
        /// </summary>
        void VisitWindowFrameExtent(AstWindowFrameExtent.AstWindowFrameExtent1 a);
        
        /// <summary>
        /// window_frame_extent : BETWEEN left=window_frame_bound AND right=window_frame_bound 
        /// </summary>
        void VisitWindowFrameExtent(AstWindowFrameExtent.AstWindowFrameExtent2 a);
        
        /// <summary>
        /// window_frame_bound : window_frame_preceding 
        /// </summary>
        void VisitWindowFrameBound(AstWindowFrameBound.AstWindowFrameBound1 a);
        
        /// <summary>
        /// window_frame_bound : window_frame_following 
        /// </summary>
        void VisitWindowFrameBound(AstWindowFrameBound.AstWindowFrameBound2 a);
        
        /// <summary>
        /// window_frame_preceding : UNBOUNDED PRECEDING 
        /// </summary>
        void VisitWindowFramePreceding(AstWindowFramePreceding.AstWindowFramePreceding1 a);
        
        /// <summary>
        /// window_frame_preceding : decimal PRECEDING 
        /// </summary>
        void VisitWindowFramePreceding(AstWindowFramePreceding.AstWindowFramePreceding2 a);
        
        /// <summary>
        /// window_frame_preceding : CURRENT ROW 
        /// </summary>
        void VisitWindowFramePreceding(AstWindowFramePreceding.AstWindowFramePreceding3 a);
        
        /// <summary>
        /// window_frame_following : UNBOUNDED FOLLOWING 
        /// </summary>
        void VisitWindowFrameFollowing(AstWindowFrameFollowing.AstWindowFrameFollowing1 a);
        
        /// <summary>
        /// window_frame_following : decimal FOLLOWING 
        /// </summary>
        void VisitWindowFrameFollowing(AstWindowFrameFollowing.AstWindowFrameFollowing2 a);
        
        /// <summary>
        /// create_database_option : FILESTREAM database_filestream_options 
        /// </summary>
        void VisitCreateDatabaseOption(AstCreateDatabaseOption.AstCreateDatabaseOption1 a);
        
        /// <summary>
        /// create_database_option : DEFAULT_LANGUAGE EQUAL id_or_string 
        /// </summary>
        void VisitCreateDatabaseOption(AstCreateDatabaseOption.AstCreateDatabaseOption2 a);
        
        /// <summary>
        /// create_database_option : DEFAULT_FULLTEXT_LANGUAGE EQUAL id_or_string 
        /// </summary>
        void VisitCreateDatabaseOption(AstCreateDatabaseOption.AstCreateDatabaseOption3 a);
        
        /// <summary>
        /// create_database_option : NESTED_TRIGGERS EQUAL on_off 
        /// </summary>
        void VisitCreateDatabaseOption(AstCreateDatabaseOption.AstCreateDatabaseOption4 a);
        
        /// <summary>
        /// create_database_option : TRANSFORM_NOISE_WORDS EQUAL on_off 
        /// </summary>
        void VisitCreateDatabaseOption(AstCreateDatabaseOption.AstCreateDatabaseOption5 a);
        
        /// <summary>
        /// create_database_option : TWO_DIGIT_YEAR_CUTOFF EQUAL decimal 
        /// </summary>
        void VisitCreateDatabaseOption(AstCreateDatabaseOption.AstCreateDatabaseOption6 a);
        
        /// <summary>
        /// create_database_option : DB_CHAINING on_off 
        /// </summary>
        void VisitCreateDatabaseOption(AstCreateDatabaseOption.AstCreateDatabaseOption7 a);
        
        /// <summary>
        /// create_database_option : TRUSTWORTHY on_off 
        /// </summary>
        void VisitCreateDatabaseOption(AstCreateDatabaseOption.AstCreateDatabaseOption8 a);
        
        /// <summary>
        /// database_filestream_option : LR_BRACKET NON_TRANSACTED_ACCESS EQUAL off_read_only_full RR_BRACKET 
        /// </summary>
        void VisitDatabaseFilestreamOption(AstDatabaseFilestreamOption.AstDatabaseFilestreamOption1 a);
        
        /// <summary>
        /// database_filestream_option : LR_BRACKET DIRECTORY_NAME EQUAL stringtext RR_BRACKET 
        /// </summary>
        void VisitDatabaseFilestreamOption(AstDatabaseFilestreamOption.AstDatabaseFilestreamOption2 a);
        
        /// <summary>
        /// database_file_spec : file_group 
        /// </summary>
        void VisitDatabaseFileSpec(AstDatabaseFileSpec.AstDatabaseFileSpec1 a);
        
        /// <summary>
        /// database_file_spec : file_spec 
        /// </summary>
        void VisitDatabaseFileSpec(AstDatabaseFileSpec.AstDatabaseFileSpec2 a);
        
        /// <summary>
        /// file_group : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFileGroup(AstFileGroup a);
        
        /// <summary>
        /// file_spec : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFileSpec(AstFileSpec a);
        
        /// <summary>
        /// max_file_size_value : file_size 
        /// </summary>
        void VisitMaxFileSizeValue(AstMaxFileSizeValue.AstMaxFileSizeValue1 a);
        
        /// <summary>
        /// max_file_size_value : UNLIMITED 
        /// </summary>
        void VisitMaxFileSizeValue(AstMaxFileSizeValue.AstMaxFileSizeValue2 a);
        
        /// <summary>
        /// cursor_name : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCursorName(AstCursorName a);
        
        /// <summary>
        /// null_or_default : null_notnull 
        /// </summary>
        void VisitNullOrDefault(AstNullOrDefault.AstNullOrDefault1 a);
        
        /// <summary>
        /// null_or_default : DEFAULT constant_expression COLLATE id_ WITH VALUES 
        /// </summary>
        void VisitNullOrDefault(AstNullOrDefault.AstNullOrDefault2 a);
        
        /// <summary>
        /// scalar_function_name : func_proc_name_server_database_schema 
        /// </summary>
        void VisitScalarFunctionName(AstScalarFunctionName.AstScalarFunctionName1 a);
        
        /// <summary>
        /// scalar_function_name : scalar_function_name_enum 
        /// </summary>
        void VisitScalarFunctionName(AstScalarFunctionName.AstScalarFunctionName2 a);
        
        /// <summary>
        /// begin_conversation_timer : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBeginConversationTimer(AstBeginConversationTimer a);
        
        /// <summary>
        /// begin_conversation_dialog : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBeginConversationDialog(AstBeginConversationDialog a);
        
        /// <summary>
        /// contract_name_expression : id_ 
        /// </summary>
        void VisitContractNameExpression(AstContractNameExpression.AstContractNameExpression1 a);
        
        /// <summary>
        /// contract_name_expression : expression 
        /// </summary>
        void VisitContractNameExpression(AstContractNameExpression.AstContractNameExpression2 a);
        
        /// <summary>
        /// service_name_expr : id_ 
        /// </summary>
        void VisitServiceNameExpr(AstServiceNameExpr.AstServiceNameExpr1 a);
        
        /// <summary>
        /// service_name_expr : expression 
        /// </summary>
        void VisitServiceNameExpr(AstServiceNameExpr.AstServiceNameExpr2 a);
        
        void VisitEndConversation(AstEndConversation a);
        
        /// <summary>
        /// waitfor_conversation : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWaitforConversation(AstWaitforConversation a);
        
        void VisitGetConversation(AstGetConversation a);
        
        void VisitSendConversation(AstSendConversation a);
        
        /// <summary>
        /// data_type : scaled=data_type_scaled LR_BRACKET MAX RR_BRACKET 
        /// </summary>
        void VisitDataType(AstDataType.AstDataType1 a);
        
        /// <summary>
        /// data_type : ext_type_id LR_BRACKET decimal_scale_prec RR_BRACKET 
        /// </summary>
        void VisitDataType(AstDataType.AstDataType2 a);
        
        /// <summary>
        /// data_type : ext_type_id LR_BRACKET scale=decimal RR_BRACKET 
        /// </summary>
        void VisitDataType(AstDataType.AstDataType3 a);
        
        /// <summary>
        /// data_type : ext_type_id IDENTITY LR_BRACKET identity_seed RR_BRACKET 
        /// </summary>
        void VisitDataType(AstDataType.AstDataType4 a);
        
        /// <summary>
        /// data_type : double_prec=DOUBLE PRECISION? 
        /// </summary>
        void VisitDataType(AstDataType.AstDataType5 a);
        
        /// <summary>
        /// data_type : unscaled_type_id 
        /// </summary>
        void VisitDataType(AstDataType.AstDataType6 a);
        
        /// <summary>
        /// decimal_scale_prec : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDecimalScalePrec(AstDecimalScalePrec a);
        
        /// <summary>
        /// identity_seed : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIdentitySeed(AstIdentitySeed a);
        
        /// <summary>
        /// default_value : NULL_ 
        /// </summary>
        void VisitDefaultValue(AstDefaultValue.AstDefaultValue1 a);
        
        /// <summary>
        /// default_value : DEFAULT 
        /// </summary>
        void VisitDefaultValue(AstDefaultValue.AstDefaultValue2 a);
        
        /// <summary>
        /// default_value : constant 
        /// </summary>
        void VisitDefaultValue(AstDefaultValue.AstDefaultValue3 a);
        
        /// <summary>
        /// constant : stringtext 
        /// </summary>
        void VisitConstant(AstConstant.AstConstant1 a);
        
        /// <summary>
        /// constant : binary_ 
        /// </summary>
        void VisitConstant(AstConstant.AstConstant2 a);
        
        /// <summary>
        /// constant : real 
        /// </summary>
        void VisitConstant(AstConstant.AstConstant3 a);
        
        /// <summary>
        /// constant : sign? decimal_float 
        /// </summary>
        void VisitConstant(AstConstant.AstConstant4 a);
        
        /// <summary>
        /// constant : sign? dollar=DOLLAR decimal_float 
        /// </summary>
        void VisitConstant(AstConstant.AstConstant5 a);
        
        /// <summary>
        /// constant : parameter 
        /// </summary>
        void VisitConstant(AstConstant.AstConstant6 a);
        
        /// <summary>
        /// decimal_float : decimal 
        /// </summary>
        void VisitDecimalFloat(AstDecimalFloat.AstDecimalFloat1 a);
        
        /// <summary>
        /// decimal_float : float 
        /// </summary>
        void VisitDecimalFloat(AstDecimalFloat.AstDecimalFloat2 a);
        
        /// <summary>
        /// sign : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSign(AstSign a);
        
        /// <summary>
        /// keyword : Bb.Generators.ModelMethod
        /// </summary>
        void VisitKeyword(AstKeyword a);
        
        /// <summary>
        /// id_ : Bb.Generators.ModelMethod
        /// </summary>
        void VisitId(AstId a);
        
        /// <summary>
        /// simple_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSimpleId(AstSimpleId a);
        
        /// <summary>
        /// file_size : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFileSize(AstFileSize a);
        
        /// <summary>
        /// ipv4 : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIpv4(AstIpv4 a);
        
        /// <summary>
        /// ipv6 : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIpv6(AstIpv6 a);
        
        /// <summary>
        /// float : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFloat(AstFloat a);
        
        /// <summary>
        /// decimal : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDecimal(AstDecimal a);
        
        /// <summary>
        /// id_simple : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIdSimple(AstIdSimple a);
        
        /// <summary>
        /// filestream_filegroup_or_partition_schema_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFilestreamFilegroupOrPartitionSchemaId(AstFilestreamFilegroupOrPartitionSchemaId a);
        
        /// <summary>
        /// action_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitActionId(AstActionId a);
        
        /// <summary>
        /// aggregate_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAggregateId(AstAggregateId a);
        
        /// <summary>
        /// schema_identifier : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaIdentifier(AstSchemaIdentifier a);
        
        /// <summary>
        /// assembly_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAssemblyId(AstAssemblyId a);
        
        /// <summary>
        /// asym_key_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAsymKeyId(AstAsymKeyId a);
        
        /// <summary>
        /// audit_action_group_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAuditActionGroupId(AstAuditActionGroupId a);
        
        /// <summary>
        /// audit_guid_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAuditGuidId(AstAuditGuidId a);
        
        /// <summary>
        /// audit_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAuditId(AstAuditId a);
        
        /// <summary>
        /// user_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUserId(AstUserId a);
        
        /// <summary>
        /// backup_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBackupId(AstBackupId a);
        
        /// <summary>
        /// binding_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBindingId(AstBindingId a);
        
        /// <summary>
        /// catalog_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCatalogId(AstCatalogId a);
        
        /// <summary>
        /// certificate_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCertificateId(AstCertificateId a);
        
        /// <summary>
        /// class_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitClassId(AstClassId a);
        
        /// <summary>
        /// collation_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCollationId(AstCollationId a);
        
        /// <summary>
        /// column_encryption_key_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnEncryptionKeyId(AstColumnEncryptionKeyId a);
        
        /// <summary>
        /// column_or_argument_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnOrArgumentId(AstColumnOrArgumentId a);
        
        /// <summary>
        /// constraint_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitConstraintId(AstConstraintId a);
        
        /// <summary>
        /// credential_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCredentialId(AstCredentialId a);
        
        /// <summary>
        /// cryptographic_provider_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCryptographicProviderId(AstCryptographicProviderId a);
        
        /// <summary>
        /// data_source_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDataSourceId(AstDataSourceId a);
        
        /// <summary>
        /// service_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitServiceId(AstServiceId a);
        
        /// <summary>
        /// encryptor_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEncryptorId(AstEncryptorId a);
        
        /// <summary>
        /// endpoint_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEndpointId(AstEndpointId a);
        
        /// <summary>
        /// event_customizable_attribute_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEventCustomizableAttributeId(AstEventCustomizableAttributeId a);
        
        /// <summary>
        /// event_field_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEventFieldId(AstEventFieldId a);
        
        /// <summary>
        /// event_module_guid_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEventModuleGuidId(AstEventModuleGuidId a);
        
        /// <summary>
        /// event_notification_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEventNotificationId(AstEventNotificationId a);
        
        /// <summary>
        /// event_package_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEventPackageId(AstEventPackageId a);
        
        /// <summary>
        /// event_session_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEventSessionId(AstEventSessionId a);
        
        /// <summary>
        /// event_type_or_group_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEventTypeOrGroupId(AstEventTypeOrGroupId a);
        
        /// <summary>
        /// ext_type_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExtTypeId(AstExtTypeId a);
        
        /// <summary>
        /// external_data_source_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExternalDataSourceId(AstExternalDataSourceId a);
        
        /// <summary>
        /// external_file_format_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExternalFileFormatId(AstExternalFileFormatId a);
        
        /// <summary>
        /// external_pool_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExternalPoolId(AstExternalPoolId a);
        
        /// <summary>
        /// function_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFunctionId(AstFunctionId a);
        
        /// <summary>
        /// group_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitGroupId(AstGroupId a);
        
        /// <summary>
        /// index_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIndexId(AstIndexId a);
        
        /// <summary>
        /// language_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLanguageId(AstLanguageId a);
        
        /// <summary>
        /// library_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLibraryId(AstLibraryId a);
        
        /// <summary>
        /// server_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitServerId(AstServerId a);
        
        /// <summary>
        /// logical_device_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLogicalDeviceId(AstLogicalDeviceId a);
        
        /// <summary>
        /// login_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLoginId(AstLoginId a);
        
        /// <summary>
        /// master_key : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMasterKey(AstMasterKey a);
        
        /// <summary>
        /// method_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMethodId(AstMethodId a);
        
        /// <summary>
        /// contract_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitContractId(AstContractId a);
        
        /// <summary>
        /// module_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitModuleId(AstModuleId a);
        
        /// <summary>
        /// network_computer : Bb.Generators.ModelMethod
        /// </summary>
        void VisitNetworkComputer(AstNetworkComputer a);
        
        /// <summary>
        /// role_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRoleId(AstRoleId a);
        
        /// <summary>
        /// file_group_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFileGroupId(AstFileGroupId a);
        
        /// <summary>
        /// non_static_attr_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitNonStaticAttrId(AstNonStaticAttrId a);
        
        /// <summary>
        /// notification_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitNotificationId(AstNotificationId a);
        
        /// <summary>
        /// object_identifier : Bb.Generators.ModelMethod
        /// </summary>
        void VisitObjectIdentifier(AstObjectIdentifier a);
        
        /// <summary>
        /// owner_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOwnerId(AstOwnerId a);
        
        /// <summary>
        /// partition_column_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPartitionColumnId(AstPartitionColumnId a);
        
        /// <summary>
        /// pool_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPoolId(AstPoolId a);
        
        /// <summary>
        /// predicate_source_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPredicateSourceId(AstPredicateSourceId a);
        
        /// <summary>
        /// property_list_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPropertyListId(AstPropertyListId a);
        
        /// <summary>
        /// provider_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitProviderId(AstProviderId a);
        
        /// <summary>
        /// database_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseId(AstDatabaseId a);
        
        /// <summary>
        /// route_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRouteId(AstRouteId a);
        
        /// <summary>
        /// rule_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRuleId(AstRuleId a);
        
        /// <summary>
        /// column_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnId(AstColumnId a);
        
        /// <summary>
        /// schema_collection_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaCollectionId(AstSchemaCollectionId a);
        
        /// <summary>
        /// security_policy_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSecurityPolicyId(AstSecurityPolicyId a);
        
        /// <summary>
        /// security_predicate_function_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSecurityPredicateFunctionId(AstSecurityPredicateFunctionId a);
        
        /// <summary>
        /// sequence_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSequenceId(AstSequenceId a);
        
        /// <summary>
        /// server_role_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitServerRoleId(AstServerRoleId a);
        
        /// <summary>
        /// source_list_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSourceListId(AstSourceListId a);
        
        /// <summary>
        /// sql_identifier_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSqlIdentifierId(AstSqlIdentifierId a);
        
        /// <summary>
        /// static_attr_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStaticAttrId(AstStaticAttrId a);
        
        /// <summary>
        /// statistics_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStatisticsId(AstStatisticsId a);
        
        /// <summary>
        /// stoplist_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStoplistId(AstStoplistId a);
        
        /// <summary>
        /// symmetric_key_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSymmetricKeyId(AstSymmetricKeyId a);
        
        /// <summary>
        /// synonym_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSynonymId(AstSynonymId a);
        
        /// <summary>
        /// table_or_view_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableOrViewId(AstTableOrViewId a);
        
        /// <summary>
        /// view_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitViewId(AstViewId a);
        
        /// <summary>
        /// table_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableId(AstTableId a);
        
        /// <summary>
        /// target_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTargetId(AstTargetId a);
        
        /// <summary>
        /// target_parameter_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTargetParameterId(AstTargetParameterId a);
        
        /// <summary>
        /// trigger_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTriggerId(AstTriggerId a);
        
        /// <summary>
        /// tvf_schema_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTvfSchemaId(AstTvfSchemaId a);
        
        /// <summary>
        /// udt_column_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUdtColumnId(AstUdtColumnId a);
        
        /// <summary>
        /// unscaled_type_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUnscaledTypeId(AstUnscaledTypeId a);
        
        /// <summary>
        /// windows_principal_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWindowsPrincipalId(AstWindowsPrincipalId a);
        
        /// <summary>
        /// workload_group_group_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWorkloadGroupGroupId(AstWorkloadGroupGroupId a);
        
        /// <summary>
        /// workload_group_pool_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWorkloadGroupPoolId(AstWorkloadGroupPoolId a);
        
        /// <summary>
        /// partition_scheme_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPartitionSchemeId(AstPartitionSchemeId a);
        
        /// <summary>
        /// queue_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitQueueId(AstQueueId a);
        
        /// <summary>
        /// partition_function_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPartitionFunctionId(AstPartitionFunctionId a);
        
        /// <summary>
        /// message_type_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMessageTypeId(AstMessageTypeId a);
        
        /// <summary>
        /// code_location_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCodeLocationId(AstCodeLocationId a);
        
        /// <summary>
        /// transaction_identifier : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTransactionIdentifier(AstTransactionIdentifier a);
        
        /// <summary>
        /// schema_security_predicate_function_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaSecurityPredicateFunctionId(AstSchemaSecurityPredicateFunctionId a);
        
        /// <summary>
        /// binary_ : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBinary(AstBinary a);
        
        /// <summary>
        /// local_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLocalId(AstLocalId a);
        
        /// <summary>
        /// decimal_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDecimalId(AstDecimalId a);
        
        /// <summary>
        /// string_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStringId(AstStringId a);
        
        /// <summary>
        /// stringtext : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStringtext(AstStringtext a);
        
        /// <summary>
        /// string_id2 : stringtext 
        /// </summary>
        void VisitStringId2(AstStringId2.AstStringId21 a);
        
        /// <summary>
        /// string_id2 : id_ 
        /// </summary>
        void VisitStringId2(AstStringId2.AstStringId22 a);
        
        /// <summary>
        /// string_id2 : local_id 
        /// </summary>
        void VisitStringId2(AstStringId2.AstStringId23 a);
        
        /// <summary>
        /// string_local_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStringLocalId(AstStringLocalId a);
        
        /// <summary>
        /// decimal_local_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDecimalLocalId(AstDecimalLocalId a);
        
        /// <summary>
        /// decimal_string : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDecimalString(AstDecimalString a);
        
        /// <summary>
        /// decimal_string_local_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDecimalStringLocalId(AstDecimalStringLocalId a);
        
        /// <summary>
        /// string_local_id_double_quote_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStringLocalIdDoubleQuoteId(AstStringLocalIdDoubleQuoteId a);
        
        /// <summary>
        /// server_database_schema_object_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitServerDatabaseSchemaObjectRef(AstServerDatabaseSchemaObjectRef a);
        
        /// <summary>
        /// database_stoplist_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseStoplistRef(AstDatabaseStoplistRef a);
        
        /// <summary>
        /// event_module_package_action_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEventModulePackageActionRef(AstEventModulePackageActionRef a);
        
        /// <summary>
        /// schema_sequence_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaSequenceRef(AstSchemaSequenceRef a);
        
        /// <summary>
        /// schema_queue_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaQueueRef(AstSchemaQueueRef a);
        
        /// <summary>
        /// module_package_event_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitModulePackageEventRef(AstModulePackageEventRef a);
        
        /// <summary>
        /// schema_rule_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaRuleRef(AstSchemaRuleRef a);
        
        /// <summary>
        /// schema_module_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaModuleRef(AstSchemaModuleRef a);
        
        /// <summary>
        /// database_schema_sequence_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseSchemaSequenceRef(AstDatabaseSchemaSequenceRef a);
        
        /// <summary>
        /// schema_object_statistics_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaObjectStatisticsRef(AstSchemaObjectStatisticsRef a);
        
        /// <summary>
        /// schema_synonym_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaSynonymRef(AstSchemaSynonymRef a);
        
        /// <summary>
        /// default_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDefaultRef(AstDefaultRef a);
        
        /// <summary>
        /// schema_sql_identifier_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaSqlIdentifierId(AstSchemaSqlIdentifierId a);
        
        /// <summary>
        /// schema_trigger_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaTriggerRef(AstSchemaTriggerRef a);
        
        /// <summary>
        /// schema_object_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaObjectRef(AstSchemaObjectRef a);
        
        /// <summary>
        /// schema_security_policy_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaSecurityPolicyRef(AstSchemaSecurityPolicyRef a);
        
        /// <summary>
        /// schema_aggregate_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaAggregateRef(AstSchemaAggregateRef a);
        
        /// <summary>
        /// database_schema_queue_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseSchemaQueueRef(AstDatabaseSchemaQueueRef a);
        
        /// <summary>
        /// database_schema_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseSchemaRef(AstDatabaseSchemaRef a);
        
        /// <summary>
        /// drop_backward_compatible_index : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropBackwardCompatibleIndex(AstDropBackwardCompatibleIndex a);
        
        /// <summary>
        /// complete_table_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCompleteTableRef(AstCompleteTableRef a);
        
        /// <summary>
        /// full_table_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFullTableRef(AstFullTableRef a);
        
        /// <summary>
        /// database_schema_table_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseSchemaTableRef(AstDatabaseSchemaTableRef a);
        
        /// <summary>
        /// entity_name_for_azure_dw_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEntityNameForAzureDwRef(AstEntityNameForAzureDwRef a);
        
        /// <summary>
        /// entity_name_for_parallel_dw_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEntityNameForParallelDwRef(AstEntityNameForParallelDwRef a);
        
        /// <summary>
        /// func_proc_name_server_database_schema : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFuncProcNameServerDatabaseSchema(AstFuncProcNameServerDatabaseSchema a);
        
        /// <summary>
        /// func_proc_name_database_schema_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFuncProcNameDatabaseSchemaRef(AstFuncProcNameDatabaseSchemaRef a);
        
        /// <summary>
        /// server_database_schema_function_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitServerDatabaseSchemaFunctionRef(AstServerDatabaseSchemaFunctionRef a);
        
        /// <summary>
        /// database_schema_function_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseSchemaFunctionRef(AstDatabaseSchemaFunctionRef a);
        
        /// <summary>
        /// schema_func_proc_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaFuncProcRef(AstSchemaFuncProcRef a);
        
        /// <summary>
        /// ddl_object : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDdlObject(AstDdlObject a);
        
        /// <summary>
        /// full_column_name : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFullColumnName(AstFullColumnName a);
        
        /// <summary>
        /// deleteed_inserted_column_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDeleteedInsertedColumnId(AstDeleteedInsertedColumnId a);
        
        /// <summary>
        /// full_column_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFullColumnRef(AstFullColumnRef a);
        
        /// <summary>
        /// entity_name : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEntityName(AstEntityName a);
        
        /// <summary>
        /// column_name_list_with_order : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnNameListWithOrder(AstColumnNameListWithOrder a);
        
        /// <summary>
        /// column_ordered : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnOrdered(AstColumnOrdered a);
        
        /// <summary>
        /// column_or_argument_ids : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnOrArgumentIds(AstColumnOrArgumentIds a);
        
        /// <summary>
        /// schema_view_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaViewRef(AstSchemaViewRef a);
        
        /// <summary>
        /// decimals : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDecimals(AstDecimals a);
        
        /// <summary>
        /// schema_type_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaTypeRef(AstSchemaTypeRef a);
        
        /// <summary>
        /// database_source_list_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseSourceListRef(AstDatabaseSourceListRef a);
        
        /// <summary>
        /// full_predicate_source_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFullPredicateSourceRef(AstFullPredicateSourceRef a);
        
        /// <summary>
        /// assembly_class_method_ref : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAssemblyClassMethodRef(AstAssemblyClassMethodRef a);
        
        /// <summary>
        /// schema_trigger_refs : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaTriggerRefs(AstSchemaTriggerRefs a);
        
        /// <summary>
        /// ids : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIds(AstIds a);
        
        /// <summary>
        /// update_statistics_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUpdateStatisticsOptions(AstUpdateStatisticsOptions a);
        
        /// <summary>
        /// function_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFunctionOptions(AstFunctionOptions a);
        
        /// <summary>
        /// procedure_params : Bb.Generators.ModelMethod
        /// </summary>
        void VisitProcedureParams(AstProcedureParams a);
        
        /// <summary>
        /// dml_trigger_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDmlTriggerOptions(AstDmlTriggerOptions a);
        
        /// <summary>
        /// table_type_indices : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableTypeIndices(AstTableTypeIndices a);
        
        /// <summary>
        /// dml_trigger_operations : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDmlTriggerOperations(AstDmlTriggerOperations a);
        
        /// <summary>
        /// procedure_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitProcedureOptions(AstProcedureOptions a);
        
        /// <summary>
        /// logical_device_ids : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLogicalDeviceIds(AstLogicalDeviceIds a);
        
        /// <summary>
        /// disk_tape_url_values : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDiskTapeUrlValues(AstDiskTapeUrlValues a);
        
        /// <summary>
        /// xml_index_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitXmlIndexOptions(AstXmlIndexOptions a);
        
        /// <summary>
        /// create_columnstore_index_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateColumnstoreIndexOptions(AstCreateColumnstoreIndexOptions a);
        
        /// <summary>
        /// single_partition_rebuild_index_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSinglePartitionRebuildIndexOptions(AstSinglePartitionRebuildIndexOptions a);
        
        /// <summary>
        /// rebuild_index_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRebuildIndexOptions(AstRebuildIndexOptions a);
        
        /// <summary>
        /// full_table_ref_columns : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFullTableRefColumns(AstFullTableRefColumns a);
        
        /// <summary>
        /// set_index_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSetIndexOptions(AstSetIndexOptions a);
        
        /// <summary>
        /// reorganize_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitReorganizeOptions(AstReorganizeOptions a);
        
        /// <summary>
        /// private_keys : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPrivateKeys(AstPrivateKeys a);
        
        /// <summary>
        /// privatekey : FILE EQUAL stringtext 
        /// </summary>
        void VisitPrivatekey(AstPrivatekey.AstPrivatekey1 a);
        
        /// <summary>
        /// privatekey : by_password_crypt 
        /// </summary>
        void VisitPrivatekey(AstPrivatekey.AstPrivatekey2 a);
        
        /// <summary>
        /// server_audit_file_specs : Bb.Generators.ModelMethod
        /// </summary>
        void VisitServerAuditFileSpecs(AstServerAuditFileSpecs a);
        
        /// <summary>
        /// create_or_alter_event_session_del_events : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterEventSessionDelEvents(AstCreateOrAlterEventSessionDelEvents a);
        
        /// <summary>
        /// create_or_alter_event_session_add_events : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterEventSessionAddEvents(AstCreateOrAlterEventSessionAddEvents a);
        
        /// <summary>
        /// create_or_alter_event_session_add_targets : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterEventSessionAddTargets(AstCreateOrAlterEventSessionAddTargets a);
        
        /// <summary>
        /// create_or_alter_event_session_del_targets : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateOrAlterEventSessionDelTargets(AstCreateOrAlterEventSessionDelTargets a);
        
        /// <summary>
        /// event_session_actions : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEventSessionActions(AstEventSessionActions a);
        
        /// <summary>
        /// set_attributes : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSetAttributes(AstSetAttributes a);
        
        /// <summary>
        /// pwd_strategies : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPwdStrategies(AstPwdStrategies a);
        
        /// <summary>
        /// event_module_package_action_refs : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEventModulePackageActionRefs(AstEventModulePackageActionRefs a);
        
        /// <summary>
        /// resumable_index_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitResumableIndexOptions(AstResumableIndexOptions a);
        
        /// <summary>
        /// create_index_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateIndexOptions(AstCreateIndexOptions a);
        
        /// <summary>
        /// relational_index_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRelationalIndexOptions(AstRelationalIndexOptions a);
        
        /// <summary>
        /// create_database_option_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateDatabaseOptionList(AstCreateDatabaseOptionList a);
        
        /// <summary>
        /// database_file_spec_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseFileSpecList(AstDatabaseFileSpecList a);
        
        /// <summary>
        /// output_dml_list_elems : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOutputDmlListElems(AstOutputDmlListElems a);
        
        /// <summary>
        /// update_elems : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUpdateElems(AstUpdateElems a);
        
        /// <summary>
        /// create_security_policy_adds : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateSecurityPolicyAdds(AstCreateSecurityPolicyAdds a);
        
        /// <summary>
        /// update_elem_merges : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUpdateElemMerges(AstUpdateElemMerges a);
        
        /// <summary>
        /// file_group_ids : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFileGroupIds(AstFileGroupIds a);
        
        /// <summary>
        /// string_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStringList(AstStringList a);
        
        /// <summary>
        /// asymmetric_key_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAsymmetricKeyOption(AstAsymmetricKeyOption a);
        
        /// <summary>
        /// assemblies : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAssemblies(AstAssemblies a);
        
        /// <summary>
        /// decimal_string_locals : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDecimalStringLocals(AstDecimalStringLocals a);
        
        /// <summary>
        /// column_name_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnNameList(AstColumnNameList a);
        
        /// <summary>
        /// insert_column_name_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitInsertColumnNameList(AstInsertColumnNameList a);
        
        /// <summary>
        /// insert_column_id : Bb.Generators.ModelMethod
        /// </summary>
        void VisitInsertColumnId(AstInsertColumnId a);
        
        /// <summary>
        /// file_specs : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFileSpecs(AstFileSpecs a);
        
        /// <summary>
        /// database_filestream_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseFilestreamOptions(AstDatabaseFilestreamOptions a);
        
        /// <summary>
        /// expression_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExpressionList(AstExpressionList a);
        
        /// <summary>
        /// change_tracking_option_items : Bb.Generators.ModelMethod
        /// </summary>
        void VisitChangeTrackingOptionItems(AstChangeTrackingOptionItems a);
        
        /// <summary>
        /// create_server_audit_withs : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateServerAuditWiths(AstCreateServerAuditWiths a);
        
        /// <summary>
        /// table_value_constructor : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableValueConstructor(AstTableValueConstructor a);
        
        /// <summary>
        /// column_alias_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnAliasList(AstColumnAliasList a);
        
        /// <summary>
        /// index_values : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIndexValues(AstIndexValues a);
        
        /// <summary>
        /// expressions : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExpressions(AstExpressions a);
        
        /// <summary>
        /// full_column_names : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFullColumnNames(AstFullColumnNames a);
        
        /// <summary>
        /// expression_language : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExpressionLanguage(AstExpressionLanguage a);
        
        /// <summary>
        /// bulk_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitBulkOptions(AstBulkOptions a);
        
        /// <summary>
        /// full_column_name_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFullColumnNameList(AstFullColumnNameList a);
        
        /// <summary>
        /// schema_declaration : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaDeclaration(AstSchemaDeclaration a);
        
        /// <summary>
        /// json_declaration : Bb.Generators.ModelMethod
        /// </summary>
        void VisitJsonDeclaration(AstJsonDeclaration a);
        
        /// <summary>
        /// expression2 : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExpression2(AstExpression2 a);
        
        /// <summary>
        /// table_sources : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableSources(AstTableSources a);
        
        /// <summary>
        /// select_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSelectList(AstSelectList a);
        
        /// <summary>
        /// udt_method_arguments : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUdtMethodArguments(AstUdtMethodArguments a);
        
        /// <summary>
        /// optimize_for_args : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOptimizeForArgs(AstOptimizeForArgs a);
        
        /// <summary>
        /// update_option_clause : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUpdateOptionClause(AstUpdateOptionClause a);
        
        /// <summary>
        /// grouping_sets_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitGroupingSetsList(AstGroupingSetsList a);
        
        /// <summary>
        /// groupSet_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitGroupsetList(AstGroupsetList a);
        
        /// <summary>
        /// groupBys_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitGroupbysList(AstGroupbysList a);
        
        /// <summary>
        /// with_expression : Bb.Generators.ModelMethod
        /// </summary>
        void VisitWithExpression(AstWithExpression a);
        
        /// <summary>
        /// special_lists : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSpecialLists(AstSpecialLists a);
        
        /// <summary>
        /// local_ids : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLocalIds(AstLocalIds a);
        
        /// <summary>
        /// alter_table_index_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterTableIndexOptions(AstAlterTableIndexOptions a);
        
        /// <summary>
        /// connection_nodes : Bb.Generators.ModelMethod
        /// </summary>
        void VisitConnectionNodes(AstConnectionNodes a);
        
        /// <summary>
        /// dbcc_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDbccOptions(AstDbccOptions a);
        
        /// <summary>
        /// execute_var_strings : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExecuteVarStrings(AstExecuteVarStrings a);
        
        /// <summary>
        /// execute_statement_arg_nameds : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExecuteStatementArgNameds(AstExecuteStatementArgNameds a);
        
        /// <summary>
        /// execute_statement_args : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExecuteStatementArgs(AstExecuteStatementArgs a);
        
        /// <summary>
        /// declare_locals : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDeclareLocals(AstDeclareLocals a);
        
        /// <summary>
        /// xml_declarations : Bb.Generators.ModelMethod
        /// </summary>
        void VisitXmlDeclarations(AstXmlDeclarations a);
        
        /// <summary>
        /// schema_view_refs : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaViewRefs(AstSchemaViewRefs a);
        
        /// <summary>
        /// table_names : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableNames(AstTableNames a);
        
        /// <summary>
        /// func_proc_name_schemas : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFuncProcNameSchemas(AstFuncProcNameSchemas a);
        
        /// <summary>
        /// drop_backward_compatible_indexs : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropBackwardCompatibleIndexs(AstDropBackwardCompatibleIndexs a);
        
        /// <summary>
        /// drop_relational_or_xml_or_spatial_indexs : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDropRelationalOrXmlOrSpatialIndexs(AstDropRelationalOrXmlOrSpatialIndexs a);
        
        /// <summary>
        /// change_tracking_option_lists : Bb.Generators.ModelMethod
        /// </summary>
        void VisitChangeTrackingOptionLists(AstChangeTrackingOptionLists a);
        
        /// <summary>
        /// filespecs : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFilespecs(AstFilespecs a);
        
        /// <summary>
        /// view_attributes : Bb.Generators.ModelMethod
        /// </summary>
        void VisitViewAttributes(AstViewAttributes a);
        
        /// <summary>
        /// create_table_index_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateTableIndexOptions(AstCreateTableIndexOptions a);
        
        /// <summary>
        /// tableoptions : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableoptions(AstTableoptions a);
        
        /// <summary>
        /// alter_user_items : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterUserItems(AstAlterUserItems a);
        
        /// <summary>
        /// contract_refs : Bb.Generators.ModelMethod
        /// </summary>
        void VisitContractRefs(AstContractRefs a);
        
        /// <summary>
        /// alter_service_contracts : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterServiceContracts(AstAlterServiceContracts a);
        
        /// <summary>
        /// decimal_ranges : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDecimalRanges(AstDecimalRanges a);
        
        /// <summary>
        /// server_audit_file_infos : Bb.Generators.ModelMethod
        /// </summary>
        void VisitServerAuditFileInfos(AstServerAuditFileInfos a);
        
        /// <summary>
        /// clause_json_infos : Bb.Generators.ModelMethod
        /// </summary>
        void VisitClauseJsonInfos(AstClauseJsonInfos a);
        
        /// <summary>
        /// contract_items : Bb.Generators.ModelMethod
        /// </summary>
        void VisitContractItems(AstContractItems a);
        
        /// <summary>
        /// date_options : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDateOptions(AstDateOptions a);
        
        /// <summary>
        /// xml_common_directives : Bb.Generators.ModelMethod
        /// </summary>
        void VisitXmlCommonDirectives(AstXmlCommonDirectives a);
        
        /// <summary>
        /// receive_ids : Bb.Generators.ModelMethod
        /// </summary>
        void VisitReceiveIds(AstReceiveIds a);
        
        /// <summary>
        /// declare_set_cursor_common_partials : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDeclareSetCursorCommonPartials(AstDeclareSetCursorCommonPartials a);
        
        /// <summary>
        /// column_definition_elements : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnDefinitionElements(AstColumnDefinitionElements a);
        
        /// <summary>
        /// file_group_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFileGroupList(AstFileGroupList a);
        
        /// <summary>
        /// schema_table_ref_impacts : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSchemaTableRefImpacts(AstSchemaTableRefImpacts a);
        
        /// <summary>
        /// notification_ids : Bb.Generators.ModelMethod
        /// </summary>
        void VisitNotificationIds(AstNotificationIds a);
        
        /// <summary>
        /// assembly_permission : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAssemblyPermission(AstAssemblyPermission a);
        
        /// <summary>
        /// object_type_for_grant : Bb.Generators.ModelMethod
        /// </summary>
        void VisitObjectTypeForGrant(AstObjectTypeForGrant a);
        
        /// <summary>
        /// encryption_master : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEncryptionMaster(AstEncryptionMaster a);
        
        /// <summary>
        /// database_object_server : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatabaseObjectServer(AstDatabaseObjectServer a);
        
        /// <summary>
        /// all_server_database : ALL SERVER 
        /// </summary>
        void VisitAllServerDatabase(AstAllServerDatabase.AstAllServerDatabase1 a);
        
        /// <summary>
        /// all_server_database : DATABASE 
        /// </summary>
        void VisitAllServerDatabase(AstAllServerDatabase.AstAllServerDatabase2 a);
        
        /// <summary>
        /// server_database : Bb.Generators.ModelMethod
        /// </summary>
        void VisitServerDatabase(AstServerDatabase a);
        
        /// <summary>
        /// for_after : Bb.Generators.ModelMethod
        /// </summary>
        void VisitForAfter(AstForAfter a);
        
        /// <summary>
        /// share_exclusive : Bb.Generators.ModelMethod
        /// </summary>
        void VisitShareExclusive(AstShareExclusive a);
        
        /// <summary>
        /// create_alter : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreateAlter(AstCreateAlter a);
        
        /// <summary>
        /// file_size_unity : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFileSizeUnity(AstFileSizeUnity a);
        
        /// <summary>
        /// memory_size_unity : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMemorySizeUnity(AstMemorySizeUnity a);
        
        /// <summary>
        /// partition_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPartitionMode(AstPartitionMode a);
        
        /// <summary>
        /// session_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSessionMode(AstSessionMode a);
        
        /// <summary>
        /// disable_reconfigure : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDisableReconfigure(AstDisableReconfigure a);
        
        /// <summary>
        /// transfert_target : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTransfertTarget(AstTransfertTarget a);
        
        /// <summary>
        /// insert_update : Bb.Generators.ModelMethod
        /// </summary>
        void VisitInsertUpdate(AstInsertUpdate a);
        
        /// <summary>
        /// update_delate : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUpdateDelate(AstUpdateDelate a);
        
        /// <summary>
        /// filter_block : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFilterBlock(AstFilterBlock a);
        
        /// <summary>
        /// init_target_any : Bb.Generators.ModelMethod
        /// </summary>
        void VisitInitTargetAny(AstInitTargetAny a);
        
        /// <summary>
        /// receive_mode_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitReceiveModeEnum(AstReceiveModeEnum a);
        
        /// <summary>
        /// datacompression_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatacompressionMode(AstDatacompressionMode a);
        
        /// <summary>
        /// datacompression_column_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDatacompressionColumnMode(AstDatacompressionColumnMode a);
        
        /// <summary>
        /// index_using_xml_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIndexUsingXmlMode(AstIndexUsingXmlMode a);
        
        /// <summary>
        /// proc_keyword : Bb.Generators.ModelMethod
        /// </summary>
        void VisitProcKeyword(AstProcKeyword a);
        
        /// <summary>
        /// alter_replace : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlterReplace(AstAlterReplace a);
        
        /// <summary>
        /// param_way : Bb.Generators.ModelMethod
        /// </summary>
        void VisitParamWay(AstParamWay a);
        
        /// <summary>
        /// percent_row : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPercentRow(AstPercentRow a);
        
        /// <summary>
        /// function_option_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFunctionOptionEnum(AstFunctionOptionEnum a);
        
        /// <summary>
        /// procedure_option_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitProcedureOptionEnum(AstProcedureOptionEnum a);
        
        /// <summary>
        /// row_rows : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRowRows(AstRowRows a);
        
        /// <summary>
        /// compression_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCompressionMode(AstCompressionMode a);
        
        /// <summary>
        /// start_end : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStartEnd(AstStartEnd a);
        
        /// <summary>
        /// generation_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitGenerationMode(AstGenerationMode a);
        
        /// <summary>
        /// encryption_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEncryptionMode(AstEncryptionMode a);
        
        /// <summary>
        /// tableoption_cluster_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTableoptionClusterMode(AstTableoptionClusterMode a);
        
        /// <summary>
        /// lock_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLockMode(AstLockMode a);
        
        /// <summary>
        /// check_nocheck : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCheckNocheck(AstCheckNocheck a);
        
        /// <summary>
        /// data_type_scaled : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDataTypeScaled(AstDataTypeScaled a);
        
        /// <summary>
        /// abord_after_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAbordAfterMode(AstAbordAfterMode a);
        
        /// <summary>
        /// local_global : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLocalGlobal(AstLocalGlobal a);
        
        /// <summary>
        /// state_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStateEnum(AstStateEnum a);
        
        /// <summary>
        /// authentication_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAuthenticationMode(AstAuthenticationMode a);
        
        /// <summary>
        /// encryption_state : ENCRYPTION EQUAL DISABLED 
        /// </summary>
        void VisitEncryptionState(AstEncryptionState.AstEncryptionState1 a);
        
        /// <summary>
        /// encryption_state : ENCRYPTION EQUAL SUPPORTED 
        /// </summary>
        void VisitEncryptionState(AstEncryptionState.AstEncryptionState2 a);
        
        /// <summary>
        /// encryption_state : ENCRYPTION EQUAL REQUIRED 
        /// </summary>
        void VisitEncryptionState(AstEncryptionState.AstEncryptionState3 a);
        
        /// <summary>
        /// encryption_algorithm : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEncryptionAlgorithm(AstEncryptionAlgorithm a);
        
        /// <summary>
        /// role_mirroring : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRoleMirroring(AstRoleMirroring a);
        
        /// <summary>
        /// partner_option_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPartnerOptionEnum(AstPartnerOptionEnum a);
        
        /// <summary>
        /// delayed_durability : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDelayedDurability(AstDelayedDurability a);
        
        /// <summary>
        /// suspend_resume : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSuspendResume(AstSuspendResume a);
        
        /// <summary>
        /// parameterization_option : PARAMETERIZATION SIMPLE 
        /// </summary>
        void VisitParameterizationOption(AstParameterizationOption.AstParameterizationOption1 a);
        
        /// <summary>
        /// parameterization_option : PARAMETERIZATION FORCED 
        /// </summary>
        void VisitParameterizationOption(AstParameterizationOption.AstParameterizationOption2 a);
        
        /// <summary>
        /// recovery_option_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRecoveryOptionEnum(AstRecoveryOptionEnum a);
        
        /// <summary>
        /// seconds_minutes : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSecondsMinutes(AstSecondsMinutes a);
        
        /// <summary>
        /// compression : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCompression(AstCompression a);
        
        /// <summary>
        /// init_no_init : Bb.Generators.ModelMethod
        /// </summary>
        void VisitInitNoInit(AstInitNoInit a);
        
        /// <summary>
        /// no_skip : Bb.Generators.ModelMethod
        /// </summary>
        void VisitNoSkip(AstNoSkip a);
        
        /// <summary>
        /// format_noformat : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFormatNoformat(AstFormatNoformat a);
        
        /// <summary>
        /// login_user : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLoginUser(AstLoginUser a);
        
        /// <summary>
        /// output_out : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOutputOut(AstOutputOut a);
        
        /// <summary>
        /// start_date_expiry_date : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStartDateExpiryDate(AstStartDateExpiryDate a);
        
        /// <summary>
        /// execute_clause_mode_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExecuteClauseModeEnum(AstExecuteClauseModeEnum a);
        
        /// <summary>
        /// content_document : Bb.Generators.ModelMethod
        /// </summary>
        void VisitContentDocument(AstContentDocument a);
        
        /// <summary>
        /// materialized_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMaterializedMode(AstMaterializedMode a);
        
        /// <summary>
        /// column_modifier_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitColumnModifierEnum(AstColumnModifierEnum a);
        
        /// <summary>
        /// compute_as : Bb.Generators.ModelMethod
        /// </summary>
        void VisitComputeAs(AstComputeAs a);
        
        /// <summary>
        /// primary_key_unique : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPrimaryKeyUnique(AstPrimaryKeyUnique a);
        
        /// <summary>
        /// declare_set_cursor_common_partial_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDeclareSetCursorCommonPartialEnum(AstDeclareSetCursorCommonPartialEnum a);
        
        /// <summary>
        /// absolute_relative : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAbsoluteRelative(AstAbsoluteRelative a);
        
        /// <summary>
        /// fetch_cursor_strategy : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFetchCursorStrategy(AstFetchCursorStrategy a);
        
        /// <summary>
        /// statistic_kind : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStatisticKind(AstStatisticKind a);
        
        /// <summary>
        /// transaction_isolation : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTransactionIsolation(AstTransactionIsolation a);
        
        /// <summary>
        /// special_list : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSpecialList(AstSpecialList a);
        
        /// <summary>
        /// expression_operator : Bb.Generators.ModelMethod
        /// </summary>
        void VisitExpressionOperator(AstExpressionOperator a);
        
        /// <summary>
        /// parameter : Bb.Generators.ModelMethod
        /// </summary>
        void VisitParameter(AstParameter a);
        
        /// <summary>
        /// all_some_any : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAllSomeAny(AstAllSomeAny a);
        
        /// <summary>
        /// join_mode : Bb.Generators.ModelMethod
        /// </summary>
        void VisitJoinMode(AstJoinMode a);
        
        /// <summary>
        /// all_distinct : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAllDistinct(AstAllDistinct a);
        
        /// <summary>
        /// delay_time_timeout : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDelayTimeTimeout(AstDelayTimeTimeout a);
        
        /// <summary>
        /// creation_disposition : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCreationDisposition(AstCreationDisposition a);
        
        /// <summary>
        /// asymetric_algorithm : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAsymetricAlgorithm(AstAsymetricAlgorithm a);
        
        /// <summary>
        /// add_remove : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAddRemove(AstAddRemove a);
        
        /// <summary>
        /// restart_remove : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRestartRemove(AstRestartRemove a);
        
        /// <summary>
        /// synch_asynch : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSynchAsynch(AstSynchAsynch a);
        
        /// <summary>
        /// auto_manual : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAutoManual(AstAutoManual a);
        
        /// <summary>
        /// real_write_all : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRealWriteAll(AstRealWriteAll a);
        
        /// <summary>
        /// no_real_write_all : Bb.Generators.ModelMethod
        /// </summary>
        void VisitNoRealWriteAll(AstNoRealWriteAll a);
        
        /// <summary>
        /// primary_secondary_none : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPrimarySecondaryNone(AstPrimarySecondaryNone a);
        
        /// <summary>
        /// grant_deny : Bb.Generators.ModelMethod
        /// </summary>
        void VisitGrantDeny(AstGrantDeny a);
        
        /// <summary>
        /// add_drop : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAddDrop(AstAddDrop a);
        
        /// <summary>
        /// event_session_predicate_leaf_ope : EQUAL 
        /// </summary>
        void VisitEventSessionPredicateLeafOpe(AstEventSessionPredicateLeafOpe.AstEventSessionPredicateLeafOpe1 a);
        
        /// <summary>
        /// event_session_predicate_leaf_ope : LESS GREATER 
        /// </summary>
        void VisitEventSessionPredicateLeafOpe(AstEventSessionPredicateLeafOpe.AstEventSessionPredicateLeafOpe2 a);
        
        /// <summary>
        /// event_session_predicate_leaf_ope : EXCLAMATION EQUAL 
        /// </summary>
        void VisitEventSessionPredicateLeafOpe(AstEventSessionPredicateLeafOpe.AstEventSessionPredicateLeafOpe3 a);
        
        /// <summary>
        /// event_session_predicate_leaf_ope : GREATER 
        /// </summary>
        void VisitEventSessionPredicateLeafOpe(AstEventSessionPredicateLeafOpe.AstEventSessionPredicateLeafOpe4 a);
        
        /// <summary>
        /// event_session_predicate_leaf_ope : GREATER EQUAL 
        /// </summary>
        void VisitEventSessionPredicateLeafOpe(AstEventSessionPredicateLeafOpe.AstEventSessionPredicateLeafOpe5 a);
        
        /// <summary>
        /// event_session_predicate_leaf_ope : LESS 
        /// </summary>
        void VisitEventSessionPredicateLeafOpe(AstEventSessionPredicateLeafOpe.AstEventSessionPredicateLeafOpe6 a);
        
        /// <summary>
        /// event_session_predicate_leaf_ope : LESS EQUAL 
        /// </summary>
        void VisitEventSessionPredicateLeafOpe(AstEventSessionPredicateLeafOpe.AstEventSessionPredicateLeafOpe7 a);
        
        /// <summary>
        /// set_add : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSetAdd(AstSetAdd a);
        
        /// <summary>
        /// platform : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPlatform(AstPlatform a);
        
        /// <summary>
        /// code_language : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCodeLanguage(AstCodeLanguage a);
        
        /// <summary>
        /// pwd_strategy : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPwdStrategy(AstPwdStrategy a);
        
        /// <summary>
        /// enable_disable : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEnableDisable(AstEnableDisable a);
        
        /// <summary>
        /// message_validation_value_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitMessageValidationValueEnum(AstMessageValidationValueEnum a);
        
        /// <summary>
        /// sequence_cycle : CYCLE 
        /// </summary>
        void VisitSequenceCycle(AstSequenceCycle.AstSequenceCycle1 a);
        
        /// <summary>
        /// sequence_cycle : NO CYCLE 
        /// </summary>
        void VisitSequenceCycle(AstSequenceCycle.AstSequenceCycle2 a);
        
        /// <summary>
        /// size_unity : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSizeUnity(AstSizeUnity a);
        
        /// <summary>
        /// continue_shutdown : Bb.Generators.ModelMethod
        /// </summary>
        void VisitContinueShutdown(AstContinueShutdown a);
        
        /// <summary>
        /// audit_operator : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAuditOperator(AstAuditOperator a);
        
        /// <summary>
        /// and_or : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAndOr(AstAndOr a);
        
        /// <summary>
        /// size_value : decimal MB 
        /// </summary>
        void VisitSizeValue(AstSizeValue.AstSizeValue1 a);
        
        /// <summary>
        /// size_value : DEFAULT 
        /// </summary>
        void VisitSizeValue(AstSizeValue.AstSizeValue2 a);
        
        /// <summary>
        /// decimal_default : decimal 
        /// </summary>
        void VisitDecimalDefault(AstDecimalDefault.AstDecimalDefault1 a);
        
        /// <summary>
        /// decimal_default : DEFAULT 
        /// </summary>
        void VisitDecimalDefault(AstDecimalDefault.AstDecimalDefault2 a);
        
        /// <summary>
        /// for_from : Bb.Generators.ModelMethod
        /// </summary>
        void VisitForFrom(AstForFrom a);
        
        /// <summary>
        /// importance_level : Bb.Generators.ModelMethod
        /// </summary>
        void VisitImportanceLevel(AstImportanceLevel a);
        
        /// <summary>
        /// left_right : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLeftRight(AstLeftRight a);
        
        /// <summary>
        /// none_partial : Bb.Generators.ModelMethod
        /// </summary>
        void VisitNonePartial(AstNonePartial a);
        
        /// <summary>
        /// index_strategy : Bb.Generators.ModelMethod
        /// </summary>
        void VisitIndexStrategy(AstIndexStrategy a);
        
        /// <summary>
        /// view_attribute : Bb.Generators.ModelMethod
        /// </summary>
        void VisitViewAttribute(AstViewAttribute a);
        
        /// <summary>
        /// filegroup_predicate : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFilegroupPredicate(AstFilegroupPredicate a);
        
        /// <summary>
        /// statistic_value : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStatisticValue(AstStatisticValue a);
        
        /// <summary>
        /// period : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPeriod(AstPeriod a);
        
        /// <summary>
        /// db_state_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDbStateOption(AstDbStateOption a);
        
        /// <summary>
        /// db_update_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDbUpdateOption(AstDbUpdateOption a);
        
        /// <summary>
        /// db_user_access_option : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDbUserAccessOption(AstDbUserAccessOption a);
        
        /// <summary>
        /// disk_tape_url : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDiskTapeUrl(AstDiskTapeUrl a);
        
        /// <summary>
        /// file_file_group : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFileFileGroup(AstFileFileGroup a);
        
        /// <summary>
        /// load_moun_load : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLoadMounLoad(AstLoadMounLoad a);
        
        /// <summary>
        /// rewind : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRewind(AstRewind a);
        
        /// <summary>
        /// algorithm_short : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlgorithmShort(AstAlgorithmShort a);
        
        /// <summary>
        /// encryption_decryption : Bb.Generators.ModelMethod
        /// </summary>
        void VisitEncryptionDecryption(AstEncryptionDecryption a);
        
        /// <summary>
        /// algorithm : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAlgorithm(AstAlgorithm a);
        
        /// <summary>
        /// grant_permission_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitGrantPermissionEnum(AstGrantPermissionEnum a);
        
        /// <summary>
        /// transaction : Bb.Generators.ModelMethod
        /// </summary>
        void VisitTransaction(AstTransaction a);
        
        /// <summary>
        /// on_delete : ON DELETE NO ACTION 
        /// </summary>
        void VisitOnDelete(AstOnDelete.AstOnDelete1 a);
        
        /// <summary>
        /// on_delete : ON DELETE CASCADE 
        /// </summary>
        void VisitOnDelete(AstOnDelete.AstOnDelete2 a);
        
        /// <summary>
        /// on_delete : ON DELETE SET NULL_ 
        /// </summary>
        void VisitOnDelete(AstOnDelete.AstOnDelete3 a);
        
        /// <summary>
        /// on_delete : ON DELETE SET DEFAULT 
        /// </summary>
        void VisitOnDelete(AstOnDelete.AstOnDelete4 a);
        
        /// <summary>
        /// on_update : ON UPDATE NO ACTION 
        /// </summary>
        void VisitOnUpdate(AstOnUpdate.AstOnUpdate1 a);
        
        /// <summary>
        /// on_update : ON UPDATE CASCADE 
        /// </summary>
        void VisitOnUpdate(AstOnUpdate.AstOnUpdate2 a);
        
        /// <summary>
        /// on_update : ON UPDATE SET NULL_ 
        /// </summary>
        void VisitOnUpdate(AstOnUpdate.AstOnUpdate3 a);
        
        /// <summary>
        /// on_update : ON UPDATE SET DEFAULT 
        /// </summary>
        void VisitOnUpdate(AstOnUpdate.AstOnUpdate4 a);
        
        /// <summary>
        /// sensitive : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSensitive(AstSensitive a);
        
        /// <summary>
        /// plus_minus : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPlusMinus(AstPlusMinus a);
        
        /// <summary>
        /// first_next : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFirstNext(AstFirstNext a);
        
        /// <summary>
        /// absent_xsinil : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAbsentXsinil(AstAbsentXsinil a);
        
        /// <summary>
        /// auto_path : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAutoPath(AstAutoPath a);
        
        /// <summary>
        /// update_option_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitUpdateOptionEnum(AstUpdateOptionEnum a);
        
        /// <summary>
        /// star_asterisk : Bb.Generators.ModelMethod
        /// </summary>
        void VisitStarAsterisk(AstStarAsterisk a);
        
        /// <summary>
        /// updated_asterisk : INSERTED DOT STAR 
        /// </summary>
        void VisitUpdatedAsterisk(AstUpdatedAsterisk.AstUpdatedAsterisk1 a);
        
        /// <summary>
        /// updated_asterisk : DELETED DOT STAR 
        /// </summary>
        void VisitUpdatedAsterisk(AstUpdatedAsterisk.AstUpdatedAsterisk2 a);
        
        /// <summary>
        /// join_type : Bb.Generators.ModelMethod
        /// </summary>
        void VisitJoinType(AstJoinType a);
        
        /// <summary>
        /// join_hint : Bb.Generators.ModelMethod
        /// </summary>
        void VisitJoinHint(AstJoinHint a);
        
        /// <summary>
        /// apply_style : Bb.Generators.ModelMethod
        /// </summary>
        void VisitApplyStyle(AstApplyStyle a);
        
        /// <summary>
        /// containstable_freetexttable : Bb.Generators.ModelMethod
        /// </summary>
        void VisitContainstableFreetexttable(AstContainstableFreetexttable a);
        
        /// <summary>
        /// semantic_table : Bb.Generators.ModelMethod
        /// </summary>
        void VisitSemanticTable(AstSemanticTable a);
        
        /// <summary>
        /// ranking_windowed : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRankingWindowed(AstRankingWindowed a);
        
        /// <summary>
        /// agg_function : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAggFunction(AstAggFunction a);
        
        /// <summary>
        /// count_count_big : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCountCountBig(AstCountCountBig a);
        
        /// <summary>
        /// percentil : Bb.Generators.ModelMethod
        /// </summary>
        void VisitPercentil(AstPercentil a);
        
        /// <summary>
        /// cume_percent : Bb.Generators.ModelMethod
        /// </summary>
        void VisitCumePercent(AstCumePercent a);
        
        /// <summary>
        /// first_last_value : Bb.Generators.ModelMethod
        /// </summary>
        void VisitFirstLastValue(AstFirstLastValue a);
        
        /// <summary>
        /// lag_lead : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLagLead(AstLagLead a);
        
        /// <summary>
        /// row_range : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRowRange(AstRowRange a);
        
        /// <summary>
        /// off_read_only_full : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOffReadOnlyFull(AstOffReadOnlyFull a);
        
        /// <summary>
        /// asc_desc : Bb.Generators.ModelMethod
        /// </summary>
        void VisitAscDesc(AstAscDesc a);
        
        /// <summary>
        /// on_off : Bb.Generators.ModelMethod
        /// </summary>
        void VisitOnOff(AstOnOff a);
        
        /// <summary>
        /// clustered : Bb.Generators.ModelMethod
        /// </summary>
        void VisitClustered(AstClustered a);
        
        void VisitNullNotnull(AstNullNotnull a);
        
        /// <summary>
        /// scalar_function_name_enum : Bb.Generators.ModelMethod
        /// </summary>
        void VisitScalarFunctionNameEnum(AstScalarFunctionNameEnum a);
        
        /// <summary>
        /// relayed_conversation : Bb.Generators.ModelMethod
        /// </summary>
        void VisitRelayedConversation(AstRelayedConversation a);
        
        /// <summary>
        /// comparison_operator : EQUAL 
        /// </summary>
        void VisitComparisonOperator(AstComparisonOperator.AstComparisonOperator1 a);
        
        /// <summary>
        /// comparison_operator : GREATER 
        /// </summary>
        void VisitComparisonOperator(AstComparisonOperator.AstComparisonOperator2 a);
        
        /// <summary>
        /// comparison_operator : LESS 
        /// </summary>
        void VisitComparisonOperator(AstComparisonOperator.AstComparisonOperator3 a);
        
        /// <summary>
        /// comparison_operator : LESS EQUAL 
        /// </summary>
        void VisitComparisonOperator(AstComparisonOperator.AstComparisonOperator4 a);
        
        /// <summary>
        /// comparison_operator : GREATER EQUAL 
        /// </summary>
        void VisitComparisonOperator(AstComparisonOperator.AstComparisonOperator5 a);
        
        /// <summary>
        /// comparison_operator : LESS GREATER 
        /// </summary>
        void VisitComparisonOperator(AstComparisonOperator.AstComparisonOperator6 a);
        
        /// <summary>
        /// comparison_operator : EXCLAMATION EQUAL 
        /// </summary>
        void VisitComparisonOperator(AstComparisonOperator.AstComparisonOperator7 a);
        
        /// <summary>
        /// comparison_operator : EXCLAMATION GREATER 
        /// </summary>
        void VisitComparisonOperator(AstComparisonOperator.AstComparisonOperator8 a);
        
        /// <summary>
        /// comparison_operator : EXCLAMATION LESS 
        /// </summary>
        void VisitComparisonOperator(AstComparisonOperator.AstComparisonOperator9 a);
        
        /// <summary>
        /// assignment_operator : PLUS_ASSIGN 
        /// </summary>
        void VisitAssignmentOperator(AstAssignmentOperator.AstAssignmentOperator1 a);
        
        /// <summary>
        /// assignment_operator : MINUS_ASSIGN 
        /// </summary>
        void VisitAssignmentOperator(AstAssignmentOperator.AstAssignmentOperator2 a);
        
        /// <summary>
        /// assignment_operator : MULT_ASSIGN 
        /// </summary>
        void VisitAssignmentOperator(AstAssignmentOperator.AstAssignmentOperator3 a);
        
        /// <summary>
        /// assignment_operator : DIV_ASSIGN 
        /// </summary>
        void VisitAssignmentOperator(AstAssignmentOperator.AstAssignmentOperator4 a);
        
        /// <summary>
        /// assignment_operator : MOD_ASSIGN 
        /// </summary>
        void VisitAssignmentOperator(AstAssignmentOperator.AstAssignmentOperator5 a);
        
        /// <summary>
        /// assignment_operator : AND_ASSIGN 
        /// </summary>
        void VisitAssignmentOperator(AstAssignmentOperator.AstAssignmentOperator6 a);
        
        /// <summary>
        /// assignment_operator : XOR_ASSIGN 
        /// </summary>
        void VisitAssignmentOperator(AstAssignmentOperator.AstAssignmentOperator7 a);
        
        /// <summary>
        /// assignment_operator : OR_ASSIGN 
        /// </summary>
        void VisitAssignmentOperator(AstAssignmentOperator.AstAssignmentOperator8 a);
        
        /// <summary>
        /// log_seterror_nowait : Bb.Generators.ModelMethod
        /// </summary>
        void VisitLogSeterrorNowait(AstLogSeterrorNowait a);
        
        /// <summary>
        /// deleteed_inserted : Bb.Generators.ModelMethod
        /// </summary>
        void VisitDeleteedInserted(AstDeleteedInserted a);
    }
}
