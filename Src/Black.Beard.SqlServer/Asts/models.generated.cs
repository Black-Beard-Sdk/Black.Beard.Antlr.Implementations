//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bb.Asts {
    using System;
    using Bb.Asts;
    
    
    public partial class Asttsql_file : AstBase {
        
        public Asttsql_file(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbatch : AstBase {
        
        public Astbatch(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbatch_level_statement : AstBase {
        
        public Astbatch_level_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsql_clauses : AstBase {
        
        public Astsql_clauses(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdml_clause : AstBase {
        
        public Astdml_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astddl_clause : AstBase {
        
        public Astddl_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbackup_statement : AstBase {
        
        public Astbackup_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcfl_statement : AstBase {
        
        public Astcfl_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astblock_statement : AstBase {
        
        public Astblock_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbreak_statement : AstBase {
        
        public Astbreak_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcontinue_statement : AstBase {
        
        public Astcontinue_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astgoto_statement : AstBase {
        
        public Astgoto_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astreturn_statement : AstBase {
        
        public Astreturn_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astif_statement : AstBase {
        
        public Astif_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astthrow_statement : AstBase {
        
        public Astthrow_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astthrow_error_number : AstBase {
        
        public Astthrow_error_number(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astthrow_message : AstBase {
        
        public Astthrow_message(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astthrow_state : AstBase {
        
        public Astthrow_state(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttry_catch_statement : AstBase {
        
        public Asttry_catch_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astwaitfor_statement : AstBase {
        
        public Astwaitfor_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astwhile_statement : AstBase {
        
        public Astwhile_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astprint_statement : AstBase {
        
        public Astprint_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astraiseerror_statement : AstBase {
        
        public Astraiseerror_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astempty_statement : AstBase {
        
        public Astempty_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astanother_statement : AstBase {
        
        public Astanother_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_application_role : AstBase {
        
        public Astalter_application_role(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_application_role : AstBase {
        
        public Astcreate_application_role(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_aggregate : AstBase {
        
        public Astdrop_aggregate(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_application_role : AstBase {
        
        public Astdrop_application_role(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly : AstBase {
        
        public Astalter_assembly(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_start : AstBase {
        
        public Astalter_assembly_start(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_clause : AstBase {
        
        public Astalter_assembly_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_from_clause : AstBase {
        
        public Astalter_assembly_from_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_from_clause_start : AstBase {
        
        public Astalter_assembly_from_clause_start(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_drop_clause : AstBase {
        
        public Astalter_assembly_drop_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_drop_multiple_files : AstBase {
        
        public Astalter_assembly_drop_multiple_files(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_drop : AstBase {
        
        public Astalter_assembly_drop(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_add_clause : AstBase {
        
        public Astalter_assembly_add_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_asssembly_add_clause_start : AstBase {
        
        public Astalter_asssembly_add_clause_start(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_client_file_clause : AstBase {
        
        public Astalter_assembly_client_file_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_file_name : AstBase {
        
        public Astalter_assembly_file_name(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_file_bits : AstBase {
        
        public Astalter_assembly_file_bits(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_as : AstBase {
        
        public Astalter_assembly_as(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_with_clause : AstBase {
        
        public Astalter_assembly_with_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_assembly_with : AstBase {
        
        public Astalter_assembly_with(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astclient_assembly_specifier : AstBase {
        
        public Astclient_assembly_specifier(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astassembly_option : AstBase {
        
        public Astassembly_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astnetwork_file_share : AstBase {
        
        public Astnetwork_file_share(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astnetwork_computer : AstBase {
        
        public Astnetwork_computer(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astnetwork_file_start : AstBase {
        
        public Astnetwork_file_start(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfile_path : AstBase {
        
        public Astfile_path(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfile_directory_path_separator : AstBase {
        
        public Astfile_directory_path_separator(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astlocal_file : AstBase {
        
        public Astlocal_file(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astlocal_drive : AstBase {
        
        public Astlocal_drive(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmultiple_local_files : AstBase {
        
        public Astmultiple_local_files(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmultiple_local_file_start : AstBase {
        
        public Astmultiple_local_file_start(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_assembly : AstBase {
        
        public Astcreate_assembly(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_assembly : AstBase {
        
        public Astdrop_assembly(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_asymmetric_key : AstBase {
        
        public Astalter_asymmetric_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_asymmetric_key_start : AstBase {
        
        public Astalter_asymmetric_key_start(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astasymmetric_key_option : AstBase {
        
        public Astasymmetric_key_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astasymmetric_key_option_start : AstBase {
        
        public Astasymmetric_key_option_start(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astasymmetric_key_password_change_option : AstBase {
        
        public Astasymmetric_key_password_change_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_asymmetric_key : AstBase {
        
        public Astcreate_asymmetric_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_asymmetric_key : AstBase {
        
        public Astdrop_asymmetric_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_authorization : AstBase {
        
        public Astalter_authorization(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astauthorization_grantee : AstBase {
        
        public Astauthorization_grantee(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astentity_to : AstBase {
        
        public Astentity_to(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolon_colon : AstBase {
        
        public Astcolon_colon(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_authorization_start : AstBase {
        
        public Astalter_authorization_start(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_authorization_for_sql_database : AstBase {
        
        public Astalter_authorization_for_sql_database(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_authorization_for_azure_dw : AstBase {
        
        public Astalter_authorization_for_azure_dw(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_authorization_for_parallel_dw : AstBase {
        
        public Astalter_authorization_for_parallel_dw(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astclass_type : AstBase {
        
        public Astclass_type(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astclass_type_for_sql_database : AstBase {
        
        public Astclass_type_for_sql_database(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astclass_type_for_azure_dw : AstBase {
        
        public Astclass_type_for_azure_dw(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astclass_type_for_parallel_dw : AstBase {
        
        public Astclass_type_for_parallel_dw(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astclass_type_for_grant : AstBase {
        
        public Astclass_type_for_grant(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_availability_group : AstBase {
        
        public Astdrop_availability_group(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_availability_group : AstBase {
        
        public Astalter_availability_group(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_availability_group_start : AstBase {
        
        public Astalter_availability_group_start(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_availability_group_options : AstBase {
        
        public Astalter_availability_group_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astip_v4_failover : AstBase {
        
        public Astip_v4_failover(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astip_v6_failover : AstBase {
        
        public Astip_v6_failover(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_or_alter_broker_priority : AstBase {
        
        public Astcreate_or_alter_broker_priority(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_broker_priority : AstBase {
        
        public Astdrop_broker_priority(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_certificate : AstBase {
        
        public Astalter_certificate(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_column_encryption_key : AstBase {
        
        public Astalter_column_encryption_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_column_encryption_key : AstBase {
        
        public Astcreate_column_encryption_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_certificate : AstBase {
        
        public Astdrop_certificate(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_column_encryption_key : AstBase {
        
        public Astdrop_column_encryption_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_column_master_key : AstBase {
        
        public Astdrop_column_master_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_contract : AstBase {
        
        public Astdrop_contract(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_credential : AstBase {
        
        public Astdrop_credential(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_cryptograhic_provider : AstBase {
        
        public Astdrop_cryptograhic_provider(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_database : AstBase {
        
        public Astdrop_database(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_database_audit_specification : AstBase {
        
        public Astdrop_database_audit_specification(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_database_encryption_key : AstBase {
        
        public Astdrop_database_encryption_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_database_scoped_credential : AstBase {
        
        public Astdrop_database_scoped_credential(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_default : AstBase {
        
        public Astdrop_default(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_endpoint : AstBase {
        
        public Astdrop_endpoint(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_external_data_source : AstBase {
        
        public Astdrop_external_data_source(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_external_file_format : AstBase {
        
        public Astdrop_external_file_format(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_external_library : AstBase {
        
        public Astdrop_external_library(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_external_resource_pool : AstBase {
        
        public Astdrop_external_resource_pool(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_external_table : AstBase {
        
        public Astdrop_external_table(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_event_notifications : AstBase {
        
        public Astdrop_event_notifications(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_event_session : AstBase {
        
        public Astdrop_event_session(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_fulltext_catalog : AstBase {
        
        public Astdrop_fulltext_catalog(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_fulltext_index : AstBase {
        
        public Astdrop_fulltext_index(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_fulltext_stoplist : AstBase {
        
        public Astdrop_fulltext_stoplist(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_login : AstBase {
        
        public Astdrop_login(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_master_key : AstBase {
        
        public Astdrop_master_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_message_type : AstBase {
        
        public Astdrop_message_type(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_partition_function : AstBase {
        
        public Astdrop_partition_function(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_partition_scheme : AstBase {
        
        public Astdrop_partition_scheme(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_queue : AstBase {
        
        public Astdrop_queue(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_remote_service_binding : AstBase {
        
        public Astdrop_remote_service_binding(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_resource_pool : AstBase {
        
        public Astdrop_resource_pool(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_db_role : AstBase {
        
        public Astdrop_db_role(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_route : AstBase {
        
        public Astdrop_route(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_rule : AstBase {
        
        public Astdrop_rule(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_schema : AstBase {
        
        public Astdrop_schema(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_search_property_list : AstBase {
        
        public Astdrop_search_property_list(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_security_policy : AstBase {
        
        public Astdrop_security_policy(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_sequence : AstBase {
        
        public Astdrop_sequence(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_server_audit : AstBase {
        
        public Astdrop_server_audit(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_server_audit_specification : AstBase {
        
        public Astdrop_server_audit_specification(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_server_role : AstBase {
        
        public Astdrop_server_role(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_service : AstBase {
        
        public Astdrop_service(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_signature : AstBase {
        
        public Astdrop_signature(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_statistics_name_azure_dw_and_pdw : AstBase {
        
        public Astdrop_statistics_name_azure_dw_and_pdw(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_symmetric_key : AstBase {
        
        public Astdrop_symmetric_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_synonym : AstBase {
        
        public Astdrop_synonym(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_user : AstBase {
        
        public Astdrop_user(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_workload_group : AstBase {
        
        public Astdrop_workload_group(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_xml_schema_collection : AstBase {
        
        public Astdrop_xml_schema_collection(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdisable_trigger : AstBase {
        
        public Astdisable_trigger(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astenable_trigger : AstBase {
        
        public Astenable_trigger(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astlock_table : AstBase {
        
        public Astlock_table(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttruncate_table : AstBase {
        
        public Asttruncate_table(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_column_master_key : AstBase {
        
        public Astcreate_column_master_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_credential : AstBase {
        
        public Astalter_credential(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_credential : AstBase {
        
        public Astcreate_credential(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_cryptographic_provider : AstBase {
        
        public Astalter_cryptographic_provider(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_cryptographic_provider : AstBase {
        
        public Astcreate_cryptographic_provider(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_event_notification : AstBase {
        
        public Astcreate_event_notification(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_or_alter_event_session : AstBase {
        
        public Astcreate_or_alter_event_session(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astevent_session_predicate_expression : AstBase {
        
        public Astevent_session_predicate_expression(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astevent_session_predicate_factor : AstBase {
        
        public Astevent_session_predicate_factor(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astevent_session_predicate_leaf : AstBase {
        
        public Astevent_session_predicate_leaf(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_external_data_source : AstBase {
        
        public Astalter_external_data_source(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_external_library : AstBase {
        
        public Astalter_external_library(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_external_library : AstBase {
        
        public Astcreate_external_library(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_external_resource_pool : AstBase {
        
        public Astalter_external_resource_pool(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_external_resource_pool : AstBase {
        
        public Astcreate_external_resource_pool(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_fulltext_catalog : AstBase {
        
        public Astalter_fulltext_catalog(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_fulltext_catalog : AstBase {
        
        public Astcreate_fulltext_catalog(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_fulltext_stoplist : AstBase {
        
        public Astalter_fulltext_stoplist(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_fulltext_stoplist : AstBase {
        
        public Astcreate_fulltext_stoplist(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_login_sql_server : AstBase {
        
        public Astalter_login_sql_server(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_login_sql_server : AstBase {
        
        public Astcreate_login_sql_server(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_login_azure_sql : AstBase {
        
        public Astalter_login_azure_sql(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_login_azure_sql : AstBase {
        
        public Astcreate_login_azure_sql(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_login_azure_sql_dw_and_pdw : AstBase {
        
        public Astalter_login_azure_sql_dw_and_pdw(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_login_pdw : AstBase {
        
        public Astcreate_login_pdw(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_master_key_sql_server : AstBase {
        
        public Astalter_master_key_sql_server(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_master_key_sql_server : AstBase {
        
        public Astcreate_master_key_sql_server(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_master_key_azure_sql : AstBase {
        
        public Astalter_master_key_azure_sql(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_master_key_azure_sql : AstBase {
        
        public Astcreate_master_key_azure_sql(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_message_type : AstBase {
        
        public Astalter_message_type(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_partition_function : AstBase {
        
        public Astalter_partition_function(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_partition_scheme : AstBase {
        
        public Astalter_partition_scheme(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_remote_service_binding : AstBase {
        
        public Astalter_remote_service_binding(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_remote_service_binding : AstBase {
        
        public Astcreate_remote_service_binding(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_resource_pool : AstBase {
        
        public Astcreate_resource_pool(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_resource_governor : AstBase {
        
        public Astalter_resource_governor(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_db_role : AstBase {
        
        public Astalter_db_role(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_db_role : AstBase {
        
        public Astcreate_db_role(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_route : AstBase {
        
        public Astcreate_route(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_rule : AstBase {
        
        public Astcreate_rule(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_schema_sql : AstBase {
        
        public Astalter_schema_sql(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_schema : AstBase {
        
        public Astcreate_schema(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_schema_azure_sql_dw_and_pdw : AstBase {
        
        public Astcreate_schema_azure_sql_dw_and_pdw(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_schema_azure_sql_dw_and_pdw : AstBase {
        
        public Astalter_schema_azure_sql_dw_and_pdw(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_search_property_list : AstBase {
        
        public Astcreate_search_property_list(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_security_policy : AstBase {
        
        public Astcreate_security_policy(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_sequence : AstBase {
        
        public Astalter_sequence(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_sequence : AstBase {
        
        public Astcreate_sequence(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_server_audit : AstBase {
        
        public Astalter_server_audit(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_server_audit : AstBase {
        
        public Astcreate_server_audit(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_server_audit_specification : AstBase {
        
        public Astalter_server_audit_specification(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_server_audit_specification : AstBase {
        
        public Astcreate_server_audit_specification(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_server_configuration : AstBase {
        
        public Astalter_server_configuration(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_server_role : AstBase {
        
        public Astalter_server_role(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_server_role : AstBase {
        
        public Astcreate_server_role(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_server_role_pdw : AstBase {
        
        public Astalter_server_role_pdw(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_service : AstBase {
        
        public Astalter_service(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_service : AstBase {
        
        public Astcreate_service(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_service_master_key : AstBase {
        
        public Astalter_service_master_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_symmetric_key : AstBase {
        
        public Astalter_symmetric_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_synonym : AstBase {
        
        public Astcreate_synonym(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_user : AstBase {
        
        public Astalter_user(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_user : AstBase {
        
        public Astcreate_user(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_user_azure_sql_dw : AstBase {
        
        public Astcreate_user_azure_sql_dw(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_user_azure_sql : AstBase {
        
        public Astalter_user_azure_sql(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_workload_group : AstBase {
        
        public Astalter_workload_group(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_workload_group : AstBase {
        
        public Astcreate_workload_group(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_xml_schema_collection : AstBase {
        
        public Astcreate_xml_schema_collection(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_partition_function : AstBase {
        
        public Astcreate_partition_function(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_partition_scheme : AstBase {
        
        public Astcreate_partition_scheme(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_queue : AstBase {
        
        public Astcreate_queue(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astqueue_settings : AstBase {
        
        public Astqueue_settings(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_queue : AstBase {
        
        public Astalter_queue(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astqueue_action : AstBase {
        
        public Astqueue_action(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astqueue_rebuild_options : AstBase {
        
        public Astqueue_rebuild_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_contract : AstBase {
        
        public Astcreate_contract(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astconversation_statement : AstBase {
        
        public Astconversation_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmessage_statement : AstBase {
        
        public Astmessage_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmerge_statement : AstBase {
        
        public Astmerge_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astwhen_matches : AstBase {
        
        public Astwhen_matches(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmerge_matched : AstBase {
        
        public Astmerge_matched(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmerge_not_matched : AstBase {
        
        public Astmerge_not_matched(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdelete_statement : AstBase {
        
        public Astdelete_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdelete_statement_from : AstBase {
        
        public Astdelete_statement_from(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astinsert_statement : AstBase {
        
        public Astinsert_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astinsert_statement_value : AstBase {
        
        public Astinsert_statement_value(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astreceive_statement : AstBase {
        
        public Astreceive_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astselect_statement_standalone : AstBase {
        
        public Astselect_statement_standalone(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astselect_statement : AstBase {
        
        public Astselect_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttime : AstBase {
        
        public Asttime(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astupdate_statement : AstBase {
        
        public Astupdate_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astoutput_clause : AstBase {
        
        public Astoutput_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astoutput_dml_list_elem : AstBase {
        
        public Astoutput_dml_list_elem(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_database : AstBase {
        
        public Astcreate_database(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_index : AstBase {
        
        public Astcreate_index(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_index_options : AstBase {
        
        public Astcreate_index_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astrelational_index_option : AstBase {
        
        public Astrelational_index_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_index : AstBase {
        
        public Astalter_index(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astresumable_index_options : AstBase {
        
        public Astresumable_index_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astresumable_index_option : AstBase {
        
        public Astresumable_index_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astreorganize_partition : AstBase {
        
        public Astreorganize_partition(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astreorganize_options : AstBase {
        
        public Astreorganize_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astreorganize_option : AstBase {
        
        public Astreorganize_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astset_index_options : AstBase {
        
        public Astset_index_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astset_index_option : AstBase {
        
        public Astset_index_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astrebuild_partition : AstBase {
        
        public Astrebuild_partition(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astrebuild_index_options : AstBase {
        
        public Astrebuild_index_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astrebuild_index_option : AstBase {
        
        public Astrebuild_index_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsingle_partition_rebuild_index_options : AstBase {
        
        public Astsingle_partition_rebuild_index_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsingle_partition_rebuild_index_option : AstBase {
        
        public Astsingle_partition_rebuild_index_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Aston_partitions : AstBase {
        
        public Aston_partitions(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_columnstore_index : AstBase {
        
        public Astcreate_columnstore_index(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_columnstore_index_options : AstBase {
        
        public Astcreate_columnstore_index_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumnstore_index_option : AstBase {
        
        public Astcolumnstore_index_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_nonclustered_columnstore_index : AstBase {
        
        public Astcreate_nonclustered_columnstore_index(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_xml_index : AstBase {
        
        public Astcreate_xml_index(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astxml_index_options : AstBase {
        
        public Astxml_index_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astxml_index_option : AstBase {
        
        public Astxml_index_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_or_alter_procedure : AstBase {
        
        public Astcreate_or_alter_procedure(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astas_external_name : AstBase {
        
        public Astas_external_name(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_or_alter_trigger : AstBase {
        
        public Astcreate_or_alter_trigger(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_or_alter_dml_trigger : AstBase {
        
        public Astcreate_or_alter_dml_trigger(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdml_trigger_option : AstBase {
        
        public Astdml_trigger_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdml_trigger_operation : AstBase {
        
        public Astdml_trigger_operation(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_or_alter_ddl_trigger : AstBase {
        
        public Astcreate_or_alter_ddl_trigger(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astddl_trigger_operation : AstBase {
        
        public Astddl_trigger_operation(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_or_alter_function : AstBase {
        
        public Astcreate_or_alter_function(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfunc_body_returns_select : AstBase {
        
        public Astfunc_body_returns_select(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfunc_body_returns_table : AstBase {
        
        public Astfunc_body_returns_table(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfunc_body_returns_scalar : AstBase {
        
        public Astfunc_body_returns_scalar(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astprocedure_param : AstBase {
        
        public Astprocedure_param(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astprocedure_option : AstBase {
        
        public Astprocedure_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfunction_option : AstBase {
        
        public Astfunction_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_statistics : AstBase {
        
        public Astcreate_statistics(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astupdate_statistics : AstBase {
        
        public Astupdate_statistics(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astupdate_statistics_options : AstBase {
        
        public Astupdate_statistics_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astupdate_statistics_option : AstBase {
        
        public Astupdate_statistics_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_table : AstBase {
        
        public Astcreate_table(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_indices : AstBase {
        
        public Asttable_indices(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_options : AstBase {
        
        public Asttable_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_option : AstBase {
        
        public Asttable_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_table_index_options : AstBase {
        
        public Astcreate_table_index_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_table_index_option : AstBase {
        
        public Astcreate_table_index_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_view : AstBase {
        
        public Astcreate_view(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astview_attribute : AstBase {
        
        public Astview_attribute(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_table : AstBase {
        
        public Astalter_table(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astswitch_partition : AstBase {
        
        public Astswitch_partition(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astlow_priority_lock_wait : AstBase {
        
        public Astlow_priority_lock_wait(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_database : AstBase {
        
        public Astalter_database(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astadd_or_modify_files : AstBase {
        
        public Astadd_or_modify_files(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfilespec : AstBase {
        
        public Astfilespec(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astadd_or_modify_filegroups : AstBase {
        
        public Astadd_or_modify_filegroups(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfilegroup_updatability_option : AstBase {
        
        public Astfilegroup_updatability_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdatabase_optionspec : AstBase {
        
        public Astdatabase_optionspec(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astauto_option : AstBase {
        
        public Astauto_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astchange_tracking_option : AstBase {
        
        public Astchange_tracking_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astchange_tracking_option_list : AstBase {
        
        public Astchange_tracking_option_list(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcontainment_option : AstBase {
        
        public Astcontainment_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcursor_option : AstBase {
        
        public Astcursor_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_endpoint : AstBase {
        
        public Astalter_endpoint(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdatabase_mirroring_option : AstBase {
        
        public Astdatabase_mirroring_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmirroring_set_option : AstBase {
        
        public Astmirroring_set_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmirroring_partner : AstBase {
        
        public Astmirroring_partner(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmirroring_witness : AstBase {
        
        public Astmirroring_witness(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astwitness_partner_equal : AstBase {
        
        public Astwitness_partner_equal(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astpartner_option : AstBase {
        
        public Astpartner_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astwitness_option : AstBase {
        
        public Astwitness_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astwitness_server : AstBase {
        
        public Astwitness_server(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astpartner_server : AstBase {
        
        public Astpartner_server(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmirroring_host_port_seperator : AstBase {
        
        public Astmirroring_host_port_seperator(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astpartner_server_tcp_prefix : AstBase {
        
        public Astpartner_server_tcp_prefix(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astport_number : AstBase {
        
        public Astport_number(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asthost : AstBase {
        
        public Asthost(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdate_correlation_optimization_option : AstBase {
        
        public Astdate_correlation_optimization_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdb_encryption_option : AstBase {
        
        public Astdb_encryption_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdb_state_option : AstBase {
        
        public Astdb_state_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdb_update_option : AstBase {
        
        public Astdb_update_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdb_user_access_option : AstBase {
        
        public Astdb_user_access_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdelayed_durability_option : AstBase {
        
        public Astdelayed_durability_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexternal_access_option : AstBase {
        
        public Astexternal_access_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asthadr_options : AstBase {
        
        public Asthadr_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmixed_page_allocation_option : AstBase {
        
        public Astmixed_page_allocation_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astparameterization_option : AstBase {
        
        public Astparameterization_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astrecovery_option : AstBase {
        
        public Astrecovery_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astservice_broker_option : AstBase {
        
        public Astservice_broker_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsnapshot_option : AstBase {
        
        public Astsnapshot_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsql_option : AstBase {
        
        public Astsql_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttarget_recovery_time_option : AstBase {
        
        public Asttarget_recovery_time_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttermination : AstBase {
        
        public Asttermination(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_index : AstBase {
        
        public Astdrop_index(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_relational_or_xml_or_spatial_index : AstBase {
        
        public Astdrop_relational_or_xml_or_spatial_index(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_backward_compatible_index : AstBase {
        
        public Astdrop_backward_compatible_index(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_procedure : AstBase {
        
        public Astdrop_procedure(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_trigger : AstBase {
        
        public Astdrop_trigger(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_dml_trigger : AstBase {
        
        public Astdrop_dml_trigger(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_ddl_trigger : AstBase {
        
        public Astdrop_ddl_trigger(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_function : AstBase {
        
        public Astdrop_function(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_statistics : AstBase {
        
        public Astdrop_statistics(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_table : AstBase {
        
        public Astdrop_table(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_view : AstBase {
        
        public Astdrop_view(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_type : AstBase {
        
        public Astcreate_type(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdrop_type : AstBase {
        
        public Astdrop_type(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astrowset_function_limited : AstBase {
        
        public Astrowset_function_limited(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astopenquery : AstBase {
        
        public Astopenquery(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astopendatasource : AstBase {
        
        public Astopendatasource(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdeclare_statement : AstBase {
        
        public Astdeclare_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astxml_declaration : AstBase {
        
        public Astxml_declaration(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcursor_statement : AstBase {
        
        public Astcursor_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbackup_database : AstBase {
        
        public Astbackup_database(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbackup_log : AstBase {
        
        public Astbackup_log(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbackup_certificate : AstBase {
        
        public Astbackup_certificate(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbackup_master_key : AstBase {
        
        public Astbackup_master_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbackup_service_master_key : AstBase {
        
        public Astbackup_service_master_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astkill_statement : AstBase {
        
        public Astkill_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astkill_process : AstBase {
        
        public Astkill_process(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astkill_query_notification : AstBase {
        
        public Astkill_query_notification(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astkill_stats_job : AstBase {
        
        public Astkill_stats_job(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexecute_statement : AstBase {
        
        public Astexecute_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexecute_body_batch : AstBase {
        
        public Astexecute_body_batch(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexecute_body : AstBase {
        
        public Astexecute_body(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexecute_statement_arg : AstBase {
        
        public Astexecute_statement_arg(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexecute_statement_arg_named : AstBase {
        
        public Astexecute_statement_arg_named(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexecute_statement_arg_unnamed : AstBase {
        
        public Astexecute_statement_arg_unnamed(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexecute_parameter : AstBase {
        
        public Astexecute_parameter(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexecute_var_string : AstBase {
        
        public Astexecute_var_string(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsecurity_statement : AstBase {
        
        public Astsecurity_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astprincipal_id : AstBase {
        
        public Astprincipal_id(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_certificate : AstBase {
        
        public Astcreate_certificate(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexisting_keys : AstBase {
        
        public Astexisting_keys(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astprivate_key_options : AstBase {
        
        public Astprivate_key_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astgenerate_new_keys : AstBase {
        
        public Astgenerate_new_keys(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdate_options : AstBase {
        
        public Astdate_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astopen_key : AstBase {
        
        public Astopen_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astclose_key : AstBase {
        
        public Astclose_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_key : AstBase {
        
        public Astcreate_key(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astkey_options : AstBase {
        
        public Astkey_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalgorithm : AstBase {
        
        public Astalgorithm(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astencryption_mechanism : AstBase {
        
        public Astencryption_mechanism(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdecryption_mechanism : AstBase {
        
        public Astdecryption_mechanism(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astgrant_permission : AstBase {
        
        public Astgrant_permission(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astset_statement : AstBase {
        
        public Astset_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttransaction_statement : AstBase {
        
        public Asttransaction_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astgo_statement : AstBase {
        
        public Astgo_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astuse_statement : AstBase {
        
        public Astuse_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsetuser_statement : AstBase {
        
        public Astsetuser_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astreconfigure_statement : AstBase {
        
        public Astreconfigure_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astshutdown_statement : AstBase {
        
        public Astshutdown_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcheckpoint_statement : AstBase {
        
        public Astcheckpoint_statement(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdbcc_special : AstBase {
        
        public Astdbcc_special(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdbcc_clause : AstBase {
        
        public Astdbcc_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdbcc_command : AstBase {
        
        public Astdbcc_command(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdbcc_options : AstBase {
        
        public Astdbcc_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexecute_clause : AstBase {
        
        public Astexecute_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdeclare_local : AstBase {
        
        public Astdeclare_local(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_type_definition : AstBase {
        
        public Asttable_type_definition(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_type_indices : AstBase {
        
        public Asttable_type_indices(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astxml_type_definition : AstBase {
        
        public Astxml_type_definition(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astxml_schema_collection : AstBase {
        
        public Astxml_schema_collection(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumn_def_table_constraints : AstBase {
        
        public Astcolumn_def_table_constraints(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumn_def_table_constraint : AstBase {
        
        public Astcolumn_def_table_constraint(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumn_definition : AstBase {
        
        public Astcolumn_definition(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumn_definition_element : AstBase {
        
        public Astcolumn_definition_element(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumn_modifier : AstBase {
        
        public Astcolumn_modifier(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmaterialized_column_definition : AstBase {
        
        public Astmaterialized_column_definition(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumn_constraint : AstBase {
        
        public Astcolumn_constraint(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumn_index : AstBase {
        
        public Astcolumn_index(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Aston_partition_or_filegroup : AstBase {
        
        public Aston_partition_or_filegroup(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_constraint : AstBase {
        
        public Asttable_constraint(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astconnection_node : AstBase {
        
        public Astconnection_node(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astprimary_key_options : AstBase {
        
        public Astprimary_key_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astforeign_key_options : AstBase {
        
        public Astforeign_key_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcheck_constraint : AstBase {
        
        public Astcheck_constraint(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Aston_delete : AstBase {
        
        public Aston_delete(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Aston_update : AstBase {
        
        public Aston_update(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_table_index_options : AstBase {
        
        public Astalter_table_index_options(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astalter_table_index_option : AstBase {
        
        public Astalter_table_index_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdeclare_cursor : AstBase {
        
        public Astdeclare_cursor(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdeclare_set_cursor_common : AstBase {
        
        public Astdeclare_set_cursor_common(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdeclare_set_cursor_common_partial : AstBase {
        
        public Astdeclare_set_cursor_common_partial(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfetch_cursor : AstBase {
        
        public Astfetch_cursor(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astset_special : AstBase {
        
        public Astset_special(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astspecial_list : AstBase {
        
        public Astspecial_list(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astconstant_LOCAL_ID : AstBase {
        
        public Astconstant_LOCAL_ID(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexpression : AstBase {
        
        public Astexpression(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astparameter : AstBase {
        
        public Astparameter(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttime_zone : AstBase {
        
        public Asttime_zone(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astprimitive_expression : AstBase {
        
        public Astprimitive_expression(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcase_expression : AstBase {
        
        public Astcase_expression(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astunary_operator_expression : AstBase {
        
        public Astunary_operator_expression(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbracket_expression : AstBase {
        
        public Astbracket_expression(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astconstant_expression : AstBase {
        
        public Astconstant_expression(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsubquery : AstBase {
        
        public Astsubquery(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astwith_expression : AstBase {
        
        public Astwith_expression(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcommon_table_expression : AstBase {
        
        public Astcommon_table_expression(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astupdate_elem : AstBase {
        
        public Astupdate_elem(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astupdate_elem_merge : AstBase {
        
        public Astupdate_elem_merge(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsearch_condition : AstBase {
        
        public Astsearch_condition(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astpredicate : AstBase {
        
        public Astpredicate(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astquery_expression : AstBase {
        
        public Astquery_expression(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsql_union : AstBase {
        
        public Astsql_union(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astquery_specification : AstBase {
        
        public Astquery_specification(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttop_clause : AstBase {
        
        public Asttop_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttop_percent : AstBase {
        
        public Asttop_percent(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttop_count : AstBase {
        
        public Asttop_count(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astorder_by_clause : AstBase {
        
        public Astorder_by_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astselect_order_by_clause : AstBase {
        
        public Astselect_order_by_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfor_clause : AstBase {
        
        public Astfor_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astxml_common_directives : AstBase {
        
        public Astxml_common_directives(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astorder_by_expression : AstBase {
        
        public Astorder_by_expression(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astgrouping_sets_item : AstBase {
        
        public Astgrouping_sets_item(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astgroup_by_item : AstBase {
        
        public Astgroup_by_item(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astoption_clause : AstBase {
        
        public Astoption_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astoption : AstBase {
        
        public Astoption(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astoptimize_for_arg : AstBase {
        
        public Astoptimize_for_arg(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astselect_list : AstBase {
        
        public Astselect_list(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astudt_method_arguments : AstBase {
        
        public Astudt_method_arguments(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astasterisk : AstBase {
        
        public Astasterisk(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumn_elem : AstBase {
        
        public Astcolumn_elem(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astudt_elem : AstBase {
        
        public Astudt_elem(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexpression_elem : AstBase {
        
        public Astexpression_elem(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astselect_list_elem : AstBase {
        
        public Astselect_list_elem(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_sources : AstBase {
        
        public Asttable_sources(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_source : AstBase {
        
        public Asttable_source(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_source_item_joined : AstBase {
        
        public Asttable_source_item_joined(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_source_item : AstBase {
        
        public Asttable_source_item(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astopen_xml : AstBase {
        
        public Astopen_xml(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astopen_json : AstBase {
        
        public Astopen_json(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astjson_declaration : AstBase {
        
        public Astjson_declaration(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astjson_column_declaration : AstBase {
        
        public Astjson_column_declaration(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astschema_declaration : AstBase {
        
        public Astschema_declaration(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumn_declaration : AstBase {
        
        public Astcolumn_declaration(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astchange_table : AstBase {
        
        public Astchange_table(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astchange_table_changes : AstBase {
        
        public Astchange_table_changes(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astchange_table_version : AstBase {
        
        public Astchange_table_version(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astjoin_part : AstBase {
        
        public Astjoin_part(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astjoin_on : AstBase {
        
        public Astjoin_on(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcross_join : AstBase {
        
        public Astcross_join(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astapply_ : AstBase {
        
        public Astapply_(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astpivot : AstBase {
        
        public Astpivot(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astunpivot : AstBase {
        
        public Astunpivot(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astpivot_clause : AstBase {
        
        public Astpivot_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astunpivot_clause : AstBase {
        
        public Astunpivot_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfull_column_name_list : AstBase {
        
        public Astfull_column_name_list(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astrowset_function : AstBase {
        
        public Astrowset_function(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbulk_option : AstBase {
        
        public Astbulk_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astderived_table : AstBase {
        
        public Astderived_table(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfunction_call : AstBase {
        
        public Astfunction_call(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astpartition_function : AstBase {
        
        public Astpartition_function(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfreetext_function : AstBase {
        
        public Astfreetext_function(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfreetext_predicate : AstBase {
        
        public Astfreetext_predicate(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbuilt_in_functions : AstBase {
        
        public Astbuilt_in_functions(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astxml_data_type_methods : AstBase {
        
        public Astxml_data_type_methods(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astvalue_method : AstBase {
        
        public Astvalue_method(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astvalue_call : AstBase {
        
        public Astvalue_call(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astquery_method : AstBase {
        
        public Astquery_method(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astquery_call : AstBase {
        
        public Astquery_call(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexist_method : AstBase {
        
        public Astexist_method(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexist_call : AstBase {
        
        public Astexist_call(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmodify_method : AstBase {
        
        public Astmodify_method(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astmodify_call : AstBase {
        
        public Astmodify_call(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asthierarchyid_call : AstBase {
        
        public Asthierarchyid_call(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asthierarchyid_static_method : AstBase {
        
        public Asthierarchyid_static_method(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astnodes_method : AstBase {
        
        public Astnodes_method(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astswitch_section : AstBase {
        
        public Astswitch_section(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astswitch_search_condition_section : AstBase {
        
        public Astswitch_search_condition_section(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astas_column_alias : AstBase {
        
        public Astas_column_alias(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astas_table_alias : AstBase {
        
        public Astas_table_alias(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_alias : AstBase {
        
        public Asttable_alias(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astwith_table_hints : AstBase {
        
        public Astwith_table_hints(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdeprecated_table_hint : AstBase {
        
        public Astdeprecated_table_hint(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsybase_legacy_hints : AstBase {
        
        public Astsybase_legacy_hints(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsybase_legacy_hint : AstBase {
        
        public Astsybase_legacy_hint(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_hint : AstBase {
        
        public Asttable_hint(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astindex_value : AstBase {
        
        public Astindex_value(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumn_alias_list : AstBase {
        
        public Astcolumn_alias_list(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumn_alias : AstBase {
        
        public Astcolumn_alias(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_value_constructor : AstBase {
        
        public Asttable_value_constructor(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astexpression_list : AstBase {
        
        public Astexpression_list(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astranking_windowed_function : AstBase {
        
        public Astranking_windowed_function(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astaggregate_windowed_function : AstBase {
        
        public Astaggregate_windowed_function(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astanalytic_windowed_function : AstBase {
        
        public Astanalytic_windowed_function(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astall_distinct_expression : AstBase {
        
        public Astall_distinct_expression(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astover_clause : AstBase {
        
        public Astover_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astrow_or_range_clause : AstBase {
        
        public Astrow_or_range_clause(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astwindow_frame_extent : AstBase {
        
        public Astwindow_frame_extent(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astwindow_frame_bound : AstBase {
        
        public Astwindow_frame_bound(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astwindow_frame_preceding : AstBase {
        
        public Astwindow_frame_preceding(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astwindow_frame_following : AstBase {
        
        public Astwindow_frame_following(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcreate_database_option : AstBase {
        
        public Astcreate_database_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdatabase_filestream_option : AstBase {
        
        public Astdatabase_filestream_option(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdatabase_file_spec : AstBase {
        
        public Astdatabase_file_spec(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfile_group : AstBase {
        
        public Astfile_group(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfile_spec : AstBase {
        
        public Astfile_spec(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astentity_name : AstBase {
        
        public Astentity_name(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astentity_name_for_azure_dw : AstBase {
        
        public Astentity_name_for_azure_dw(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astentity_name_for_parallel_dw : AstBase {
        
        public Astentity_name_for_parallel_dw(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfull_table_name : AstBase {
        
        public Astfull_table_name(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Asttable_name : AstBase {
        
        public Asttable_name(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsimple_name : AstBase {
        
        public Astsimple_name(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfunc_proc_name_schema : AstBase {
        
        public Astfunc_proc_name_schema(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfunc_proc_name_database_schema : AstBase {
        
        public Astfunc_proc_name_database_schema(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfunc_proc_name_server_database_schema : AstBase {
        
        public Astfunc_proc_name_server_database_schema(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astddl_object : AstBase {
        
        public Astddl_object(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfull_column_name : AstBase {
        
        public Astfull_column_name(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumn_name_list_with_order : AstBase {
        
        public Astcolumn_name_list_with_order(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astinsert_column_name_list : AstBase {
        
        public Astinsert_column_name_list(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astinsert_column_id : AstBase {
        
        public Astinsert_column_id(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcolumn_name_list : AstBase {
        
        public Astcolumn_name_list(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcursor_name : AstBase {
        
        public Astcursor_name(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Aston_off : AstBase {
        
        public Aston_off(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astclustered : AstBase {
        
        public Astclustered(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astnull_notnull : AstBase {
        
        public Astnull_notnull(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astnull_or_default : AstBase {
        
        public Astnull_or_default(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astscalar_function_name : AstBase {
        
        public Astscalar_function_name(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbegin_conversation_timer : AstBase {
        
        public Astbegin_conversation_timer(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astbegin_conversation_dialog : AstBase {
        
        public Astbegin_conversation_dialog(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcontract_name : AstBase {
        
        public Astcontract_name(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astservice_name : AstBase {
        
        public Astservice_name(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astend_conversation : AstBase {
        
        public Astend_conversation(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astwaitfor_conversation : AstBase {
        
        public Astwaitfor_conversation(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astget_conversation : AstBase {
        
        public Astget_conversation(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astqueue_id : AstBase {
        
        public Astqueue_id(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsend_conversation : AstBase {
        
        public Astsend_conversation(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdata_type : AstBase {
        
        public Astdata_type(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astdefault_value : AstBase {
        
        public Astdefault_value(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astconstant : AstBase {
        
        public Astconstant(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsign : AstBase {
        
        public Astsign(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astkeyword : AstBase {
        
        public Astkeyword(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astid_ : AstBase {
        
        public Astid_(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astsimple_id : AstBase {
        
        public Astsimple_id(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astid_or_string : AstBase {
        
        public Astid_or_string(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astcomparison_operator : AstBase {
        
        public Astcomparison_operator(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astassignment_operator : AstBase {
        
        public Astassignment_operator(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
    
    public partial class Astfile_size : AstBase {
        
        public Astfile_size(Antlr4.Runtime.ParserRuleContext ctx) : 
                base(ctx) {
        }
        
        public override void Accept(Bb.Asts.IAstBaseVisitor visitor) {
        }
    }
}
