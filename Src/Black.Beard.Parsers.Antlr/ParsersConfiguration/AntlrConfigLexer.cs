//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from AntlrConfigLexer.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Bb.ParserConfigurations.Antlr {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public partial class AntlrConfigLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		DOC_COMMENT=1, WS=2, INT=3, STRING_LITERAL=4, NO=5, GENERATE=6, CALCULATED=7, 
		WITH=8, DEFAULT=9, RULE=10, TEMPLATE=11, SELECT=12, WHEN=13, ONE=14, ONLY=15, 
		ANY=16, MANY=17, BLOCK=18, TERM=19, ALTERNATIVE=20, HAS=21, IS=22, NOT=23, 
		IN=24, LIST=25, KIND=26, INHERIT=27, OR=28, AND=29, OUTPUT=30, SEMI=31, 
		COLON=32, LPAREN=33, RPAREN=34, ASSIGN=35, OTHER_=36, CONSTANT_=37, IDENTIFIER_=38, 
		COMMENT_=39, BOOLEAN_=40, STRING_=41, DECIMAL_=42, INTEGER_=43, REAL_=44, 
		HEXA_=45, BINARY_=46, PATTERN_=47, OPERATOR_=48, PONCTUATION_=49, ID=50;
	public const int
		OFF_CHANNEL=2, COMMENT=3;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "OFF_CHANNEL", "COMMENT"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"DOC_COMMENT", "WS", "INT", "STRING_LITERAL", "WSNLCHARS", "NO", "GENERATE", 
		"CALCULATED", "WITH", "DEFAULT", "RULE", "TEMPLATE", "SELECT", "WHEN", 
		"ONE", "ONLY", "ANY", "MANY", "BLOCK", "TERM", "ALTERNATIVE", "HAS", "IS", 
		"NOT", "IN", "LIST", "KIND", "INHERIT", "OR", "AND", "OUTPUT", "SEMI", 
		"COLON", "LPAREN", "RPAREN", "ASSIGN", "OTHER_", "CONSTANT_", "IDENTIFIER_", 
		"COMMENT_", "BOOLEAN_", "STRING_", "DECIMAL_", "INTEGER_", "REAL_", "HEXA_", 
		"BINARY_", "PATTERN_", "OPERATOR_", "PONCTUATION_", "ID", "Id", "Ws", 
		"Hws", "Vws", "BlockComment", "DocComment", "LineComment", "EscSeq", "EscAny", 
		"UnicodeEsc", "DecimalNumeral", "HexDigit", "DecDigit", "BoolLiteral", 
		"CharLiteral", "SQuoteLiteral", "DQuoteLiteral", "USQuoteLiteral", "NameChar", 
		"NameStartChar", "Int", "Esc", "Colon", "DColon", "SQuote", "DQuote", 
		"LParen", "RParen", "LBrace", "RBrace", "LBrack", "RBrack", "RArrow", 
		"Lt", "Gt", "Equal", "Question", "Star", "Plus", "PlusAssign", "Underscore", 
		"Pipe", "Dollar", "Comma", "Semi", "Dot", "Range", "At", "Pound", "Tilde"
	};


	public AntlrConfigLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public AntlrConfigLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'NO'", "'GENERATE'", "'CALCULATED'", "'WITH'", 
		"'DEFAULT'", "'RULE'", "'TEMPLATE'", "'SELECT'", "'WHEN'", "'ONE'", "'ONLY'", 
		"'ANY'", "'MANY'", "'BLOCK'", "'TERM'", "'ALTERNATIVE'", "'HAS'", "'IS'", 
		"'NOT'", "'IN'", "'LIST'", "'KIND'", "'INHERIT'", "'|'", "'&'", "'OUTPUT'", 
		null, null, null, null, null, "'#OTHER'", "'#CONSTANT'", "'#IDENTIFIER'", 
		"'#COMMENT'", "'#BOOLEAN'", "'#STRING'", "'#DECIMAL'", "'#INTEGER'", "'#REAL'", 
		"'#HEXA'", "'#BINARY'", "'#PATTERN'", "'#OPERATOR'", "'#PONCTUATION'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "DOC_COMMENT", "WS", "INT", "STRING_LITERAL", "NO", "GENERATE", 
		"CALCULATED", "WITH", "DEFAULT", "RULE", "TEMPLATE", "SELECT", "WHEN", 
		"ONE", "ONLY", "ANY", "MANY", "BLOCK", "TERM", "ALTERNATIVE", "HAS", "IS", 
		"NOT", "IN", "LIST", "KIND", "INHERIT", "OR", "AND", "OUTPUT", "SEMI", 
		"COLON", "LPAREN", "RPAREN", "ASSIGN", "OTHER_", "CONSTANT_", "IDENTIFIER_", 
		"COMMENT_", "BOOLEAN_", "STRING_", "DECIMAL_", "INTEGER_", "REAL_", "HEXA_", 
		"BINARY_", "PATTERN_", "OPERATOR_", "PONCTUATION_", "ID"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "AntlrConfigLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static AntlrConfigLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,50,718,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,
		7,98,2,99,7,99,2,100,7,100,1,0,1,0,1,0,1,0,1,1,4,1,209,8,1,11,1,12,1,210,
		1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,
		6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,
		1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,
		1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
		1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,
		1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,
		1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
		1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,
		1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,
		1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,
		1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,
		1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,
		1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
		1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,
		1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
		1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,
		1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,
		1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,
		1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
		1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
		1,50,1,50,1,51,1,51,5,51,506,8,51,10,51,12,51,509,9,51,1,52,1,52,3,52,
		513,8,52,1,53,1,53,1,54,1,54,1,55,1,55,1,55,1,55,5,55,523,8,55,10,55,12,
		55,526,9,55,1,55,1,55,1,55,3,55,531,8,55,1,56,1,56,1,56,1,56,1,56,1,56,
		5,56,539,8,56,10,56,12,56,542,9,56,1,56,1,56,1,56,1,56,1,56,3,56,549,8,
		56,1,57,1,57,1,57,1,57,5,57,555,8,57,10,57,12,57,558,9,57,1,58,1,58,1,
		58,1,58,1,58,3,58,565,8,58,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,3,60,
		575,8,60,3,60,577,8,60,3,60,579,8,60,3,60,581,8,60,1,61,1,61,1,61,5,61,
		586,8,61,10,61,12,61,589,9,61,3,61,591,8,61,1,62,1,62,1,63,1,63,1,64,1,
		64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,3,64,606,8,64,1,65,1,65,1,65,3,65,
		611,8,65,1,65,1,65,1,66,1,66,1,66,5,66,618,8,66,10,66,12,66,621,9,66,1,
		66,1,66,1,67,1,67,1,67,5,67,628,8,67,10,67,12,67,631,9,67,1,67,1,67,1,
		68,1,68,1,68,5,68,638,8,68,10,68,12,68,641,9,68,1,69,1,69,1,69,1,69,3,
		69,647,8,69,1,70,1,70,3,70,651,8,70,1,71,1,71,1,71,1,71,1,72,1,72,1,73,
		1,73,1,74,1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,
		1,80,1,80,1,81,1,81,1,82,1,82,1,83,1,83,1,83,1,84,1,84,1,85,1,85,1,86,
		1,86,1,87,1,87,1,88,1,88,1,89,1,89,1,90,1,90,1,90,1,91,1,91,1,92,1,92,
		1,93,1,93,1,94,1,94,1,95,1,95,1,96,1,96,1,97,1,97,1,97,1,98,1,98,1,99,
		1,99,1,100,1,100,2,524,540,0,101,1,1,3,2,5,3,7,4,9,0,11,5,13,6,15,7,17,
		8,19,9,21,10,23,11,25,12,27,13,29,14,31,15,33,16,35,17,37,18,39,19,41,
		20,43,21,45,22,47,23,49,24,51,25,53,26,55,27,57,28,59,29,61,30,63,31,65,
		32,67,33,69,34,71,35,73,36,75,37,77,38,79,39,81,40,83,41,85,42,87,43,89,
		44,91,45,93,46,95,47,97,48,99,49,101,50,103,0,105,0,107,0,109,0,111,0,
		113,0,115,0,117,0,119,0,121,0,123,0,125,0,127,0,129,0,131,0,133,0,135,
		0,137,0,139,0,141,0,143,0,145,0,147,0,149,0,151,0,153,0,155,0,157,0,159,
		0,161,0,163,0,165,0,167,0,169,0,171,0,173,0,175,0,177,0,179,0,181,0,183,
		0,185,0,187,0,189,0,191,0,193,0,195,0,197,0,199,0,201,0,1,0,12,3,0,9,10,
		12,13,32,32,2,0,9,9,32,32,2,0,10,10,12,13,2,0,10,10,13,13,8,0,34,34,39,
		39,92,92,98,98,102,102,110,110,114,114,116,116,1,0,49,57,3,0,48,57,65,
		70,97,102,1,0,48,57,4,0,10,10,13,13,39,39,92,92,4,0,10,10,13,13,34,34,
		92,92,3,0,183,183,768,879,8255,8256,13,0,65,90,97,122,192,214,216,246,
		248,767,880,893,895,8191,8204,8205,8304,8591,11264,12271,12289,55295,63744,
		64975,65008,65533,695,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,
		0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
		1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
		0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
		1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,
		0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,
		1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,
		0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,
		1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,
		0,0,99,1,0,0,0,0,101,1,0,0,0,1,203,1,0,0,0,3,208,1,0,0,0,5,214,1,0,0,0,
		7,216,1,0,0,0,9,218,1,0,0,0,11,220,1,0,0,0,13,223,1,0,0,0,15,232,1,0,0,
		0,17,243,1,0,0,0,19,248,1,0,0,0,21,256,1,0,0,0,23,261,1,0,0,0,25,270,1,
		0,0,0,27,277,1,0,0,0,29,282,1,0,0,0,31,286,1,0,0,0,33,291,1,0,0,0,35,295,
		1,0,0,0,37,300,1,0,0,0,39,306,1,0,0,0,41,311,1,0,0,0,43,323,1,0,0,0,45,
		327,1,0,0,0,47,330,1,0,0,0,49,334,1,0,0,0,51,337,1,0,0,0,53,342,1,0,0,
		0,55,347,1,0,0,0,57,355,1,0,0,0,59,357,1,0,0,0,61,359,1,0,0,0,63,366,1,
		0,0,0,65,368,1,0,0,0,67,370,1,0,0,0,69,372,1,0,0,0,71,374,1,0,0,0,73,376,
		1,0,0,0,75,383,1,0,0,0,77,393,1,0,0,0,79,405,1,0,0,0,81,414,1,0,0,0,83,
		423,1,0,0,0,85,431,1,0,0,0,87,440,1,0,0,0,89,449,1,0,0,0,91,455,1,0,0,
		0,93,461,1,0,0,0,95,469,1,0,0,0,97,478,1,0,0,0,99,488,1,0,0,0,101,501,
		1,0,0,0,103,503,1,0,0,0,105,512,1,0,0,0,107,514,1,0,0,0,109,516,1,0,0,
		0,111,518,1,0,0,0,113,532,1,0,0,0,115,550,1,0,0,0,117,559,1,0,0,0,119,
		566,1,0,0,0,121,569,1,0,0,0,123,590,1,0,0,0,125,592,1,0,0,0,127,594,1,
		0,0,0,129,605,1,0,0,0,131,607,1,0,0,0,133,614,1,0,0,0,135,624,1,0,0,0,
		137,634,1,0,0,0,139,646,1,0,0,0,141,650,1,0,0,0,143,652,1,0,0,0,145,656,
		1,0,0,0,147,658,1,0,0,0,149,660,1,0,0,0,151,663,1,0,0,0,153,665,1,0,0,
		0,155,667,1,0,0,0,157,669,1,0,0,0,159,671,1,0,0,0,161,673,1,0,0,0,163,
		675,1,0,0,0,165,677,1,0,0,0,167,679,1,0,0,0,169,682,1,0,0,0,171,684,1,
		0,0,0,173,686,1,0,0,0,175,688,1,0,0,0,177,690,1,0,0,0,179,692,1,0,0,0,
		181,694,1,0,0,0,183,697,1,0,0,0,185,699,1,0,0,0,187,701,1,0,0,0,189,703,
		1,0,0,0,191,705,1,0,0,0,193,707,1,0,0,0,195,709,1,0,0,0,197,712,1,0,0,
		0,199,714,1,0,0,0,201,716,1,0,0,0,203,204,3,113,56,0,204,205,1,0,0,0,205,
		206,6,0,0,0,206,2,1,0,0,0,207,209,3,105,52,0,208,207,1,0,0,0,209,210,1,
		0,0,0,210,208,1,0,0,0,210,211,1,0,0,0,211,212,1,0,0,0,212,213,6,1,1,0,
		213,4,1,0,0,0,214,215,3,143,71,0,215,6,1,0,0,0,216,217,3,135,67,0,217,
		8,1,0,0,0,218,219,7,0,0,0,219,10,1,0,0,0,220,221,5,78,0,0,221,222,5,79,
		0,0,222,12,1,0,0,0,223,224,5,71,0,0,224,225,5,69,0,0,225,226,5,78,0,0,
		226,227,5,69,0,0,227,228,5,82,0,0,228,229,5,65,0,0,229,230,5,84,0,0,230,
		231,5,69,0,0,231,14,1,0,0,0,232,233,5,67,0,0,233,234,5,65,0,0,234,235,
		5,76,0,0,235,236,5,67,0,0,236,237,5,85,0,0,237,238,5,76,0,0,238,239,5,
		65,0,0,239,240,5,84,0,0,240,241,5,69,0,0,241,242,5,68,0,0,242,16,1,0,0,
		0,243,244,5,87,0,0,244,245,5,73,0,0,245,246,5,84,0,0,246,247,5,72,0,0,
		247,18,1,0,0,0,248,249,5,68,0,0,249,250,5,69,0,0,250,251,5,70,0,0,251,
		252,5,65,0,0,252,253,5,85,0,0,253,254,5,76,0,0,254,255,5,84,0,0,255,20,
		1,0,0,0,256,257,5,82,0,0,257,258,5,85,0,0,258,259,5,76,0,0,259,260,5,69,
		0,0,260,22,1,0,0,0,261,262,5,84,0,0,262,263,5,69,0,0,263,264,5,77,0,0,
		264,265,5,80,0,0,265,266,5,76,0,0,266,267,5,65,0,0,267,268,5,84,0,0,268,
		269,5,69,0,0,269,24,1,0,0,0,270,271,5,83,0,0,271,272,5,69,0,0,272,273,
		5,76,0,0,273,274,5,69,0,0,274,275,5,67,0,0,275,276,5,84,0,0,276,26,1,0,
		0,0,277,278,5,87,0,0,278,279,5,72,0,0,279,280,5,69,0,0,280,281,5,78,0,
		0,281,28,1,0,0,0,282,283,5,79,0,0,283,284,5,78,0,0,284,285,5,69,0,0,285,
		30,1,0,0,0,286,287,5,79,0,0,287,288,5,78,0,0,288,289,5,76,0,0,289,290,
		5,89,0,0,290,32,1,0,0,0,291,292,5,65,0,0,292,293,5,78,0,0,293,294,5,89,
		0,0,294,34,1,0,0,0,295,296,5,77,0,0,296,297,5,65,0,0,297,298,5,78,0,0,
		298,299,5,89,0,0,299,36,1,0,0,0,300,301,5,66,0,0,301,302,5,76,0,0,302,
		303,5,79,0,0,303,304,5,67,0,0,304,305,5,75,0,0,305,38,1,0,0,0,306,307,
		5,84,0,0,307,308,5,69,0,0,308,309,5,82,0,0,309,310,5,77,0,0,310,40,1,0,
		0,0,311,312,5,65,0,0,312,313,5,76,0,0,313,314,5,84,0,0,314,315,5,69,0,
		0,315,316,5,82,0,0,316,317,5,78,0,0,317,318,5,65,0,0,318,319,5,84,0,0,
		319,320,5,73,0,0,320,321,5,86,0,0,321,322,5,69,0,0,322,42,1,0,0,0,323,
		324,5,72,0,0,324,325,5,65,0,0,325,326,5,83,0,0,326,44,1,0,0,0,327,328,
		5,73,0,0,328,329,5,83,0,0,329,46,1,0,0,0,330,331,5,78,0,0,331,332,5,79,
		0,0,332,333,5,84,0,0,333,48,1,0,0,0,334,335,5,73,0,0,335,336,5,78,0,0,
		336,50,1,0,0,0,337,338,5,76,0,0,338,339,5,73,0,0,339,340,5,83,0,0,340,
		341,5,84,0,0,341,52,1,0,0,0,342,343,5,75,0,0,343,344,5,73,0,0,344,345,
		5,78,0,0,345,346,5,68,0,0,346,54,1,0,0,0,347,348,5,73,0,0,348,349,5,78,
		0,0,349,350,5,72,0,0,350,351,5,69,0,0,351,352,5,82,0,0,352,353,5,73,0,
		0,353,354,5,84,0,0,354,56,1,0,0,0,355,356,5,124,0,0,356,58,1,0,0,0,357,
		358,5,38,0,0,358,60,1,0,0,0,359,360,5,79,0,0,360,361,5,85,0,0,361,362,
		5,84,0,0,362,363,5,80,0,0,363,364,5,85,0,0,364,365,5,84,0,0,365,62,1,0,
		0,0,366,367,3,191,95,0,367,64,1,0,0,0,368,369,3,147,73,0,369,66,1,0,0,
		0,370,371,3,155,77,0,371,68,1,0,0,0,372,373,3,157,78,0,373,70,1,0,0,0,
		374,375,3,173,86,0,375,72,1,0,0,0,376,377,5,35,0,0,377,378,5,79,0,0,378,
		379,5,84,0,0,379,380,5,72,0,0,380,381,5,69,0,0,381,382,5,82,0,0,382,74,
		1,0,0,0,383,384,5,35,0,0,384,385,5,67,0,0,385,386,5,79,0,0,386,387,5,78,
		0,0,387,388,5,83,0,0,388,389,5,84,0,0,389,390,5,65,0,0,390,391,5,78,0,
		0,391,392,5,84,0,0,392,76,1,0,0,0,393,394,5,35,0,0,394,395,5,73,0,0,395,
		396,5,68,0,0,396,397,5,69,0,0,397,398,5,78,0,0,398,399,5,84,0,0,399,400,
		5,73,0,0,400,401,5,70,0,0,401,402,5,73,0,0,402,403,5,69,0,0,403,404,5,
		82,0,0,404,78,1,0,0,0,405,406,5,35,0,0,406,407,5,67,0,0,407,408,5,79,0,
		0,408,409,5,77,0,0,409,410,5,77,0,0,410,411,5,69,0,0,411,412,5,78,0,0,
		412,413,5,84,0,0,413,80,1,0,0,0,414,415,5,35,0,0,415,416,5,66,0,0,416,
		417,5,79,0,0,417,418,5,79,0,0,418,419,5,76,0,0,419,420,5,69,0,0,420,421,
		5,65,0,0,421,422,5,78,0,0,422,82,1,0,0,0,423,424,5,35,0,0,424,425,5,83,
		0,0,425,426,5,84,0,0,426,427,5,82,0,0,427,428,5,73,0,0,428,429,5,78,0,
		0,429,430,5,71,0,0,430,84,1,0,0,0,431,432,5,35,0,0,432,433,5,68,0,0,433,
		434,5,69,0,0,434,435,5,67,0,0,435,436,5,73,0,0,436,437,5,77,0,0,437,438,
		5,65,0,0,438,439,5,76,0,0,439,86,1,0,0,0,440,441,5,35,0,0,441,442,5,73,
		0,0,442,443,5,78,0,0,443,444,5,84,0,0,444,445,5,69,0,0,445,446,5,71,0,
		0,446,447,5,69,0,0,447,448,5,82,0,0,448,88,1,0,0,0,449,450,5,35,0,0,450,
		451,5,82,0,0,451,452,5,69,0,0,452,453,5,65,0,0,453,454,5,76,0,0,454,90,
		1,0,0,0,455,456,5,35,0,0,456,457,5,72,0,0,457,458,5,69,0,0,458,459,5,88,
		0,0,459,460,5,65,0,0,460,92,1,0,0,0,461,462,5,35,0,0,462,463,5,66,0,0,
		463,464,5,73,0,0,464,465,5,78,0,0,465,466,5,65,0,0,466,467,5,82,0,0,467,
		468,5,89,0,0,468,94,1,0,0,0,469,470,5,35,0,0,470,471,5,80,0,0,471,472,
		5,65,0,0,472,473,5,84,0,0,473,474,5,84,0,0,474,475,5,69,0,0,475,476,5,
		82,0,0,476,477,5,78,0,0,477,96,1,0,0,0,478,479,5,35,0,0,479,480,5,79,0,
		0,480,481,5,80,0,0,481,482,5,69,0,0,482,483,5,82,0,0,483,484,5,65,0,0,
		484,485,5,84,0,0,485,486,5,79,0,0,486,487,5,82,0,0,487,98,1,0,0,0,488,
		489,5,35,0,0,489,490,5,80,0,0,490,491,5,79,0,0,491,492,5,78,0,0,492,493,
		5,67,0,0,493,494,5,84,0,0,494,495,5,85,0,0,495,496,5,65,0,0,496,497,5,
		84,0,0,497,498,5,73,0,0,498,499,5,79,0,0,499,500,5,78,0,0,500,100,1,0,
		0,0,501,502,3,103,51,0,502,102,1,0,0,0,503,507,3,141,70,0,504,506,3,139,
		69,0,505,504,1,0,0,0,506,509,1,0,0,0,507,505,1,0,0,0,507,508,1,0,0,0,508,
		104,1,0,0,0,509,507,1,0,0,0,510,513,3,107,53,0,511,513,3,109,54,0,512,
		510,1,0,0,0,512,511,1,0,0,0,513,106,1,0,0,0,514,515,7,1,0,0,515,108,1,
		0,0,0,516,517,7,2,0,0,517,110,1,0,0,0,518,519,5,47,0,0,519,520,5,42,0,
		0,520,524,1,0,0,0,521,523,9,0,0,0,522,521,1,0,0,0,523,526,1,0,0,0,524,
		525,1,0,0,0,524,522,1,0,0,0,525,530,1,0,0,0,526,524,1,0,0,0,527,528,5,
		42,0,0,528,531,5,47,0,0,529,531,5,0,0,1,530,527,1,0,0,0,530,529,1,0,0,
		0,531,112,1,0,0,0,532,533,5,47,0,0,533,534,5,47,0,0,534,535,5,42,0,0,535,
		536,5,42,0,0,536,540,1,0,0,0,537,539,9,0,0,0,538,537,1,0,0,0,539,542,1,
		0,0,0,540,541,1,0,0,0,540,538,1,0,0,0,541,548,1,0,0,0,542,540,1,0,0,0,
		543,544,5,42,0,0,544,545,5,42,0,0,545,546,5,47,0,0,546,549,5,47,0,0,547,
		549,5,0,0,1,548,543,1,0,0,0,548,547,1,0,0,0,549,114,1,0,0,0,550,551,5,
		47,0,0,551,552,5,47,0,0,552,556,1,0,0,0,553,555,8,3,0,0,554,553,1,0,0,
		0,555,558,1,0,0,0,556,554,1,0,0,0,556,557,1,0,0,0,557,116,1,0,0,0,558,
		556,1,0,0,0,559,564,3,145,72,0,560,565,7,4,0,0,561,565,3,121,60,0,562,
		565,9,0,0,0,563,565,5,0,0,1,564,560,1,0,0,0,564,561,1,0,0,0,564,562,1,
		0,0,0,564,563,1,0,0,0,565,118,1,0,0,0,566,567,3,145,72,0,567,568,9,0,0,
		0,568,120,1,0,0,0,569,580,5,117,0,0,570,578,3,125,62,0,571,576,3,125,62,
		0,572,574,3,125,62,0,573,575,3,125,62,0,574,573,1,0,0,0,574,575,1,0,0,
		0,575,577,1,0,0,0,576,572,1,0,0,0,576,577,1,0,0,0,577,579,1,0,0,0,578,
		571,1,0,0,0,578,579,1,0,0,0,579,581,1,0,0,0,580,570,1,0,0,0,580,581,1,
		0,0,0,581,122,1,0,0,0,582,591,5,48,0,0,583,587,7,5,0,0,584,586,3,127,63,
		0,585,584,1,0,0,0,586,589,1,0,0,0,587,585,1,0,0,0,587,588,1,0,0,0,588,
		591,1,0,0,0,589,587,1,0,0,0,590,582,1,0,0,0,590,583,1,0,0,0,591,124,1,
		0,0,0,592,593,7,6,0,0,593,126,1,0,0,0,594,595,7,7,0,0,595,128,1,0,0,0,
		596,597,5,116,0,0,597,598,5,114,0,0,598,599,5,117,0,0,599,606,5,101,0,
		0,600,601,5,102,0,0,601,602,5,97,0,0,602,603,5,108,0,0,603,604,5,115,0,
		0,604,606,5,101,0,0,605,596,1,0,0,0,605,600,1,0,0,0,606,130,1,0,0,0,607,
		610,3,151,75,0,608,611,3,117,58,0,609,611,8,8,0,0,610,608,1,0,0,0,610,
		609,1,0,0,0,611,612,1,0,0,0,612,613,3,151,75,0,613,132,1,0,0,0,614,619,
		3,151,75,0,615,618,3,117,58,0,616,618,8,8,0,0,617,615,1,0,0,0,617,616,
		1,0,0,0,618,621,1,0,0,0,619,617,1,0,0,0,619,620,1,0,0,0,620,622,1,0,0,
		0,621,619,1,0,0,0,622,623,3,151,75,0,623,134,1,0,0,0,624,629,3,153,76,
		0,625,628,3,117,58,0,626,628,8,9,0,0,627,625,1,0,0,0,627,626,1,0,0,0,628,
		631,1,0,0,0,629,627,1,0,0,0,629,630,1,0,0,0,630,632,1,0,0,0,631,629,1,
		0,0,0,632,633,3,153,76,0,633,136,1,0,0,0,634,639,3,151,75,0,635,638,3,
		117,58,0,636,638,8,8,0,0,637,635,1,0,0,0,637,636,1,0,0,0,638,641,1,0,0,
		0,639,637,1,0,0,0,639,640,1,0,0,0,640,138,1,0,0,0,641,639,1,0,0,0,642,
		647,3,141,70,0,643,647,2,48,57,0,644,647,3,183,91,0,645,647,7,10,0,0,646,
		642,1,0,0,0,646,643,1,0,0,0,646,644,1,0,0,0,646,645,1,0,0,0,647,140,1,
		0,0,0,648,651,3,183,91,0,649,651,7,11,0,0,650,648,1,0,0,0,650,649,1,0,
		0,0,651,142,1,0,0,0,652,653,5,105,0,0,653,654,5,110,0,0,654,655,5,116,
		0,0,655,144,1,0,0,0,656,657,5,92,0,0,657,146,1,0,0,0,658,659,5,58,0,0,
		659,148,1,0,0,0,660,661,5,58,0,0,661,662,5,58,0,0,662,150,1,0,0,0,663,
		664,5,39,0,0,664,152,1,0,0,0,665,666,5,34,0,0,666,154,1,0,0,0,667,668,
		5,40,0,0,668,156,1,0,0,0,669,670,5,41,0,0,670,158,1,0,0,0,671,672,5,123,
		0,0,672,160,1,0,0,0,673,674,5,125,0,0,674,162,1,0,0,0,675,676,5,91,0,0,
		676,164,1,0,0,0,677,678,5,93,0,0,678,166,1,0,0,0,679,680,5,45,0,0,680,
		681,5,62,0,0,681,168,1,0,0,0,682,683,5,60,0,0,683,170,1,0,0,0,684,685,
		5,62,0,0,685,172,1,0,0,0,686,687,5,61,0,0,687,174,1,0,0,0,688,689,5,63,
		0,0,689,176,1,0,0,0,690,691,5,42,0,0,691,178,1,0,0,0,692,693,5,43,0,0,
		693,180,1,0,0,0,694,695,5,43,0,0,695,696,5,61,0,0,696,182,1,0,0,0,697,
		698,5,95,0,0,698,184,1,0,0,0,699,700,5,124,0,0,700,186,1,0,0,0,701,702,
		5,36,0,0,702,188,1,0,0,0,703,704,5,44,0,0,704,190,1,0,0,0,705,706,5,59,
		0,0,706,192,1,0,0,0,707,708,5,46,0,0,708,194,1,0,0,0,709,710,5,46,0,0,
		710,711,5,46,0,0,711,196,1,0,0,0,712,713,5,64,0,0,713,198,1,0,0,0,714,
		715,5,35,0,0,715,200,1,0,0,0,716,717,5,126,0,0,717,202,1,0,0,0,26,0,210,
		507,512,524,530,540,548,556,564,574,576,578,580,587,590,605,610,617,619,
		627,629,637,639,646,650,2,0,3,0,0,2,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Bb.ParserConfigurations.Antlr
